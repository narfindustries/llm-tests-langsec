module Modbus;

import spicy;

public type Message = unit {
    function_code: uint8;
    
    switch ( function_code ) {
        1 -> read_coils: ReadRequest;
        2 -> read_discrete_inputs: ReadRequest;
        3 -> read_holding_registers: ReadRequest;
        4 -> read_input_registers: ReadRequest;
        5 -> write_single_coil: WriteSingleCoilRequest;
        6 -> write_single_register: WriteSingleRegisterRequest;
        15 -> write_multiple_coils: WriteMultipleCoilsRequest;
        16 -> write_multiple_registers: WriteMultipleRegistersRequest;
        default -> unknown: bytes;
    };
}

type ReadRequest = unit {
    start_address: uint16;
    quantity: uint16;
}

type WriteSingleCoilRequest = unit {
    address: uint16;
    value: uint16;
}

type WriteSingleRegisterRequest = unit {
    address: uint16;
    value: uint16;
}

type WriteMultipleCoilsRequest = unit {
    start_address: uint16;
    quantity: uint16;
    byte_count: uint8;
    coil_values: bytes(byte_count);
}

type WriteMultipleRegistersRequest = unit {
    start_address: uint16;
    quantity: uint16;
    byte_count: uint8;
    register_values: bytes(byte_count);
}