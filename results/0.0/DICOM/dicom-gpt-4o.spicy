module DICOM;

import spicy;
import zeek;

public type DICOMMessage = unit {
    preamble: bytes &length=128;
    prefix: bytes &length=4 &check=prefix == b"DICM";
    elements: vector<DICOMElement>;

    on %init {
        if ( prefix != b"DICM" ) {
            spicy::print("Invalid DICOM prefix");
            return;
        }
    }
};

public type DICOMElement = unit {
    tag: uint16;
    vr: bytes &length=2;
    length: uint32;
    value: bytes &length=length;
};

public global parse_dicom: function(input: bytes) : DICOMMessage {
    return DICOMMessage(input);
}

public hook zeek_init() {
    local input = read_file("/path/to/dicom/file");
    if ( input == "" ) {
        spicy::print("Failed to read DICOM file");
        return;
    }

    local dicom = parse_dicom(input);
    spicy::print(fmt("Parsed DICOM with %d elements", |dicom.elements|));
}
