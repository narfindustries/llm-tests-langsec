module HTTP;

import spicy;

type Version = unit {
    major: uint8;
    minor: uint8;
};

type RequestLine = unit {
    method: bytes &until(b" ");
    uri: bytes &until(b" ");
    version: Version;
};

type StatusLine = unit {
    version: Version;
    code: uint16;
    reason: bytes &eod;
};

type Header = unit {
    name: bytes &until(b":");
    _: bytes &size=1;  // Consume the colon
    value: bytes &eod;
};

type Headers = unit {
    headers: Header[] &eod;
};

type MessageBody = unit {
    content: bytes &size=self.body_length;
    body_length: uint64;
};

type Request = unit {
    requestLine: RequestLine;
    headers: Headers;
    body: MessageBody &optional;
};

type Response = unit {
    statusLine: StatusLine;
    headers: Headers;
    body: MessageBody &optional;
};

type HTTP = unit {
    is_request: bool;
    request: Request &if(self.is_request);
    response: Response &if(!self.is_request);
};