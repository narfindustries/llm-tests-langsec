module JPEG;

public type JPEG = unit {
    soi: SOI,
    segments: list<Segment>,
    eoi: EOI
};

type SOI = unit {
    marker: uint16 &equals= 0xffd8
};

type EOI = unit {
    marker: uint16 &equals= 0xffd9
};

type Segment = unit {
    marker: uint16,
    length: uint16 &convert= (self - 2),
    body: bytes &size= length
} &switch(marker) {
    0xffe0 => APP0,
    0xffe1 => APP1,
    0xffe2 => APP2,
    0xfffe => COM,
    0xffdb => DQT,
    0xffc0 => SOF0,
    0xffc2 => SOF2,
    0xffc4 => DHT,
    0xffda => SOS,
    0xffdd => DRI,
    0xffd0 => RST,
    0xffd1 => RST,
    0xffd2 => RST,
    0xffd3 => RST,
    0xffd4 => RST,
    0xffd5 => RST,
    0xffd6 => RST,
    0xffd7 => RST
};

type APP0 = unit {
    identifier: string &restof= "JFIF" | "JFXX"
};

type APP1 = unit {
    exif_data: bytes &size= length
};

type APP2 = unit {
    icc_profile: bytes &size= length
};

type COM = unit {
    comment: string &size= length
};

type DQT = unit {
    tables: list<QuantizationTable> &until= eos
};

type QuantizationTable = unit {
    info: uint8,
    table: bytes &size= 64
};

type SOF0 = unit {
    precision: uint8,
    height: uint16,
    width: uint16,
    components: list<Component> &count= uint8
};

type SOF2 = SOF0;

type Component = unit {
    id: uint8,
    sampling_factors: uint8,
    quantization_table_id: uint8
};

type DHT = unit {
    tables: list<HuffmanTable> &until= eos
};

type HuffmanTable = unit {
    info: uint8,
    lengths: bytes &size= 16,
    values: bytes &size= (sum(lengths))
};

type SOS = unit {
    components: list<SOSComponent> &count= uint8,
    spectral_selection_start: uint8,
    spectral_selection_end: uint8,
    successive_approximation: uint8,
    scan_data: bytes &until= eos
};

type SOSComponent = unit {
    id: uint8,
    huffman_table_ids: uint8
};

type DRI = unit {
    restart_interval: uint16
};

type RST = unit {
    marker: uint16
};