#ifndef ARP_GEMINI_1_5_FLASH_SPICY
#define ARP_GEMINI_1_5_FLASH_SPICY

#include <stdint.h>

// Define structures for ARP packets
typedef struct {
    uint16_t htype;
    uint16_t ptype;
    uint8_t hlen;
    uint8_t plen;
    uint16_t oper;
    uint8_t sha[6];
    uint32_t spa;
    uint8_t tha[6];
    uint32_t tpa;
} arp_packet_t;


// Function to parse ARP packets
arp_packet_t parse_arp(uint8_t* data, int len) {
    arp_packet_t arp;
    if (len < sizeof(arp_packet_t)) {
        // Handle short packets appropriately (e.g., set default values or return an error)
        memset(&arp, 0, sizeof(arp_packet_t));
        return arp;
    }
    memcpy(&arp, data, sizeof(arp_packet_t));
    return arp;
}


// Example usage (replace with your actual Zeek code)
event zeek_arp_event(uint8_t* data, int len) {
    arp_packet_t parsed_arp = parse_arp(data, len);
    // Process the parsed ARP packet here
    // ... your Zeek logic to handle the ARP packet ...
}

#endif // ARP_GEMINI_1_5_FLASH_SPICY
