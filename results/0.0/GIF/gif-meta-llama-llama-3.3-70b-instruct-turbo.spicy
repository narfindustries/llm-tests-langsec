module GIF;

type gif_signature = byte[3] align(1) = "GIF";
type gif_version = byte[3] align(1) = "87a" | "89a";

type gif_packed_fields = uint8 {
  global_color_table_flag: bool @bit(0),
  color_resolution: uint8 @bits(1..3),
  sort_flag: bool @bit(4),
  size_of_global_color_table: uint8 @bits(5..7)
};

type rgb_color = struct {
  red: byte;
  green: byte;
  blue: byte;
};

type global_color_table = array of rgb_color align(3);

type image_packed_fields = uint8 {
  local_color_table_flag: bool @bit(0),
  interlace_flag: bool @bit(1),
  sort_flag: bool @bit(2),
  size_of_local_color_table: uint8 @bits(3..7)
};

type local_color_table = array of rgb_color align(3);

type lzw_minimum_code_size = byte min(2) max(9);

type lzw_compressed_data = byte[];

type image_descriptor = struct {
  image_separator: byte = 0x2C;
  image_left_position: uint16le;
  image_top_position: uint16le;
  image_width: uint16le;
  image_height: uint16le;
  packed_fields: image_packed_fields;
  local_color_table: local_color_table align(3) optional;
  lzw_minimum_code_size: lzw_minimum_code_size;
  lzw_compressed_data: lzw_compressed_data;
};

type comment_extension = struct {
  extension_introducer: byte = 0x21;
  comment_label: byte = 0xFE;
  comment_data: byte[];
  comment_terminator: byte = 0x00;
};

type plain_text_extension = struct {
  extension_introducer: byte = 0x21;
  plain_text_label: byte = 0x01;
  text_grid_left: byte;
  text_grid_top: byte;
  text_grid_width: byte;
  text_grid_height: byte;
  character_cell_width: byte;
  character_cell_height: byte;
  text_foreground_color: byte;
  text_background_color: byte;
  plain_text_data: byte[];
};

type application_extension = struct {
  extension_introducer: byte = 0x21;
  application_label: byte = 0xFF;
  application_identifier: byte[8];
  application_authentication_code: byte[3];
  application_data: byte[];
  application_terminator: byte = 0x00;
};

type gif_file = struct {
  signature: gif_signature;
  version: gif_version;
  logical_screen_width: uint16le;
  logical_screen_height: uint16le;
  packed_fields: gif_packed_fields;
  background_color_index: byte;
  pixel_aspect_ratio: byte;
  global_color_table: global_color_table align(3) optional;
  image_descriptors: array of image_descriptor;
  extensions: array of (
    comment_extension |
    plain_text_extension |
    application_extension
  ) optional;
  trailer: byte = 0x3B;
};

let file = gif_file;