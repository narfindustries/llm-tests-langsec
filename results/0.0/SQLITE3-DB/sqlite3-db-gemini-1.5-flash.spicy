module sqlite3_db;

type sqlite3_header {
  magic: string[16] = "SQLite format 3\000";
  page_size: uint16;
  write_version: uint16;
  read_version: uint16;
  reserved_byte: uint8;
  max_page_count: uint32;
  text_encoding: uint32;
  user_version: uint32;
  incremental_vacuum_mode: uint32;
  application_id: uint64;
  version_valid_for_all_pages: uint32;
  page_count: uint32;
  checksum_flag: uint32;
  free_page_count: uint32;
  schema_version: uint32;
  schema_format: uint32;
  default_page_cache_size: uint32;
  large_file_support: uint32;
  page_size_extension: uint32;
  reserved_bytes: bytes[20];
}

type sqlite3_page_header {
  page_number: uint32;
  page_type: uint8;
  free_block_count: uint8;
  cell_count: uint16;
  cell_pointer_offset: uint16;
  checksum: uint32;
}

type sqlite3_cell {
  header: uint16;
  payload_length: uint32;
  payload: bytes;
}

type sqlite3_page {
  header: sqlite3_page_header;
  cells: record {
    count: uint16;
    cell: sqlite3_cell[count];
  };
  free_space: bytes;
}

type sqlite3_database {
  header: sqlite3_header;
  pages: sqlite3_page[];
}
