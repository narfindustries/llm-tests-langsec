module SQLITE3-DB;

import spicy;

public type Header = unit {
    magic: bytes &size=16;
    page_size: uint16;
    write_version: uint8;
    read_version: uint8;
    reserved_space: uint8;
    max_payload_fraction: uint8;
    min_payload_fraction: uint8;
    leaf_payload_fraction: uint8;
    file_change_counter: uint32;
    db_size_pages: uint32;
    first_freelist_trunk_page: uint32;
    total_freelist_pages: uint32;
    schema_cookie: uint32;
    schema_format: uint32;
    default_page_cache_size: uint32;
    largest_root_btree_page: uint32;
    text_encoding: uint32;
    user_version: uint32;
    incremental_vacuum_mode: uint32;
    application_id: uint32;
    reserved: bytes &size=20;
    version_valid_for: uint32;
    sqlite_version_number: uint32;

    on %done {
        print "SQLite3 Database Header:";
        print self.magic;
        print "Page Size:", self.page_size;
        print "File Size (pages):", self.db_size_pages;
        print "Schema Version:", self.schema_cookie;
        print "User Version:", self.user_version;
    }
};

public type Page = unit {
    header: uint8;
    data: bytes &eod;

    on %done {
        print "Page Type:", self.header;
    }
};

type Record = unit {
    length: uint32;
    content: bytes &size=self.length;
};

public type Database = unit {
    header: Header;
    pages: Page[];
};