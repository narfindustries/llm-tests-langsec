module SQLite3DB;

import spicy;
import zeek;

type SQLite3Header = unit {
    magic: bytes &size=16 &check=$$ == "\x53\x51\x4C\x69\x74\x65\x20\x66\x6F\x72\x6D\x61\x74\x20\x33\x00";
    page_size: uint16;
    file_format_write_version: uint8;
    file_format_read_version: uint8;
    reserved_space: uint8;
    max_embedded_payload_fraction: uint8;
    min_embedded_payload_fraction: uint8;
    leaf_payload_fraction: uint8;
    file_change_counter: uint32;
    database_size: uint32;
    first_freelist_trunk_page: uint32;
    total_freelist_pages: uint32;
    schema_cookie: uint32;
    schema_format_number: uint32;
    default_page_cache_size: uint32;
    largest_btree_root_page: uint32;
    text_encoding: uint32;
    user_version: uint32;
    incremental_vacuum_mode: uint32;
    application_id: uint32;
    reserved: bytes &size=20;
    version_valid_for: uint32;
    sqlite_version_number: uint32;
};

public type SQLite3DB = unit {
    header: SQLite3Header;
    on %done {
        print fmt("SQLite3 Database Header: %s", header);
    }
};

public module Parser = spicy::Parser for SQLite3DB {
    event zeek_init() {
        print "SQLite3DB parser initialized.";
    }
}
