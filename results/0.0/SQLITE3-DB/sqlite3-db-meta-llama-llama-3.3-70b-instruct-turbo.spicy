# SQLite Database File Format Specification

type SQLite3_DB {
    magic: uint32 = 0x53514c69; # "SQLi" in big-endian
    page_size: uint16;
    write_version: uint8;
    read_version: uint8;
    reserved: uint8;
    max_embedded_payload: uint8;
    min_embedded_payload: uint8;
    leaf_payload: uint8;
    file_change: uint8;
    db_size: uint32;

    # Page Header
    page_type: uint8;
    first_freeblock: uint16;
    num_cells: uint16;
    cell_offset: uint16;
    num_free_bytes: uint8;
    right_child: uint32;

    # Cell Structure
    cell_type: uint8;
    data_length: uint16;
    key_length: uint16;
    left_child: uint32;
    row_id: uint32;
    data: bytes => data_length;
    key: bytes => key_length;

    # B-Tree Page
    btree_page_type: uint8;
    btree_first_freeblock: uint16;
    btree_num_cells: uint16;
    btree_cell_offset: uint16;
    btree_num_free_bytes: uint8;
    btree_right_child: uint32;

    # B-Tree Cell
    btree_cell_type: uint8;
    btree_data_length: uint16;
    btree_key_length: uint16;
    btree_left_child: uint32;
    btree_row_id: uint32;
    btree_data: bytes => btree_data_length;
    btree_key: bytes => btree_key_length;
}

# SQLite Database File Format Parser
parser SQLite3_DB_Parser {
    magic: uint32 = 0x53514c69; # "SQLi" in big-endian
    page_size: uint16;
    write_version: uint8;
    read_version: uint8;
    reserved: uint8;
    max_embedded_payload: uint8;
    min_embedded_payload: uint8;
    leaf_payload: uint8;
    file_change: uint8;
    db_size: uint32;

    # Page Header
    page_type: uint8;
    first_freeblock: uint16;
    num_cells: uint16;
    cell_offset: uint16;
    num_free_bytes: uint8;
    right_child: uint32;

    # Cell Structure
    cell_type: uint8;
    data_length: uint16;
    key_length: uint16;
    left_child: uint32;
    row_id: uint32;
    data: bytes => data_length;
    key: bytes => key_length;

    # B-Tree Page
    btree_page_type: uint8;
    btree_first_freeblock: uint16;
    btree_num_cells: uint16;
    btree_cell_offset: uint16;
    btree_num_free_bytes: uint8;
    btree_right_child: uint32;

    # B-Tree Cell
    btree_cell_type: uint8;
    btree_data_length: uint16;
    btree_key_length: uint16;
    btree_left_child: uint32;
    btree_row_id: uint32;
    btree_data: bytes => btree_data_length;
    btree_key: bytes => btree_key_length;
}

# SQLite Database File Format Compiler
compiler SQLite3_DB_Compiler {
    # Compile the SQLite Database File Format
    compile: SQLite3_DB_Parser;
}