module ZIP;

type LocalFileHeader = struct {
  local_header_signature: uint32,
  version_needed_to_extract: uint16,
  general_purpose_bit_flag: uint16,
  compression_method: uint16,
  last_mod_time: uint16,
  last_mod_date: uint16,
  crc32: uint32,
  compressed_size: uint32,
  uncompressed_size: uint32,
  filename_length: uint16,
  extra_field_length: uint16,
  filename: string,
  extra_field: bytes
};

type CentralDirectoryHeader = struct {
  central_header_signature: uint32,
  version_made_by: uint16,
  version_needed_to_extract: uint16,
  general_purpose_bit_flag: uint16,
  compression_method: uint16,
  last_mod_time: uint16,
  last_mod_date: uint16,
  crc32: uint32,
  compressed_size: uint32,
  uncompressed_size: uint32,
  filename_length: uint16,
  extra_field_length: uint16,
  file_comment_length: uint16,
  disk_number_start: uint16,
  internal_attributes: uint16,
  external_attributes: uint32,
  relative_offset_local_header: uint32,
  filename: string,
  extra_field: bytes,
  file_comment: string
};

type EndOfCentralDirectoryRecord = struct {
  end_of_central_dir_signature: uint32,
  number_of_this_disk: uint16,
  number_of_the_disk_with_the_start_of_the_central_directory: uint16,
  total_number_of_entries_in_the_central_directory_on_this_disk: uint16,
  total_number_of_entries_in_the_central_directory: uint16,
  size_of_the_central_directory: uint32,
  offset_of_start_of_central_directory_with_respect_to_the_starting_disk_number: uint32,
  zipfile_comment_length: uint16,
  zipfile_comment: string
};

type ZIP = struct {
  local_file_headers: array[LocalFileHeader],
  central_directory_headers: array[CentralDirectoryHeader],
  end_of_central_directory_record: EndOfCentralDirectoryRecord
};