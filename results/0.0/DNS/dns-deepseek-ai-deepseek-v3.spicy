module DNS;

import spicy;

type Header = unit {
    id: uint16;
    flags: uint16 &chunked;
    qr: uint1;
    opcode: uint4;
    aa: uint1;
    tc: uint1;
    rd: uint1;
    ra: uint1;
    z: uint3;
    rcode: uint4;
    qdcount: uint16;
    ancount: uint16;
    nscount: uint16;
    arcount: uint16;
};

type Question = unit {
    qname: bytes &until=b"\x00";
    qtype: uint16;
    qclass: uint16;
};

type ResourceRecord = unit {
    name: bytes &until=b"\x00";
    type: uint16;
    class: uint16;
    ttl: uint32;
    rdlength: uint16;
    rdata: bytes &length=rdlength;
};

type Message = unit {
    header: Header;
    questions: Question[header.qdcount];
    answers: ResourceRecord[header.ancount];
    authorities: ResourceRecord[header.nscount];
    additional: ResourceRecord[header.arcount];
};

on Message::%message -> bool {
    print message;
    return true;
}