module DNS;

type DNSHeader = unit {
    id: uint16;
    flags: bitfield(16) {
        qr: uint8 &bits=1;
        opcode: uint8 &bits=4;
        aa: uint8 &bits=1;
        tc: uint8 &bits=1;
        rd: uint8 &bits=1;
        ra: uint8 &bits=1;
        z: uint8 &bits=3;
        rcode: uint8 &bits=4;
    };
    qdcount: uint16;
    ancount: uint16;
    nscount: uint16;
    arcount: uint16;
};

type DNSQuestion = unit {
    qname: bytes &until=b"\x00";
    qtype: uint16;
    qclass: uint16;
};

type DNSResourceRecord = unit {
    name: bytes &until=b"\x00";
    type: uint16;
    class: uint16;
    ttl: uint32;
    rdlength: uint16;
    rdata: bytes &length=rdlength;
};

type DNSMessage = unit {
    header: DNSHeader;
    questions: array of DNSQuestion &length=header.qdcount;
    answers: array of DNSResourceRecord &length=header.ancount;
    authorities: array of DNSResourceRecord &length=header.nscount;
    additionals: array of DNSResourceRecord &length=header.arcount;
};