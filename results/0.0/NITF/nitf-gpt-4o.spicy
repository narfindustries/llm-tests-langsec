module NITF;

type NITFFile = unit {
    file_header: FileHeader;
    image_segments: array of ImageSegment(file_header.num_image_segments);
    graphic_segments: array of GraphicSegment(file_header.num_graphic_segments);
    text_segments: array of TextSegment(file_header.num_text_segments);
    data_extension_segments: array of DataExtensionSegment(file_header.num_data_extension_segments);
    reserved_extension_segments: array of ReservedExtensionSegment(file_header.num_reserved_extension_segments);
};

type FileHeader = unit {
    fheader: bytes &size=9; # "NITF02.10"
    clevel: bytes &size=2; # Complexity Level
    stype: bytes &size=4; # Standard Type
    ostaid: bytes &size=10; # Originating Station ID
    fdt: bytes &size=14; # File Date and Time
    ftitle: bytes &size=80; # File Title
    fsclas: bytes &size=1; # File Security Classification
    fsclsy: bytes &size=2; # File Security Classification System
    fscode: bytes &size=11; # File Codewords
    fsctlh: bytes &size=2; # File Control and Handling
    fsrel: bytes &size=20; # File Releasing Instructions
    fsdctp: bytes &size=2; # File Declassification Type
    fsdcdt: bytes &size=8; # File Declassification Date
    fsdcxm: bytes &size=4; # File Declassification Exemption
    fsdg: bytes &size=1; # File Downgrade
    fsdgdt: bytes &size=8; # File Downgrade Date
    fscltx: bytes &size=43; # File Classification Text
    fscatp: bytes &size=1; # File Classification Authority Type
    fscaut: bytes &size=40; # File Classification Authority
    fscrsn: bytes &size=1; # File Classification Reason
    fssrdt: bytes &size=8; # File Security Source Date
    fsctln: bytes &size=15; # File Security Control Number
    num_image_segments: uint16; # Number of Image Segments
    num_graphic_segments: uint16; # Number of Graphic Segments
    num_text_segments: uint16; # Number of Text Segments
    num_data_extension_segments: uint16; # Number of Data Extension Segments
    num_reserved_extension_segments: uint16; # Number of Reserved Extension Segments
};

type ImageSegment = unit {
    im: bytes &size=2; # Image Identifier
    iid1: bytes &size=10; # Image Identifier 1
    idatim: bytes &size=14; # Image Date and Time
    tgtid: bytes &size=17; # Target Identifier
    iid2: bytes &size=80; # Image Identifier 2
    isclas: bytes &size=1; # Image Security Classification
    isclsy: bytes &size=2; # Image Security Classification System
    iscode: bytes &size=11; # Image Codewords
    isctlh: bytes &size=2; # Image Control and Handling
    isrel: bytes &size=20; # Image Releasing Instructions
    isdctp: bytes &size=2; # Image Declassification Type
    isdcdt: bytes &size=8; # Image Declassification Date
    isdcxm: bytes &size=4; # Image Declassification Exemption
    isdg: bytes &size=1; # Image Downgrade
    isdgdt: bytes &size=8; # Image Downgrade Date
    iscltx: bytes &size=43; # Image Classification Text
    iscatp: bytes &size=1; # Image Classification Authority Type
    iscaut: bytes &size=40; # Image Classification Authority
    iscrsn: bytes &size=1; # Image Classification Reason
    issrdt: bytes &size=8; # Image Security Source Date
    isctln: bytes &size=15; # Image Security Control Number
};

type GraphicSegment = unit {
    # Similar fields as ImageSegment
};

type TextSegment = unit {
    # Similar fields as ImageSegment
};

type DataExtensionSegment = unit {
    # Custom fields defined by the user
};

type ReservedExtensionSegment = unit {
    # Reserved for future use or specific implementations
};