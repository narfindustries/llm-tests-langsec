module NTP;

import spicy;

public type NTPv4 = unit {
    flags: bitfield(8) {
        leap_indicator: 0..1;    # 2 bits
        version: 2..4;           # 3 bits
        mode: 5..7;             # 3 bits
    };

    stratum: uint8;
    poll: int8;
    precision: int8;
    root_delay: int32;
    root_dispersion: uint32;
    reference_id: bytes &size=4;
    reference_timestamp: uint64;
    origin_timestamp: uint64;
    receive_timestamp: uint64;
    transmit_timestamp: uint64;

    var has_extensions: bool;
    var extensions: vector<ExtensionField>;

    on %done {
        if ( self.input().length() > 48 ) {
            self.has_extensions = True;
            while ( self.input().length() >= 4 ) {
                local ext = ExtensionField;
                self.extensions.push_back(ext);
            }
        }
    }
};

type ExtensionField = unit {
    field_type: uint16;
    length: uint16;
    value: bytes &size=self.length - 4;
    padding: bytes &size=(4 - (self.length % 4)) % 4;
};

type MAC = unit {
    key_id: uint32;
    message_digest: bytes &size=20;  # 160 bits
};

public type LeapIndicator = enum {
    NO_WARNING = 0,
    LAST_MINUTE_61_SEC = 1,
    LAST_MINUTE_59_SEC = 2,
    ALARM_CONDITION = 3
};

public type Mode = enum {
    RESERVED = 0,
    SYMMETRIC_ACTIVE = 1,
    SYMMETRIC_PASSIVE = 2,
    CLIENT = 3,
    SERVER = 4,
    BROADCAST = 5,
    CONTROL = 6,
    PRIVATE = 7
};