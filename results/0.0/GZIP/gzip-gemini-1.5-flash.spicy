#ifndef _GZIP_GEMINI_1_5_FLASH_SPICY_H_
#define _GZIP_GEMINI_1_5_FLASH_SPICY_H_

#include <zeek/analyzer/protocol/http.zeek>

global GzipGemini15Flash: record {
    http_header: http::header;
    payload: string;
};

event http_request_start(http_header: http::header) {
    if (http_header.method == "GET" && contains(http_header.uri, ".gz")) {
        GzipGemini15Flash::payload = "";
        GzipGemini15Flash::http_header = http_header;
    }
}

event http_response_start(http_header: http::header) {
    if (GzipGemini15Flash::http_header != undef) {
        if (http_header.status == 200) {
            // Handle gzip decompression here.  This requires external library.
            // Placeholder for decompression logic.  Replace with actual decompression.
            GzipGemini15Flash::payload = "Decompressed payload would go here";
            print GzipGemini15Flash;
            GzipGemini15Flash::http_header = undef;
        } else {
            GzipGemini15Flash::http_header = undef;
        }
    }
}

#endif
