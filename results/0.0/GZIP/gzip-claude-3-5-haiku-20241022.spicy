module gzip;

import spicy;

public type Gzip = struct {
    magic: bytes &size=2 &validate=($$.data()[0] == 0x1f && $$.data()[1] == 0x8b);
    compression_method: uint8 &validate=(self.compression_method == 0x08);
    flags: Flags;
    mtime: uint32;
    extra_flags: uint8;
    os: OperatingSystem;
    extra_length: optional<uint16>;
    extra_data: optional<bytes>;
    filename: optional<bytes>;
    comment: optional<bytes>;
    header_crc: optional<uint16>;
    compressed_data: bytes;
    crc32: uint32;
    uncompressed_size: uint32;

    on %init {
        if ( self.flags.extra ) {
            self.extra_length = self.input().read<uint16>();
            self.extra_data = self.input().read(self.extra_length);
        }
        if ( self.flags.filename ) {
            self.filename = self.input().read_until(b"\x00");
        }
        if ( self.flags.comment ) {
            self.comment = self.input().read_until(b"\x00");
        }
        if ( self.flags.header_crc ) {
            self.header_crc = self.input().read<uint16>();
        }
    }
};

type Flags = struct {
    text: bool;
    header_crc: bool;
    extra: bool;
    filename: bool;
    comment: bool;
    encrypted: bool;
    reserved: uint2;
} &bitfield;

enum OperatingSystem {
    FAT = 0,
    AMIGA = 1,
    VMS = 2,
    UNIX = 3,
    VMSCMS = 4,
    ATARI = 5,
    HPFS = 6,
    MACINTOSH = 7,
    ZSYSTEM = 8,
    CPM = 9,
    TOPS20 = 10,
    NTFS = 11,
    QDOS = 12,
    RISCOS = 13,
    UNKNOWN = 255
};