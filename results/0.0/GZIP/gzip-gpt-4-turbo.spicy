module GZIP;

public type GzipHeader = unit {
    id1: uint8;
    id2: uint8;
    cm: uint8;
    flg: uint8;
    mtime: uint32;
    xfl: uint8;
    os: uint8;

    extra_field_present: bool &requires=($$ == (self.flg & 0x04) != 0);
    fname_present: bool &requires=($$ == (self.flg & 0x08) != 0);
    fcomment_present: bool &requires=($$ == (self.flg & 0x10) != 0);
    fhcrc_present: bool &requires=($$ == (self.flg & 0x02) != 0);

    extra: bytes &size=extra_len if (self.extra_field_present);
    fname: bytes &until=b"\x00" if (self.fname_present);
    fcomment: bytes &until=b"\x00" if (self.fcomment_present);
    fhcrc: uint16 if (self.fhcrc_present);
};

public type GzipMember = unit {
    header: GzipHeader;
    compressed_data: bytes &eod;
    crc32: uint32;
    isize: uint32;
};

public type GzipFile = unit {
    members: GzipMember[] &eod;
};