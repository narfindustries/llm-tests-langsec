module SQLite3DB;

import spicy;
import zeek;

type SQLite3Magic = bytes &size=16;

type SQLite3Header = unit {
    magic: SQLite3Magic;
    page_size: uint16;
    write_version: uint8;
    read_version: uint8;
    reserved_space: uint8;
    max_payload_fraction: uint8;
    min_payload_fraction: uint8;
    leaf_payload_fraction: uint8;
    file_change_counter: uint32;
    db_size_in_pages: uint32;
    first_freelist_page: uint32;
    freelist_page_count: uint32;
    schema_cookie: uint32;
    schema_format_number: uint32;
    default_page_cache_size: uint32;
    largest_btree_root_page: uint32;
    text_encoding: uint32;
    user_version: uint32;
    incremental_vacuum_mode: uint32;
    application_id: uint32;
    reserved: bytes &size=20;
    version_valid_for: uint32;
    sqlite_version_number: uint32;
};

public type SQLite3 = unit {
    header: SQLite3Header;
} &validate=(self.header.magic == "\x53\x51\x4C\x69\x74\x65\x20\x66\x6F\x72\x6D\x61\x74\x20\x33\x00");

public event sqlite3_db_header(header: SQLite3Header);

on %init {
    zeek_print("SQLite3 Spicy Parser Initialized");
}

hook sqlite3_db_header(header: SQLite3Header) {
    print fmt("SQLite3 Database Header Parsed: page_size=%d, file_change_counter=%d",
              header.page_size, header.file_change_counter);
}