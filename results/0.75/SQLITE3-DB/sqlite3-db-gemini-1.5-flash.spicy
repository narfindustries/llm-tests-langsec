module sqlite3_db;

type sqlite3_header {
  magic: string[16];
  pageSize: uint32;
  fileFormat: uint32;
  reservedSpace: uint32;
  maxRootPage: uint32;
  textEncoding: uint32;
  userVersion: uint32;
  incrementalVacuum: uint32;
  schemaVersion: uint32;
  pageSize2: uint32; 
  writeVersion: uint32;
  readOnly: uint32;
  integrityCheck: uint32;
  sectorSize: uint32;
  pageReserved: uint32;
  maxPageCount: uint32;
  schemaVersion2: uint32; 
  unused1: uint32;
  unused2: uint32;
}

type sqlite3_page_header {
  pageType: uint16;
  page_number: uint16;
  free_bytes: uint16;
  cell_count: uint16;
  first_free_block: uint16;
  unused: uint16;
  checksum: uint32;
}

type sqlite3_cell {
  header: uint16;
  payload_length: uint32;
  row_id: uint64;
  payload: bytes;
}


type sqlite3_page {
  header: sqlite3_page_header;
  cells: record { cell: sqlite3_cell; }[];
  free_space: bytes;
}

type sqlite3_database {
  header: sqlite3_header;
  pages: sqlite3_page[];
  freelist: uint32[]; 
}
