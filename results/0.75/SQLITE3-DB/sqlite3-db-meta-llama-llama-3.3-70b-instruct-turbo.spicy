# Spicy specification for parsing SQLite database files
# Requires Zeek Spicy compiler (spicyc)

module sqlite3-db-meta;

# Import required modules
import ./sqlite3-types;
import ./sqlite3-headers;
import ./sqlite3-pages;

# Define the SQLite database file structure
type SQLite3_DB_META: record {
    # Header section (first 100 bytes)
    header: SQLite3_Header,

    # Page 1: Database file metadata (root page)
    page_1: SQLite3_Page,

    # Page 2-5: Database file metadata (non-root pages)
    pages: array[4] of SQLite3_Page,

    # Remaining pages: Database file data
    data_pages: array[*] of SQLite3_Page,
} &byteorder=little-endian;

# Define the SQLite database header
type SQLite3_Header: record {
    # Database file header (first 16 bytes)
    magic: uint16,
    file_format: uint16,
    page_size: uint16,
    write_version: uint8,
    read_version: uint8,
    reserved_1: uint8,
    max_payload: uint8,
    min_payload: uint8,
    leaf_payload: uint8,
    file_change: uint32,
    db_size: uint32,
    reserved_2: uint32,
    version_valid: uint8,
    version_number: uint8,
    version_valid_2: uint8,
    version_number_2: uint8,
} &byteorder=little-endian;

# Define the SQLite database page structure
type SQLite3_Page: record {
    # Page header (first 12 bytes)
    page_type: uint8,
    first_free: uint16,
    cell_count: uint16,
    cell_offset: uint16,
    frag_free: uint8,
    right_child: uint32,

    # Page data
    cells: array[*] of SQLite3_Cell,
} &byteorder=little-endian;

# Define the SQLite database cell structure
type SQLite3_Cell: record {
    # Cell header (first 6 bytes)
    payload_len: uint16,
    rowid: uint32,
    data: array[payload_len] of uint8,
} &byteorder=little-endian;