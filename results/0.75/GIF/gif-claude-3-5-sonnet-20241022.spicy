module GIF;

public type Header = unit {
    signature: bytes &size=3;
    version: bytes &size=3;
};

type LogicalScreenDescriptor = unit {
    width: uint16;
    height: uint16;
    packed: bitfield(8) {
        global_color_table_flag: 0;
        color_resolution: 1..3;
        sort_flag: 4;
        size_global_color_table: 5..7;
    };
    background_color_index: uint8;
    pixel_aspect_ratio: uint8;
    : GlobalColorTable if (self.packed.global_color_table_flag == 1);
};

type GlobalColorTable = unit {
    colors: bytes &size=(3 * pow(2, (self.parent.packed.size_global_color_table + 1)));
};

type LocalColorTable = unit {
    colors: bytes &size=(3 * pow(2, (self.parent.packed.size_local_color_table + 1)));
};

type ImageDescriptor = unit {
    separator: uint8;
    left: uint16;
    top: uint16;
    width: uint16;
    height: uint16;
    packed: bitfield(8) {
        local_color_table_flag: 0;
        interlace_flag: 1;
        sort_flag: 2;
        reserved: 3..4;
        size_local_color_table: 5..7;
    };
    : LocalColorTable if (self.packed.local_color_table_flag == 1);
    lzw_minimum_code_size: uint8;
    : DataSubBlocks;
};

type GraphicControlExtension = unit {
    introducer: uint8 &requires=0x21;
    label: uint8 &requires=0xF9;
    block_size: uint8 &requires=0x04;
    packed: bitfield(8) {
        reserved: 0..2;
        disposal_method: 3..5;
        user_input_flag: 6;
        transparent_color_flag: 7;
    };
    delay_time: uint16;
    transparent_color_index: uint8;
    terminator: uint8 &requires=0x00;
};

type CommentExtension = unit {
    introducer: uint8 &requires=0x21;
    label: uint8 &requires=0xFE;
    : DataSubBlocks;
};

type PlainTextExtension = unit {
    introducer: uint8 &requires=0x21;
    label: uint8 &requires=0x01;
    block_size: uint8 &requires=0x0C;
    text_grid_left: uint16;
    text_grid_top: uint16;
    text_grid_width: uint16;
    text_grid_height: uint16;
    cell_width: uint8;
    cell_height: uint8;
    text_fg_color_index: uint8;
    text_bg_color_index: uint8;
    : DataSubBlocks;
};

type ApplicationExtension = unit {
    introducer: uint8 &requires=0x21;
    label: uint8 &requires=0xFF;
    block_size: uint8 &requires=0x0B;
    application_identifier: bytes &size=8;
    authentication_code: bytes &size=3;
    : DataSubBlocks;
};

type DataSubBlocks = unit {
    blocks: DataSubBlock[];
};

type DataSubBlock = unit {
    size: uint8;
    data: bytes &size=self.size if (self.size != 0);
};

type Block = unit {
    : ImageDescriptor if (peek(uint8) == 0x2C);
    : GraphicControlExtension if (peek(uint8) == 0x21 && peek(uint16) == 0x21F9);
    : CommentExtension if (peek(uint8) == 0x21 && peek(uint16) == 0x21FE);
    : PlainTextExtension if (peek(uint8) == 0x21 && peek(uint16) == 0x2101);
    : ApplicationExtension if (peek(uint8) == 0x21 && peek(uint16) == 0x21FF);
    : uint8 &requires=0x3B if (peek(uint8) == 0x3B);
};

public type GIF = unit {
    header: Header;
    screen_descriptor: LogicalScreenDescriptor;
    blocks: Block[] &until($last);
    trailer: uint8 &requires=0x3B;
};