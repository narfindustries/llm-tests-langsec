module GIF;

import spicy;

public type Header = unit {
    signature: bytes(3) where $$ == b"GIF";
    version: bytes(3) where $$ == b"87a" || $$ == b"89a";
};

public type LogicalScreenDescriptor = unit {
    width: uint16;
    height: uint16;
    packed_fields: bitfield(1) {
        global_color_table_flag: 1;
        color_resolution: 3;
        sort_flag: 1;
        global_color_table_size: 3;
    };
    background_color_index: uint8;
    pixel_aspect_ratio: uint8;
};

public type ColorTableEntry = unit {
    red: uint8;
    green: uint8;
    blue: uint8;
};

public type GlobalColorTable = unit {
    entries: vector<ColorTableEntry>;
};

public type ImageDescriptor = unit {
    separator: uint8 where $$ == 0x2C;
    left_position: uint16;
    top_position: uint16;
    width: uint16;
    height: uint16;
    packed_fields: bitfield(1) {
        local_color_table_flag: 1;
        interlace_flag: 1;
        sort_flag: 1;
        local_color_table_size: 3;
    };
};

public type LocalColorTable = unit {
    entries: vector<ColorTableEntry>;
};

public type GraphicControlExtension = unit {
    extension_introducer: uint8 where $$ == 0x21;
    graphic_control_label: uint8 where $$ == 0xF9;
    block_size: uint8 where $$ == 4;
    packed_fields: bitfield(1) {
        reserved: 3;
        disposal_method: 3;
        user_input_flag: 1;
        transparent_color_flag: 1;
    };
    delay_time: uint16;
    transparent_color_index: uint8;
    block_terminator: uint8 where $$ == 0;
};

public type PlainTextExtension = unit {
    extension_introducer: uint8 where $$ == 0x21;
    plain_text_label: uint8 where $$ == 0x01;
    block_size: uint8 where $$ == 12;
    text_grid_left_position: uint16;
    text_grid_top_position: uint16;
    text_grid_width: uint16;
    text_grid_height: uint16;
    text_foreground_color_index: uint8;
    text_background_color_index: uint8;
    plain_text_data: bytes;
    block_terminator: uint8 where $$ == 0;
};

public type ApplicationExtension = unit {
    extension_introducer: uint8 where $$ == 0x21;
    application_label: uint8 where $$ == 0xFF;
    block_size: uint8 where $$ == 11;
    application_identifier: bytes(8);
    authentication_code: bytes(3);
    application_data: bytes;
    block_terminator: uint8 where $$ == 0;
};

public type CommentExtension = unit {
    extension_introducer: uint8 where $$ == 0x21;
    comment_label: uint8 where $$ == 0xFE;
    comment_data: bytes;
    block_terminator: uint8 where $$ == 0;
};

public type Trailer = unit {
    terminator: uint8 where $$ == 0x3B;
};

public type GIFFile = unit {
    header: Header;
    logical_screen_descriptor: LogicalScreenDescriptor;
    global_color_table: optional<GlobalColorTable>;
    
    blocks: vector<variant> {
        graphic_control_extension: GraphicControlExtension,
        image_descriptor: ImageDescriptor,
        local_color_table: optional<LocalColorTable>,
        plain_text_extension: PlainTextExtension,
        application_extension: ApplicationExtension,
        comment_extension: CommentExtension
    }* until ( $$.is_type<Trailer>() );

    trailer: Trailer;
};

on GIFFile::global_color_table {
    if ( self.logical_screen_descriptor.packed_fields.global_color_table_flag ) {
        self.global_color_table = GlobalColorTable();
    }
}

on GIFFile::blocks {
    for ( block in self.blocks ) {
        if ( block.image_descriptor && block.image_descriptor.packed_fields.local_color_table_flag ) {
            block.local_color_table = LocalColorTable();
        }
    }
}