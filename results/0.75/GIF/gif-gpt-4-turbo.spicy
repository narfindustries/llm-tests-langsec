module GIF;

public type Color = unit {
    R: uint8;
    G: uint8;
    B: uint8;
};

public type LogicalScreenDescriptor = unit {
    screenWidth: uint16;
    screenHeight: uint16;
    packedFields: uint8;
    backgroundColorIndex: uint8;
    pixelAspectRatio: uint8;

    hasGlobalColorTable: bool := (packedFields & 0x80) != 0;
    globalColorTableSize: uint := 2 ** ((packedFields & 0x07) + 1);
};

public type ImageDescriptor = unit {
    imageSeparator: uint8;
    imageLeftPosition: uint16;
    imageTopPosition: uint16;
    imageWidth: uint16;
    imageHeight: uint16;
    packedFields: uint8;

    hasLocalColorTable: bool := (packedFields & 0x80) != 0;
    localColorTableSize: uint := 2 ** ((packedFields & 0x07) + 1);
    isInterlaced: bool := (packedFields & 0x40) != 0;
};

public type GraphicControlExtension = unit {
    blockSize: uint8;
    packedFields: uint8;
    delayTime: uint16;
    transparentColorIndex: uint8;
    terminator: uint8;
};

public type ApplicationExtension = unit {
    blockSize: uint8;
    applicationIdentifier: bytes &size=8;
    applicationAuthCode: bytes &size=3;
    data: bytes &eod;
};

public type CommentExtension = unit {
    commentData: bytes &eod;
};

public type Extension = unit {
    introducer: uint8;
    label: uint8;
    content: variant switch (self.label) {
        case 0xF9: GraphicControlExtension;
        case 0xFE: CommentExtension;
        case 0xFF: ApplicationExtension;
        default: bytes &eod;
    };
};

public type Block = unit {
    introducer: uint8;
    content: variant switch (self.introducer) {
        case 0x2C: ImageDescriptor;
        case 0x21: Extension;
        default: bytes &eod;
    };
};

public type GIFFile = unit {
    header: bytes &size=6;
    logicalScreenDescriptor: LogicalScreenDescriptor;
    globalColorTable: Color[] &size=self.logicalScreenDescriptor.globalColorTableSize &if=self.logicalScreenDescriptor.hasGlobalColorTable;
    blocks: Block[] &until=(self.input().peek() as uint8) == 0x3B;
    trailer: uint8;
};