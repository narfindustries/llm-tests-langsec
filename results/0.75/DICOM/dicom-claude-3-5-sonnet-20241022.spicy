module DICOM;

public type PDU = unit {
    preamble: bytes &size=128;
    prefix: bytes &size=4 &requires=b"DICM";
    elements: DataElement[];
};

type DataElement = unit {
    tag_group: uint16;
    tag_element: uint16;
    vr: VR if (tag_group != 0xFFFE);
    length_field: LengthField(self.vr.value);
    value: bytes &size=self.length_field.length;
};

type LengthField = unit(vr: bytes) {
    length: uint32 if (vr in [b"OB", b"OW", b"OF", b"SQ", b"UT", b"UN"]) else uint16;
};

type VR = unit {
    value: bytes &size=2;
} &requires=(self.value == b"AE" || self.value == b"AS" || self.value == b"AT" ||
            self.value == b"CS" || self.value == b"DA" || self.value == b"DS" ||
            self.value == b"DT" || self.value == b"FL" || self.value == b"FD" ||
            self.value == b"IS" || self.value == b"LO" || self.value == b"LT" ||
            self.value == b"OB" || self.value == b"OF" || self.value == b"OW" ||
            self.value == b"PN" || self.value == b"SH" || self.value == b"SL" ||
            self.value == b"SQ" || self.value == b"SS" || self.value == b"ST" ||
            self.value == b"TM" || self.value == b"UI" || self.value == b"UL" ||
            self.value == b"UN" || self.value == b"US" || self.value == b"UT");

type SequenceItem = unit {
    tag: uint32 &requires=0xFFFEE000;
    length: uint32;
    data: bytes &size=self.length if (self.length != 0xFFFFFFFF);
    items: DataElement[] if (self.length != 0xFFFFFFFF);
    delim: SequenceDelimiter if (self.length == 0xFFFFFFFF);
};

type SequenceDelimiter = unit {
    tag: uint32 &requires=0xFFFEE0DD;
    length: uint32 &requires=0;
};