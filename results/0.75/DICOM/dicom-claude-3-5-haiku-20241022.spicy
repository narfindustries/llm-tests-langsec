module DICOM;

public type DicomHeader = unit {
    preamble: bytes;
    magic: bytes;

    header_length: uint32;
    header_version: uint16;
    transfer_syntax: bytes;
    application_context: bytes;
    calling_ae_title: bytes;
    called_ae_title: bytes;
    maximum_length: uint32;
    implementation_version: bytes;
};

type PatientModule = unit {
    patient_name: bytes;
    patient_id: bytes;
    patient_birth_date: bytes;
    patient_sex: bytes;
    patient_age: bytes;
    patient_weight: double;
};

type StudyModule = unit {
    study_instance_uid: bytes;
    study_date: bytes;
    study_time: bytes;
    accession_number: bytes;
    referring_physician_name: bytes;
    study_description: bytes;
};

type SeriesModule = unit {
    modality: bytes;
    series_number: uint16;
    series_description: bytes;
    series_instance_uid: bytes;
    series_date: bytes;
    series_time: bytes;
};

type ImageModule = unit {
    sop_class_uid: bytes;
    sop_instance_uid: bytes;
    image_number: uint16;
    rows: uint16;
    columns: uint16;
    pixel_data: bytes;
    bits_allocated: uint16;
    photometric_interpretation: bytes;
    window_center: double;
    window_width: double;
};

type TransferSyntax = enum {
    IMPLICIT_LITTLE_ENDIAN,
    EXPLICIT_LITTLE_ENDIAN,
    EXPLICIT_BIG_ENDIAN
};

type Modality = enum {
    CT,
    MR,
    US,
    XA
};

public type DICOM = unit {
    header: DicomHeader;
    patient: PatientModule;
    study: StudyModule;
    series: SeriesModule;
    image: ImageModule;
};