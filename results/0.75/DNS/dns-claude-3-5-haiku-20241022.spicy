module DNS;

import spicy;

public type Header = unit {
    id: uint16;
    flags: bitfield(16) {
        qr: 1;
        opcode: 4;
        aa: 1;
        tc: 1;
        rd: 1;
        ra: 1;
        z: 3;
        rcode: 4;
    };
    qdcount: uint16;
    ancount: uint16;
    nscount: uint16;
    arcount: uint16;
};

public type DNSName = unit {
    name: list<bytes>;
};

public type Question = unit {
    name: DNSName;
    qtype: uint16;
    qclass: uint16;
};

public type ResourceRecord = unit {
    name: DNSName;
    type: uint16;
    class: uint16;
    ttl: uint32;
    rdlength: uint16;
    rdata: bytes(self.rdlength);
};

public type Message = unit {
    header: Header;
    questions: Question[] &count=(self.header.qdcount);
    answers: ResourceRecord[] &count=(self.header.ancount);
    authorities: ResourceRecord[] &count=(self.header.nscount);
    additional: ResourceRecord[] &count=(self.header.arcount);
};

public function parse(data: bytes) : Message = {
    return Message(data);
};