module TLSClientHello;

type ProtocolVersion : record {
  major : uint8;
  minor : uint8;
};

type Random : byte[32];

type CipherSuite : uint16;

type ExtensionType : uint16;

type Extension : record {
  extension_type : ExtensionType;
  extension_length : uint16;
  extension_data : bytestring &length=extension_length;
};

type SupportedVersions : record {
  version_list_length : uint8;
  version_list : ProtocolVersion[version_list_length];
};

type SupportedGroups : record {
  group_list_length : uint16;
  group_list : uint16[group_list_length];
};

type KeyShareEntry : record {
  group : uint16;
  key_exchange_length : uint16;
  key_exchange_data : bytestring &length=key_exchange_length;
};

type KeyShare : record {
  client_shares_length : uint16;
  client_shares : KeyShareEntry[client_shares_length];
};

type ClientHello : record {
  legacy_version : ProtocolVersion;
  random : Random;
  legacy_session_id_length : uint8;
  legacy_session_id : bytestring &length=legacy_session_id_length;
  cipher_suites_length : uint16;
  cipher_suites : CipherSuite[cipher_suites_length/2];
  legacy_compression_methods_length : uint8;
  legacy_compression_methods : uint8[legacy_compression_methods_length];
  extensions_length : uint16;
  extensions : Extension[extensions_length/4];
};

let tls_client_hello : ClientHello &byteorder=littleendian;