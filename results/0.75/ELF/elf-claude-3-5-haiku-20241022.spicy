module ELF;

import spicy;

public type File = unit {
    magic: bytes(4) &requires(self.magic == b"\x7fELF");
    class: uint8;
    data_encoding: uint8;
    version: uint8;
    os_abi: uint8;
    abi_version: uint8;
    padding: bytes(7);
    type: uint16;
    machine: uint16;
    elf_version: uint32;
    entry_point: uint64 &convert=$$.type == 2 ? $$.entry_point : 0;
    program_header_offset: uint64;
    section_header_offset: uint64;
    flags: uint32;
    header_size: uint16;
    program_header_size: uint16;
    program_header_count: uint16;
    section_header_size: uint16;
    section_header_count: uint16;
    section_header_str_index: uint16;

    program_headers: list<ProgramHeader>(self.program_header_count);
    section_headers: list<SectionHeader>(self.section_header_count);

    on %done { 
        print self; 
    }
};

type ProgramHeader = unit {
    type: uint32;
    flags: uint32;
    offset: uint64;
    virtual_address: uint64;
    physical_address: uint64;
    file_size: uint64;
    memory_size: uint64;
    alignment: uint64;
};

type SectionHeader = unit {
    name_offset: uint32;
    type: uint32;
    flags: uint64;
    address: uint64;
    offset: uint64;
    size: uint64;
    link: uint32;
    info: uint32;
    address_alignment: uint64;
    entry_size: uint64;
};