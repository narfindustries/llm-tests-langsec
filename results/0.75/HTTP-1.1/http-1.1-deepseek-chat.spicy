module HTTP;

import spicy;

public type Version = unit {
    major: uint8;
    minor: uint8;
};

public type RequestLine = unit {
    method: bytes &eod;
    uri: bytes &eod;
    version: Version;
};

public type Header = unit {
    name: bytes &eod;
    value: bytes &eod;
};

public type Headers = unit {
    headers: Header[] &until($$ == b"\r\n");
};

public type Request = unit {
    request_line: RequestLine;
    headers: Headers;
    body: bytes &eod;
};

public type ResponseLine = unit {
    version: Version;
    status_code: uint16;
    reason_phrase: bytes &eod;
};

public type Response = unit {
    response_line: ResponseLine;
    headers: Headers;
    body: bytes &eod;
};

public type HTTP = unit {
    request: Request;
    response: Response;
};

on HTTP::Request::%done {
    print self.request_line.method, self.request_line.uri, self.request_line.version;
    for (h in self.headers.headers)
        print h.name, h.value;
    print self.body;
}

on HTTP::Response::%done {
    print self.response_line.version, self.response_line.status_code, self.response_line.reason_phrase;
    for (h in self.headers.headers)
        print h.name, h.value;
    print self.body;
}