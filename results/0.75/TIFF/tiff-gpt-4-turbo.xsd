<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0/"
           targetNamespace="http://example.com/tiff"
           xmlns:tns="http://example.com/tiff">

  <xs:include schemaLocation="DFDLGeneralFormat.xsd"/>

  <xs:element name="TIFFFile" dfdl:lengthKind="implicit">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="byteOrder" type="xs:string" dfdl:length="2" dfdl:encoding="US-ASCII" dfdl:initiator="II" dfdl:terminator="MM"/>
        <xs:element name="magicNumber" type="xs:short" dfdl:length="2" dfdl:byteOrder="bigEndian">
          <xs:simpleType>
            <xs:restriction base="xs:short">
              <xs:enumeration value="42"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:element>
        <xs:element name="offsetToIFD" type="xs:int" dfdl:length="4" dfdl:byteOrder="{ ../byteOrder = 'II' }? 'littleEndian' : 'bigEndian'"/>
        <xs:element name="IFD" type="tns:IFDType" dfdl:occursCountKind="fixed" dfdl:occursCount="1"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:complexType name="IFDType">
    <xs:sequence>
      <xs:element name="numEntries" type="xs:short" dfdl:length="2" dfdl:byteOrder="{ ../../byteOrder = 'II' }? 'littleEndian' : 'bigEndian'"/>
      <xs:element name="entry" maxOccurs="unbounded" minOccurs="1" dfdl:occursCountKind="expression" dfdl:occursCount="{ ../numEntries }">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="tag" type="xs:short" dfdl:length="2" dfdl:byteOrder="{ ../../../byteOrder = 'II' }? 'littleEndian' : 'bigEndian'"/>
            <xs:element name="type" type="xs:short" dfdl:length="2" dfdl:byteOrder="{ ../../../byteOrder = 'II' }? 'littleEndian' : 'bigEndian'"/>
            <xs:element name="count" type="xs:int" dfdl:length="4" dfdl:byteOrder="{ ../../../byteOrder = 'II' }? 'littleEndian' : 'bigEndian'"/>
            <xs:element name="valueOrOffset" type="xs:int" dfdl:length="4" dfdl:byteOrder="{ ../../../byteOrder = 'II' }? 'littleEndian' : 'bigEndian'"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>