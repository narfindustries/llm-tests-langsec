module NITF;

type FileHeader = struct {
  fhrl: uint32;
  fhrt: string(0..2);
  ffv: uint16;
  cl: uint8;
  std: string(0..25);
  on: string(0..24);
  opn: string(0..12);
  fsc: string(0..1);
  scs: string(0..1);
  sg: string(0..1);
  ri: string(0..3);
  dd: string(0..8);
  or_: string(0..1);
  fn: string(0..24);
  fts: string(0..12);
};

type ImageHeader = struct {
  ihrl: uint32;
  ihrt: string(0..2);
  iid: string(0..10);
  idt: string(0..8);
  isc: string(0..1);
  iscs: string(0..1);
  isg: string(0..1);
  isrc: string(0..10);
  icat: string(0..1);
  iyt: string(0..4);
  irep: string(0..2);
  ibpp: uint16;
  ipt: string(0..3);
  ipj: string(0..3);
  ipo: string(0..3);
};

type ImageData = struct {
  idrl: uint32;
  idrt: string(0..2);
  idata: bytes;
};

type DataExtensionSegment = struct {
  desl: uint32;
  dest: string(0..2);
  destt: string(0..2);
  desd: bytes;
};

type TREHeader = struct {
  trehl: uint32;
  tret: string(0..3);
};

type TextSegment = struct {
  txtl: uint32;
  txt: bytes;
};

type ReservedSegment = struct {
  rsrvl: uint32;
  rsrv: bytes;
};

type NITF = struct {
  file_header: FileHeader;
  image_headers: array[ImageHeader];
  image_data: array[ImageData];
  data_extension_segments: array[DataExtensionSegment];
  tre_headers: array[TREHeader];
  text_segments: array[TextSegment];
  reserved_segments: array[ReservedSegment];
};

grammar FileHeader = parse FileHeader;
grammar ImageHeader = parse ImageHeader;
grammar ImageData = parse ImageData;
grammar DataExtensionSegment = parse DataExtensionSegment;
grammar TREHeader = parse TREHeader;
grammar TextSegment = parse TextSegment;
grammar ReservedSegment = parse ReservedSegment;

grammar NITF = 
  file_header: FileHeader;
  image_headers: array[ImageHeader];
  image_data: array[ImageData];
  data_extension_segments: array[DataExtensionSegment];
  tre_headers: array[TREHeader];
  text_segments: array[TextSegment];
  reserved_segments: array[ReservedSegment] 
= {
  parse FileHeader;
  parse array[ImageHeader];
  parse array[ImageData];
  parse array[DataExtensionSegment];
  parse array[TREHeader];
  parse array[TextSegment];
  parse array[ReservedSegment]
};