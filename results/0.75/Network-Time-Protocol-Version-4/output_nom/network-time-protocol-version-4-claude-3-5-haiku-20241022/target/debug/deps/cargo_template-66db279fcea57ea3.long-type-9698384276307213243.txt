(impl FnMut((&[u8], usize)) -> Result<((&[u8], usize), (LeapIndicator, _, NtpMode)), nom::Err<nom::error::Error<(&[u8], usize)>>>, fn((&[u8], usize)) -> Result<((&[u8], usize), u8), nom::Err<nom::error::Error<(&[u8], usize)>>> {nom::number::streaming::be_u8::<(&[u8], usize), nom::error::Error<(&[u8], usize)>>}, for<'a> fn(&'a [u8]) -> Result<(&'a [u8], u8), nom::Err<nom::error::Error<&'a [u8]>>>, for<'a> fn(&'a [u8]) -> Result<(&'a [u8], u8), nom::Err<nom::error::Error<&'a [u8]>>>, fn((&[u8], usize)) -> Result<((&[u8], usize), u32), nom::Err<nom::error::Error<(&[u8], usize)>>> {nom::number::streaming::be_u32::<(&[u8], usize), nom::error::Error<(&[u8], usize)>>}, fn((&[u8], usize)) -> Result<((&[u8], usize), u32), nom::Err<nom::error::Error<(&[u8], usize)>>> {nom::number::streaming::be_u32::<(&[u8], usize), nom::error::Error<(&[u8], usize)>>}, impl Fn((&[u8], usize)) -> Result<((&[u8], usize), (&[u8], usize)), nom::Err<nom::error::Error<(&[u8], usize)>>>, fn((&[u8], usize)) -> Result<((&[u8], usize), u64), nom::Err<nom::error::Error<(&[u8], usize)>>> {nom::number::streaming::be_u64::<(&[u8], usize), nom::error::Error<(&[u8], usize)>>}, fn((&[u8], usize)) -> Result<((&[u8], usize), u64), nom::Err<nom::error::Error<(&[u8], usize)>>> {nom::number::streaming::be_u64::<(&[u8], usize), nom::error::Error<(&[u8], usize)>>}, fn((&[u8], usize)) -> Result<((&[u8], usize), u64), nom::Err<nom::error::Error<(&[u8], usize)>>> {nom::number::streaming::be_u64::<(&[u8], usize), nom::error::Error<(&[u8], usize)>>}, fn((&[u8], usize)) -> Result<((&[u8], usize), u64), nom::Err<nom::error::Error<(&[u8], usize)>>> {nom::number::streaming::be_u64::<(&[u8], usize), nom::error::Error<(&[u8], usize)>>})
