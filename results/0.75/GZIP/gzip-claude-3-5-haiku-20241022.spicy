module gzip;

import spicy;

public type Gzip = struct {
    magic: bytes &size=2 &validate=($$.data[0] == 0x1f && $$.data[1] == 0x8b);
    compression_method: uint8 &validate=($$ == 0x08);
    flags: Flags;
    modification_time: uint32;
    extra_flags: uint8;
    os_type: uint8;
    extra_fields: optional<ExtraFields>;
    original_filename: optional<string> &null_terminated;
    file_comment: optional<string> &null_terminated;
    header_crc: optional<uint16>;
    compressed_data: bytes;
    crc32: uint32;
    original_size: uint32;
};

type Flags = struct {
    text: bool;
    crc: bool;
    extra: bool;
    name: bool;
    comment: bool;
    reserved1: bool;
    reserved2: bool;
    reserved3: bool;
} &bit_sized(8);

type ExtraFields = struct {
    length: uint16;
    data: bytes &size=(|self.length|);
};

public type GzipFile = struct {
    file: Gzip;
};