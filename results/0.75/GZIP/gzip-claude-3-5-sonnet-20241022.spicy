module GZIP;

public type Extra = unit {
    xlen: uint16;
    extra_data: bytes &size=self.xlen;
};

public type Filename = unit {
    filename: bytes &until=b"\x00";
};

public type Comment = unit {
    comment: bytes &until=b"\x00";
};

public type HeaderCRC = unit {
    hcrc: uint16;
};

public type Header = unit {
    id1: uint8 &requires = 0x1f;
    id2: uint8 &requires = 0x8b;
    cm: uint8;
    flg: uint8;
    mtime: uint32;
    xfl: uint8;
    os: uint8;

    switch ( self.flg & 0x04 ) {
        0x04 -> extra: Extra;
    };
    
    switch ( self.flg & 0x08 ) {
        0x08 -> filename: Filename;
    };
    
    switch ( self.flg & 0x10 ) {
        0x10 -> comment: Comment;
    };
    
    switch ( self.flg & 0x02 ) {
        0x02 -> header_crc: HeaderCRC;
    };

    compressed_data: bytes &size=self.compressed_data_size();
    crc32: uint32;
    isize: uint32;

    var compressed_data_size: function(): uint64 {
        return self.input().length() - self.input().offset() - 8;
    }
};

public type GZIP_File = unit {
    header: Header;
};