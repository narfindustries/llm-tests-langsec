module ICMP;

public type Message = unit {
    type:       uint8;
    code:       uint8;
    checksum:   uint16;
    identifier: uint16;
    seqno:     uint16;
    payload:    bytes &eod;

    on %done {
        self.connect_icmp();
    }
};

on Message::%done {
    print "ICMP:", self.type, self.code, self.checksum, self.identifier, self.seqno, self.payload;
}

public function Message::connect_icmp() {
    event ICMP::message(
        self.type,
        self.code,
        self.checksum,
        self.identifier,
        self.seqno,
        self.payload
    );
}

@zeek-evt-arg[0] uint8;
@zeek-evt-arg[1] uint8;
@zeek-evt-arg[2] uint16;
@zeek-evt-arg[3] uint16;
@zeek-evt-arg[4] uint16;
@zeek-evt-arg[5] bytes;
event ICMP::message(t: uint8, c: uint8, csum: uint16, id: uint16, seq: uint16, payload: bytes);