module Zip;

import spicy;

public type LocalFileHeader = struct {
    signature: uint32;
    version_needed: uint16;
    general_bit_flag: uint16;
    compression_method: uint16;
    last_mod_time: uint16;
    last_mod_date: uint16;
    crc32: uint32;
    compressed_size: uint32;
    uncompressed_size: uint32;
    filename_length: uint16;
    extra_field_length: uint16;
    filename: bytes = bytes(self.filename_length);
    extra_field: bytes &optional;

    validate {
        self.signature == 0x04034b50;
    }
};

public type CentralDirectoryFileHeader = struct {
    signature: uint32;
    version_made_by: uint16;
    version_needed: uint16;
    general_bit_flag: uint16;
    compression_method: uint16;
    last_mod_time: uint16;
    last_mod_date: uint16;
    crc32: uint32;
    compressed_size: uint32;
    uncompressed_size: uint32;
    filename_length: uint16;
    extra_field_length: uint16;
    file_comment_length: uint16;
    disk_number_start: uint16;
    internal_file_attributes: uint16;
    external_file_attributes: uint32;
    local_header_offset: uint32;
    filename: bytes = bytes(self.filename_length);
    extra_field: bytes &optional;
    file_comment: bytes &optional;

    validate {
        self.signature == 0x02014b50;
    }
};

public type EndOfCentralDirectory = struct {
    signature: uint32;
    number_of_this_disk: uint16;
    disk_with_central_directory: uint16;
    total_entries_this_disk: uint16;
    total_entries: uint16;
    central_directory_size: uint32;
    central_directory_offset: uint32;
    zip_file_comment_length: uint16;
    zip_file_comment: bytes = bytes(self.zip_file_comment_length);

    validate {
        self.signature == 0x06054b50;
    }
};

public type Zip64EndOfCentralDirectory = struct {
    signature: uint32;
    size_of_zip64_end_of_central_directory: uint64;
    version_made_by: uint16;
    version_needed: uint16;
    number_of_this_disk: uint32;
    disk_with_central_directory: uint32;
    total_entries_this_disk: uint64;
    total_entries: uint64;
    central_directory_size: uint64;
    central_directory_offset: uint64;
    zip64_extensible_data: bytes &optional;

    validate {
        self.signature == 0x06064b50;
    }
};

public type ZipFile = struct {
    local_file_headers: vector<LocalFileHeader>;
    central_directory: vector<CentralDirectoryFileHeader>;
    end_of_central_directory: EndOfCentralDirectory;
    zip64_end_of_central_directory: Zip64EndOfCentralDirectory &optional;
};