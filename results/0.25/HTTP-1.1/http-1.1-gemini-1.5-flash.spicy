module HTTP_1_1;

type HTTP_Request_Line = record {
    method: string;
    uri: string;
    version: string;
};

type HTTP_Header = record {
    name: string;
    value: string;
};

type HTTP_Headers = vector[HTTP_Header];

type HTTP_Message = record {
    start_line: HTTP_Request_Line;
    headers: HTTP_Headers;
    body: bytes;
};

type HTTP_Status_Line = record {
    version: string;
    status_code: int;
    reason_phrase: string;
};

type HTTP_Request = record {
    request_line: HTTP_Request_Line;
    headers: HTTP_Headers;
    body: bytes;
};

type HTTP_Response = record {
    status_line: HTTP_Status_Line;
    headers: HTTP_Headers;
    body: bytes;
};

global http_methods = {
    "GET", "POST", "PUT", "DELETE", "HEAD", "OPTIONS", "CONNECT", "TRACE", "PATCH"
};

# Note: This is a simplified representation. Many header fields are omitted for brevity and because their values are highly variable and context-dependent. RFC 2616 should be consulted for a complete and accurate specification. The body is of type 'bytes' to accommodate binary data.

