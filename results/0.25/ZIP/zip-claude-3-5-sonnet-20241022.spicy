module ZIP;

import spicy;

type LocalFileHeader = unit {
    : bytes &until=b"\x50\x4b\x03\x04" &convert=$$;
    signature: bytes &size=4 &requires=($$ == b"\x50\x4b\x03\x04");
    version_needed: uint16;
    general_purpose_flag: uint16;
    compression_method: uint16;
    last_mod_time: uint16;
    last_mod_date: uint16;
    crc32: bytes &size=4;
    compressed_size: uint32;
    uncompressed_size: uint32;
    filename_length: uint16;
    extra_field_length: uint16;
    filename: bytes &size=self.filename_length;
    extra_field: bytes &size=self.extra_field_length if (self.extra_field_length > 0);
    compressed_data: bytes &size=self.compressed_size;
};

type CentralDirectoryHeader = unit {
    : bytes &until=b"\x50\x4b\x01\x02" &convert=$$;
    signature: bytes &size=4 &requires=($$ == b"\x50\x4b\x01\x02");
    version_made_by: uint16;
    version_needed: uint16;
    general_purpose_flag: uint16;
    compression_method: uint16;
    last_mod_time: uint16;
    last_mod_date: uint16;
    crc32: bytes &size=4;
    compressed_size: uint32;
    uncompressed_size: uint32;
    filename_length: uint16;
    extra_field_length: uint16;
    file_comment_length: uint16;
    disk_number_start: uint16;
    internal_file_attributes: uint16;
    external_file_attributes: uint32;
    relative_offset: uint32;
    filename: bytes &size=self.filename_length;
    extra_field: bytes &size=self.extra_field_length if (self.extra_field_length > 0);
    file_comment: bytes &size=self.file_comment_length if (self.file_comment_length > 0);
};

type EndOfCentralDirectory = unit {
    : bytes &until=b"\x50\x4b\x05\x06" &convert=$$;
    signature: bytes &size=4 &requires=($$ == b"\x50\x4b\x05\x06");
    disk_number: uint16;
    disk_with_central_directory: uint16;
    total_entries_this_disk: uint16;
    total_entries: uint16;
    central_directory_size: uint32;
    central_directory_offset: uint32;
    comment_length: uint16;
    comment: bytes &size=self.comment_length if (self.comment_length > 0);
};

type DataDescriptor = unit {
    crc32: bytes &size=4;
    compressed_size: uint32;
    uncompressed_size: uint32;
};

type ExtraField = unit {
    header_id: uint16;
    data_size: uint16;
    data: bytes &size=self.data_size;
};

public type ZIPFile = unit {
    files: LocalFileHeader[] &until($input.at_end());
    central_directory: CentralDirectoryHeader[] &until($input.at_end());
    end_of_central_directory: EndOfCentralDirectory;
};