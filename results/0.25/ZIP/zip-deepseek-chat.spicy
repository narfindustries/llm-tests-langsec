module ZIP;

import spicy;

public type FileHeader = unit {
    magic: bytes &size=4 &convert=0x04034b50;
    version: uint16;
    flags: uint16;
    compression: uint16;
    mod_time: uint16;
    mod_date: uint16;
    crc32: uint32;
    compressed_size: uint32;
    uncompressed_size: uint32;
    file_name_length: uint16;
    extra_field_length: uint16;
    file_name: bytes &size=file_name_length;
    extra_field: bytes &size=extra_field_length;
};

public type CentralDirectoryHeader = unit {
    magic: bytes &size=4 &convert=0x02014b50;
    version_made_by: uint16;
    version_needed: uint16;
    flags: uint16;
    compression: uint16;
    mod_time: uint16;
    mod_date: uint16;
    crc32: uint32;
    compressed_size: uint32;
    uncompressed_size: uint32;
    file_name_length: uint16;
    extra_field_length: uint16;
    file_comment_length: uint16;
    disk_number: uint16;
    internal_attrs: uint16;
    external_attrs: uint32;
    local_header_offset: uint32;
    file_name: bytes &size=file_name_length;
    extra_field: bytes &size=extra_field_length;
    file_comment: bytes &size=file_comment_length;
};

public type EndOfCentralDirectory = unit {
    magic: bytes &size=4 &convert=0x06054b50;
    disk_number: uint16;
    start_disk: uint16;
    num_entries_on_disk: uint16;
    num_entries_total: uint16;
    central_dir_size: uint32;
    central_dir_offset: uint32;
    comment_length: uint16;
    comment: bytes &size=comment_length;
};

public type ZIPFile = unit {
    file_headers: FileHeader[];
    central_directory: CentralDirectoryHeader[];
    end_of_central_directory: EndOfCentralDirectory;
};

on ZIPFile::%init {
    self.file_headers = [];
    self.central_directory = [];
}

on ZIPFile::%done {
    if ( self.end_of_central_directory.num_entries_total != len(self.file_headers) ) {
        print "Warning: Number of file headers does not match the total number of entries in the central directory.";
    }
}