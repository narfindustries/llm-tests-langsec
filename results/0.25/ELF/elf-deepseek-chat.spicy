module ELF;

import spicy;

type ELF_Header = unit {
    magic: bytes &size=4;
    class: uint8;
    data: uint8;
    version: uint8;
    os_abi: uint8;
    abi_version: uint8;
    pad: bytes &size=7;
    type: uint16;
    machine: uint16;
    version2: uint32;
    entry: uint64;
    phoff: uint64;
    shoff: uint64;
    flags: uint32;
    ehsize: uint16;
    phentsize: uint16;
    phnum: uint16;
    shentsize: uint16;
    shnum: uint16;
    shstrndx: uint16;
};

type ELF_Program_Header = unit {
    type: uint32;
    flags: uint32;
    offset: uint64;
    vaddr: uint64;
    paddr: uint64;
    filesz: uint64;
    memsz: uint64;
    align: uint64;
};

type ELF_Section_Header = unit {
    name: uint32;
    type: uint32;
    flags: uint64;
    addr: uint64;
    offset: uint64;
    size: uint64;
    link: uint32;
    info: uint32;
    addralign: uint64;
    entsize: uint64;
};

type ELF_File = unit {
    header: ELF_Header;
    program_headers: ELF_Program_Header[] &size=header.phnum;
    section_headers: ELF_Section_Header[] &size=header.shnum;
};

on ELF_File::%init {
    if ( self.header.magic != b"\x7fELF" )
        throw FormatError("Invalid ELF magic number");
}

on ELF_File::%done {
    print "ELF file parsed successfully";
}

export ELF_File;