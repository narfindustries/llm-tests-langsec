global tls_client_hello_gemini_1: record {
    uint32 client_hello_length;
    string client_hello_data;
};

event tls_client_hello_gemini_1_event(tls_client_hello_gemini_1: tls_client_hello_gemini_1) {
    print fmt("Client Hello Length: %u", tls_client_hello_gemini_1.client_hello_length);
    print fmt("Client Hello Data: %s", tls_client_hello_gemini_1.client_hello_data);
}

redef record::TLS::ClientHello {
    client_hello_gemini_1: tls_client_hello_gemini_1;
}

event tls_client_hello_gemini_1_redef_event(tls_client_hello_gemini_1: tls_client_hello_gemini_1) {
    print fmt("Client Hello Length (Redef): %u", tls_client_hello_gemini_1.client_hello_length);
    print fmt("Client Hello Data (Redef): %s", tls_client_hello_gemini_1.client_hello_data);
}

local tls_client_hello_gemini_1_data: tls_client_hello_gemini_1;

event zeek_init() {
    tls_client_hello_gemini_1_data.client_hello_length = 1234;
    tls_client_hello_gemini_1_data.client_hello_data = "This is a test client hello";
    tls_client_hello_gemini_1_event(tls_client_hello_gemini_1_data);
    tls_client_hello_gemini_1_redef_event(tls_client_hello_gemini_1_data);
}
