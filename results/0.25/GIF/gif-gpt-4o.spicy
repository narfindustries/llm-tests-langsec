module GIF;

type GIF = unit {
    header: Header;
    logical_screen_descriptor: LogicalScreenDescriptor;
    global_color_table: array<ColorTableEntry> &optional &length=logical_screen_descriptor.global_color_table_size;
    blocks: array<Block> &until=$input.length() == 0;
};

type Header = unit {
    signature: bytes &length=3 &check=($$ == "GIF");
    version: bytes &length=3 &check=($$ == "89a");
};

type LogicalScreenDescriptor = unit {
    width: uint16;
    height: uint16;
    packed_fields: PackedFields;
    background_color_index: uint8;
    pixel_aspect_ratio: uint8;
};

type PackedFields = bitfield {
    global_color_table_flag: bool;
    color_resolution: uint8 &bits=3;
    sort_flag: bool;
    global_color_table_size: uint8 &bits=3;
};

type ColorTableEntry = unit {
    red: uint8;
    green: uint8;
    blue: uint8;
};

type Block = unit {
    block_type: BlockType;
};

type BlockType = unit {
    image_descriptor: ImageDescriptor | extension: Extension | trailer: Trailer;
};

type ImageDescriptor = unit {
    image_separator: uint8 &check=($$ == 0x2C);
    left_position: uint16;
    top_position: uint16;
    width: uint16;
    height: uint16;
    packed_fields: ImagePackedFields;
    local_color_table: array<ColorTableEntry> &optional &length=packed_fields.local_color_table_size;
    image_data: ImageData;
};

type ImagePackedFields = bitfield {
    local_color_table_flag: bool;
    interlace_flag: bool;
    sort_flag: bool;
    reserved: uint8 &bits=2;
    local_color_table_size: uint8 &bits=3;
};

type ImageData = unit {
    lzw_minimum_code_size: uint8;
    data_blocks: array<DataBlock> &until=$input.length() == 0 || $input.peek() == 0;
};

type DataBlock = unit {
    block_size: uint8 &check=(1 <= $$ <= 255);
    block_data: bytes &length=block_size;
};

type Extension = unit {
    extension_introducer: uint8 &check=($$ == 0x21);
    extension_label: uint8;
    extension_data: array<DataBlock> &until=$input.length() == 0 || $input.peek() == 0;
};

type Trailer = unit {
    trailer: uint8 &check=($$ == 0x3B);
};