module GIF;

import spicy;

public type Header = unit {
    signature: bytes(3) &requires($$=="GIF");
    version: bytes(3) &requires($$=="87a" || $$=="89a");
};

public type LogicalScreenDescriptor = unit {
    width: uint16;
    height: uint16;
    packed_fields: bitfield {
        global_color_table_flag: 1,
        color_resolution: 3,
        sort_flag: 1,
        global_color_table_size: 3
    };
    background_color_index: uint8;
    pixel_aspect_ratio: uint8;
};

public type ColorTableEntry = unit {
    red: uint8;
    green: uint8;
    blue: uint8;
};

public type ColorTable = unit(entries_count: uint) {
    entries: vector<ColorTableEntry> &count=entries_count;
};

public type ImageDescriptor = unit {
    separator: uint8 &requires($$==0x2C);
    left_position: uint16;
    top_position: uint16;
    width: uint16;
    height: uint16;
    packed_fields: bitfield {
        local_color_table_flag: 1,
        interlace_flag: 1,
        sort_flag: 1,
        local_color_table_size: 3
    };
};

public type GraphicControlExtension = unit {
    introducer: uint8 &requires($$==0x21);
    label: uint8 &requires($$==0xF9);
    block_size: uint8 &requires($$==4);
    packed_fields: bitfield {
        disposal_method: 3,
        user_input_flag: 1,
        transparent_color_flag: 1
    };
    delay_time: uint16;
    transparent_color_index: uint8;
    terminator: uint8;
};

public type Frame = unit {
    graphic_control: optional<GraphicControlExtension>;
    image_descriptor: ImageDescriptor;
    local_color_table: optional<ColorTable>(
        image_descriptor.packed_fields.local_color_table_flag ? 
        (2 ** (image_descriptor.packed_fields.local_color_table_size + 1)) : 0
    );
    image_data: bytes;
};

public type GIF = unit {
    header: Header;
    screen_descriptor: LogicalScreenDescriptor;
    global_color_table: optional<ColorTable>(
        screen_descriptor.packed_fields.global_color_table_flag ? 
        (2 ** (screen_descriptor.packed_fields.global_color_table_size + 1)) : 0
    );
    
    frames: vector<Frame>;
    
    trailer: uint8 &requires($$==0x3B);
};