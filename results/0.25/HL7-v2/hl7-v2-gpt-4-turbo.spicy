module HL7;

public type MSH = unit {
    field_sep: bytes &size=1;
    encoding_chars: bytes &size=4;
    sending_app: bytes &eod;
    sending_fac: bytes &eod;
    receiving_app: bytes &eod;
    receiving_fac: bytes &eod;
    date_time: bytes &eod;
    security: bytes &eod;
    message_type: bytes &eod;
    message_control_id: bytes &eod;
    processing_id: bytes &eod;
    version_id: bytes &eod;
    sequence_number: bytes &eod;
    continuation_pointer: bytes &eod;
    accept_ack_type: bytes &eod;
    application_ack_type: bytes &eod;
    country_code: bytes &eod;
    character_set: bytes &eod;
    principal_language: bytes &eod;
    alt_character_set_handling: bytes &eod;
    message_profile_id: bytes &eod;
};

public type HL7Message = unit {
    msh: MSH;
    data: bytes &rest;
};

event HL7::hl7_message(msg: HL7Message) {
    print fmt("Received HL7 message with type %s", msg.msh.message_type);
}