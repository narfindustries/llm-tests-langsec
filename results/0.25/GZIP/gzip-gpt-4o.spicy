module GZIP;

type GZIP = unit {
    id1: uint8 &assert(id1 == 0x1F);
    id2: uint8 &assert(id2 == 0x8B);
    cm: uint8 &assert(cm == 0x08);
    flg: Flags;
    mtime: uint32;
    xfl: uint8;
    os: uint8;
    extra: ExtraField &if (flg.fextra);
    original_file_name: bytes &until(\0) &if (flg.fname);
    file_comment: bytes &until(\0) &if (flg.fcomment);
    header_crc16: uint16 &if (flg.fhcrc);
    compressed_data: bytes &restofdata;
    crc32: uint32;
    isize: uint32;
};

type Flags = bitfield {
    ftext: bool;
    fhcrc: bool;
    fextra: bool;
    fname: bool;
    fcomment: bool;
    reserved: uint8 &bits=3 &assert(reserved == 0);
};

type ExtraField = unit {
    xlen: uint16;
    data: bytes &length=xlen;
};