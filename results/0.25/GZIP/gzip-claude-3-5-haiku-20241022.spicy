module gzip;

import spicy;

public type Header = unit {
    magic: bytes(2) = b"\x1f\x8b";
    compression_method: uint8 = 0x08;
    flags: uint8;
    mtime: uint32;
    extra_flags: uint8;
    os: uint8;

    extra: optional<Extra> if ( self.flags & 0x04 );
    filename: optional<Filename> if ( self.flags & 0x08 );
    comment: optional<Comment> if ( self.flags & 0x10 );
    header_crc: optional<HeaderCRC> if ( self.flags & 0x02 );

    on %init {
        if ( self.flags & 0x20 )
            throw "Encryption not supported";
    }
};

type Extra = unit {
    length: uint16;
    data: bytes(self.length);
};

type Filename = unit {
    value: bytes &until b"\x00";
};

type Comment = unit {
    value: bytes &until b"\x00";
};

type HeaderCRC = unit {
    value: uint16;
};

public type File = unit {
    header: Header;
    compressed_data: bytes;
    crc32: uint32;
    original_size: uint32;
};