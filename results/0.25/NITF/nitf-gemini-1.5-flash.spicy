module NITF;

type NITF_File = record {
  file_header: NITF_FileHeader;
  image_headers: vector of NITF_ImageHeader;
  extended_headers: vector of NITF_ExtendedHeader;
};

type NITF_FileHeader = record {
  file_id: string;
  header_length: uint32;
  security_classification: string;
  security_handling: string;
  image_offsets: vector of uint32;
  image_lengths: vector of uint32;
  flags: uint32;
  // ... other file header fields ...
};

type NITF_ImageHeader = record {
  image_id: string;
  image_width: uint32;
  image_height: uint32;
  num_bands: uint32;
  compression_type: string;
  pixel_data_type: string;
  geospatial_info: NITF_GeospatialInfo;
  sensor_info: NITF_SensorInfo;
  // ... other image header fields ...
};

type NITF_GeospatialInfo = record {
  coordinate_system: string;
  projection: string;
  coordinates: vector of double;
  // ... other geospatial fields ...
};

type NITF_SensorInfo = record {
  sensor_id: string;
  sensor_type: string;
  sensor_parameters: vector of string;
  // ... other sensor fields ...
};

type NITF_ExtendedHeader = record {
  header_id: string;
  header_length: uint32;
  header_data: bytes;
  // ... other extended header fields ...
};
