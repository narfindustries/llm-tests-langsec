{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1004,"byte_end":1005,"line_start":45,"line_end":45,"column_start":28,"column_end":29,"is_primary":false,"text":[{"text":"        parse_fixed_length(9),","highlight_start":28,"highlight_end":29}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":985,"byte_end":1003,"line_start":45,"line_end":45,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"        parse_fixed_length(9),","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":710,"byte_end":722,"line_start":39,"line_end":39,"column_start":23,"column_end":35,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":23,"highlight_end":35}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":724,"byte_end":737,"line_start":39,"line_end":39,"column_start":37,"column_end":50,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":37,"highlight_end":50}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":691,"byte_end":709,"line_start":39,"line_end":39,"column_start":4,"column_end":22,"is_primary":true,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1003,"byte_end":1006,"line_start":45,"line_end":45,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"        parse_fixed_length(9),","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"(/* &[u8] */, 9)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:45:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parse_fixed_length(9),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:39:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        parse_fixed_length\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 9)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1035,"byte_end":1036,"line_start":46,"line_end":46,"column_start":28,"column_end":29,"is_primary":false,"text":[{"text":"        parse_fixed_length(2),","highlight_start":28,"highlight_end":29}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1016,"byte_end":1034,"line_start":46,"line_end":46,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"        parse_fixed_length(2),","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":710,"byte_end":722,"line_start":39,"line_end":39,"column_start":23,"column_end":35,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":23,"highlight_end":35}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":724,"byte_end":737,"line_start":39,"line_end":39,"column_start":37,"column_end":50,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":37,"highlight_end":50}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":691,"byte_end":709,"line_start":39,"line_end":39,"column_start":4,"column_end":22,"is_primary":true,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1034,"byte_end":1037,"line_start":46,"line_end":46,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"        parse_fixed_length(2),","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"(/* &[u8] */, 2)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:46:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parse_fixed_length(2),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:39:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        parse_fixed_length\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 2)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1066,"byte_end":1067,"line_start":47,"line_end":47,"column_start":28,"column_end":29,"is_primary":false,"text":[{"text":"        parse_fixed_length(2),","highlight_start":28,"highlight_end":29}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1047,"byte_end":1065,"line_start":47,"line_end":47,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"        parse_fixed_length(2),","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":710,"byte_end":722,"line_start":39,"line_end":39,"column_start":23,"column_end":35,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":23,"highlight_end":35}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":724,"byte_end":737,"line_start":39,"line_end":39,"column_start":37,"column_end":50,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":37,"highlight_end":50}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":691,"byte_end":709,"line_start":39,"line_end":39,"column_start":4,"column_end":22,"is_primary":true,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1065,"byte_end":1068,"line_start":47,"line_end":47,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"        parse_fixed_length(2),","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"(/* &[u8] */, 2)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:47:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parse_fixed_length(2),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:39:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        parse_fixed_length\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 2)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1097,"byte_end":1098,"line_start":48,"line_end":48,"column_start":28,"column_end":29,"is_primary":false,"text":[{"text":"        parse_fixed_length(4),","highlight_start":28,"highlight_end":29}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1078,"byte_end":1096,"line_start":48,"line_end":48,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"        parse_fixed_length(4),","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":710,"byte_end":722,"line_start":39,"line_end":39,"column_start":23,"column_end":35,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":23,"highlight_end":35}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":724,"byte_end":737,"line_start":39,"line_end":39,"column_start":37,"column_end":50,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":37,"highlight_end":50}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":691,"byte_end":709,"line_start":39,"line_end":39,"column_start":4,"column_end":22,"is_primary":true,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1096,"byte_end":1099,"line_start":48,"line_end":48,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"        parse_fixed_length(4),","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"(/* &[u8] */, 4)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:48:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parse_fixed_length(4),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:39:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        parse_fixed_length\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 4)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1128,"byte_end":1130,"line_start":49,"line_end":49,"column_start":28,"column_end":30,"is_primary":false,"text":[{"text":"        parse_fixed_length(10),","highlight_start":28,"highlight_end":30}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1109,"byte_end":1127,"line_start":49,"line_end":49,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"        parse_fixed_length(10),","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":710,"byte_end":722,"line_start":39,"line_end":39,"column_start":23,"column_end":35,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":23,"highlight_end":35}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":724,"byte_end":737,"line_start":39,"line_end":39,"column_start":37,"column_end":50,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":37,"highlight_end":50}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":691,"byte_end":709,"line_start":39,"line_end":39,"column_start":4,"column_end":22,"is_primary":true,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1127,"byte_end":1131,"line_start":49,"line_end":49,"column_start":27,"column_end":31,"is_primary":true,"text":[{"text":"        parse_fixed_length(10),","highlight_start":27,"highlight_end":31}],"label":null,"suggested_replacement":"(/* &[u8] */, 10)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:49:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parse_fixed_length(10),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:39:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        parse_fixed_length\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 10)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1160,"byte_end":1162,"line_start":50,"line_end":50,"column_start":28,"column_end":30,"is_primary":false,"text":[{"text":"        parse_fixed_length(14),","highlight_start":28,"highlight_end":30}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1141,"byte_end":1159,"line_start":50,"line_end":50,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"        parse_fixed_length(14),","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":710,"byte_end":722,"line_start":39,"line_end":39,"column_start":23,"column_end":35,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":23,"highlight_end":35}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":724,"byte_end":737,"line_start":39,"line_end":39,"column_start":37,"column_end":50,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":37,"highlight_end":50}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":691,"byte_end":709,"line_start":39,"line_end":39,"column_start":4,"column_end":22,"is_primary":true,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1159,"byte_end":1163,"line_start":50,"line_end":50,"column_start":27,"column_end":31,"is_primary":true,"text":[{"text":"        parse_fixed_length(14),","highlight_start":27,"highlight_end":31}],"label":null,"suggested_replacement":"(/* &[u8] */, 14)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:50:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parse_fixed_length(14),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:39:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        parse_fixed_length\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 14)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1192,"byte_end":1194,"line_start":51,"line_end":51,"column_start":28,"column_end":30,"is_primary":false,"text":[{"text":"        parse_fixed_length(80),","highlight_start":28,"highlight_end":30}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1173,"byte_end":1191,"line_start":51,"line_end":51,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"        parse_fixed_length(80),","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":710,"byte_end":722,"line_start":39,"line_end":39,"column_start":23,"column_end":35,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":23,"highlight_end":35}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":724,"byte_end":737,"line_start":39,"line_end":39,"column_start":37,"column_end":50,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":37,"highlight_end":50}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":691,"byte_end":709,"line_start":39,"line_end":39,"column_start":4,"column_end":22,"is_primary":true,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1191,"byte_end":1195,"line_start":51,"line_end":51,"column_start":27,"column_end":31,"is_primary":true,"text":[{"text":"        parse_fixed_length(80),","highlight_start":27,"highlight_end":31}],"label":null,"suggested_replacement":"(/* &[u8] */, 80)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:51:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parse_fixed_length(80),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:39:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        parse_fixed_length\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 80)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1224,"byte_end":1225,"line_start":52,"line_end":52,"column_start":28,"column_end":29,"is_primary":false,"text":[{"text":"        parse_fixed_length(1),","highlight_start":28,"highlight_end":29}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1205,"byte_end":1223,"line_start":52,"line_end":52,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"        parse_fixed_length(1),","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":710,"byte_end":722,"line_start":39,"line_end":39,"column_start":23,"column_end":35,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":23,"highlight_end":35}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":724,"byte_end":737,"line_start":39,"line_end":39,"column_start":37,"column_end":50,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":37,"highlight_end":50}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":691,"byte_end":709,"line_start":39,"line_end":39,"column_start":4,"column_end":22,"is_primary":true,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1223,"byte_end":1226,"line_start":52,"line_end":52,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"        parse_fixed_length(1),","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"(/* &[u8] */, 1)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:52:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parse_fixed_length(1),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:39:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        parse_fixed_length\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 1)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1255,"byte_end":1256,"line_start":53,"line_end":53,"column_start":28,"column_end":29,"is_primary":false,"text":[{"text":"        parse_fixed_length(2),","highlight_start":28,"highlight_end":29}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1236,"byte_end":1254,"line_start":53,"line_end":53,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"        parse_fixed_length(2),","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":710,"byte_end":722,"line_start":39,"line_end":39,"column_start":23,"column_end":35,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":23,"highlight_end":35}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":724,"byte_end":737,"line_start":39,"line_end":39,"column_start":37,"column_end":50,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":37,"highlight_end":50}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":691,"byte_end":709,"line_start":39,"line_end":39,"column_start":4,"column_end":22,"is_primary":true,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1254,"byte_end":1257,"line_start":53,"line_end":53,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"        parse_fixed_length(2),","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"(/* &[u8] */, 2)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:53:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parse_fixed_length(2),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:39:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        parse_fixed_length\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 2)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1286,"byte_end":1288,"line_start":54,"line_end":54,"column_start":28,"column_end":30,"is_primary":false,"text":[{"text":"        parse_fixed_length(11),","highlight_start":28,"highlight_end":30}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1267,"byte_end":1285,"line_start":54,"line_end":54,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"        parse_fixed_length(11),","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":710,"byte_end":722,"line_start":39,"line_end":39,"column_start":23,"column_end":35,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":23,"highlight_end":35}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":724,"byte_end":737,"line_start":39,"line_end":39,"column_start":37,"column_end":50,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":37,"highlight_end":50}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":691,"byte_end":709,"line_start":39,"line_end":39,"column_start":4,"column_end":22,"is_primary":true,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1285,"byte_end":1289,"line_start":54,"line_end":54,"column_start":27,"column_end":31,"is_primary":true,"text":[{"text":"        parse_fixed_length(11),","highlight_start":27,"highlight_end":31}],"label":null,"suggested_replacement":"(/* &[u8] */, 11)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:54:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parse_fixed_length(11),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:39:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        parse_fixed_length\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 11)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1318,"byte_end":1319,"line_start":55,"line_end":55,"column_start":28,"column_end":29,"is_primary":false,"text":[{"text":"        parse_fixed_length(2),","highlight_start":28,"highlight_end":29}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1299,"byte_end":1317,"line_start":55,"line_end":55,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"        parse_fixed_length(2),","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":710,"byte_end":722,"line_start":39,"line_end":39,"column_start":23,"column_end":35,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":23,"highlight_end":35}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":724,"byte_end":737,"line_start":39,"line_end":39,"column_start":37,"column_end":50,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":37,"highlight_end":50}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":691,"byte_end":709,"line_start":39,"line_end":39,"column_start":4,"column_end":22,"is_primary":true,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1317,"byte_end":1320,"line_start":55,"line_end":55,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"        parse_fixed_length(2),","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"(/* &[u8] */, 2)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:55:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parse_fixed_length(2),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:39:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        parse_fixed_length\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 2)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1349,"byte_end":1351,"line_start":56,"line_end":56,"column_start":28,"column_end":30,"is_primary":false,"text":[{"text":"        parse_fixed_length(20),","highlight_start":28,"highlight_end":30}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1330,"byte_end":1348,"line_start":56,"line_end":56,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"        parse_fixed_length(20),","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":710,"byte_end":722,"line_start":39,"line_end":39,"column_start":23,"column_end":35,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":23,"highlight_end":35}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":724,"byte_end":737,"line_start":39,"line_end":39,"column_start":37,"column_end":50,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":37,"highlight_end":50}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":691,"byte_end":709,"line_start":39,"line_end":39,"column_start":4,"column_end":22,"is_primary":true,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1348,"byte_end":1352,"line_start":56,"line_end":56,"column_start":27,"column_end":31,"is_primary":true,"text":[{"text":"        parse_fixed_length(20),","highlight_start":27,"highlight_end":31}],"label":null,"suggested_replacement":"(/* &[u8] */, 20)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:56:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parse_fixed_length(20),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:39:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        parse_fixed_length\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 20)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1381,"byte_end":1382,"line_start":57,"line_end":57,"column_start":28,"column_end":29,"is_primary":false,"text":[{"text":"        parse_fixed_length(2),","highlight_start":28,"highlight_end":29}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1362,"byte_end":1380,"line_start":57,"line_end":57,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"        parse_fixed_length(2),","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":710,"byte_end":722,"line_start":39,"line_end":39,"column_start":23,"column_end":35,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":23,"highlight_end":35}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":724,"byte_end":737,"line_start":39,"line_end":39,"column_start":37,"column_end":50,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":37,"highlight_end":50}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":691,"byte_end":709,"line_start":39,"line_end":39,"column_start":4,"column_end":22,"is_primary":true,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1380,"byte_end":1383,"line_start":57,"line_end":57,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"        parse_fixed_length(2),","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"(/* &[u8] */, 2)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:57:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parse_fixed_length(2),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:39:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        parse_fixed_length\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 2)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1412,"byte_end":1413,"line_start":58,"line_end":58,"column_start":28,"column_end":29,"is_primary":false,"text":[{"text":"        parse_fixed_length(8),","highlight_start":28,"highlight_end":29}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1393,"byte_end":1411,"line_start":58,"line_end":58,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"        parse_fixed_length(8),","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":710,"byte_end":722,"line_start":39,"line_end":39,"column_start":23,"column_end":35,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":23,"highlight_end":35}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":724,"byte_end":737,"line_start":39,"line_end":39,"column_start":37,"column_end":50,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":37,"highlight_end":50}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":691,"byte_end":709,"line_start":39,"line_end":39,"column_start":4,"column_end":22,"is_primary":true,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1411,"byte_end":1414,"line_start":58,"line_end":58,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"        parse_fixed_length(8),","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"(/* &[u8] */, 8)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:58:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parse_fixed_length(8),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:39:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        parse_fixed_length\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 8)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1443,"byte_end":1444,"line_start":59,"line_end":59,"column_start":28,"column_end":29,"is_primary":false,"text":[{"text":"        parse_fixed_length(4),","highlight_start":28,"highlight_end":29}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1424,"byte_end":1442,"line_start":59,"line_end":59,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"        parse_fixed_length(4),","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":710,"byte_end":722,"line_start":39,"line_end":39,"column_start":23,"column_end":35,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":23,"highlight_end":35}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":724,"byte_end":737,"line_start":39,"line_end":39,"column_start":37,"column_end":50,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":37,"highlight_end":50}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":691,"byte_end":709,"line_start":39,"line_end":39,"column_start":4,"column_end":22,"is_primary":true,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1442,"byte_end":1445,"line_start":59,"line_end":59,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"        parse_fixed_length(4),","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"(/* &[u8] */, 4)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:59:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parse_fixed_length(4),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:39:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        parse_fixed_length\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 4)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1474,"byte_end":1475,"line_start":60,"line_end":60,"column_start":28,"column_end":29,"is_primary":false,"text":[{"text":"        parse_fixed_length(1),","highlight_start":28,"highlight_end":29}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1455,"byte_end":1473,"line_start":60,"line_end":60,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"        parse_fixed_length(1),","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":710,"byte_end":722,"line_start":39,"line_end":39,"column_start":23,"column_end":35,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":23,"highlight_end":35}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":724,"byte_end":737,"line_start":39,"line_end":39,"column_start":37,"column_end":50,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":37,"highlight_end":50}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":691,"byte_end":709,"line_start":39,"line_end":39,"column_start":4,"column_end":22,"is_primary":true,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1473,"byte_end":1476,"line_start":60,"line_end":60,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"        parse_fixed_length(1),","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"(/* &[u8] */, 1)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:60:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parse_fixed_length(1),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:39:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        parse_fixed_length\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 1)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1505,"byte_end":1507,"line_start":61,"line_end":61,"column_start":28,"column_end":30,"is_primary":false,"text":[{"text":"        parse_fixed_length(40),","highlight_start":28,"highlight_end":30}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1486,"byte_end":1504,"line_start":61,"line_end":61,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"        parse_fixed_length(40),","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":710,"byte_end":722,"line_start":39,"line_end":39,"column_start":23,"column_end":35,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":23,"highlight_end":35}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":724,"byte_end":737,"line_start":39,"line_end":39,"column_start":37,"column_end":50,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":37,"highlight_end":50}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":691,"byte_end":709,"line_start":39,"line_end":39,"column_start":4,"column_end":22,"is_primary":true,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1504,"byte_end":1508,"line_start":61,"line_end":61,"column_start":27,"column_end":31,"is_primary":true,"text":[{"text":"        parse_fixed_length(40),","highlight_start":27,"highlight_end":31}],"label":null,"suggested_replacement":"(/* &[u8] */, 40)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:61:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parse_fixed_length(40),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:39:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        parse_fixed_length\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 40)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1537,"byte_end":1539,"line_start":62,"line_end":62,"column_start":28,"column_end":30,"is_primary":false,"text":[{"text":"        parse_fixed_length(15),","highlight_start":28,"highlight_end":30}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1518,"byte_end":1536,"line_start":62,"line_end":62,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"        parse_fixed_length(15),","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":710,"byte_end":722,"line_start":39,"line_end":39,"column_start":23,"column_end":35,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":23,"highlight_end":35}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":724,"byte_end":737,"line_start":39,"line_end":39,"column_start":37,"column_end":50,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":37,"highlight_end":50}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":691,"byte_end":709,"line_start":39,"line_end":39,"column_start":4,"column_end":22,"is_primary":true,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1536,"byte_end":1540,"line_start":62,"line_end":62,"column_start":27,"column_end":31,"is_primary":true,"text":[{"text":"        parse_fixed_length(15),","highlight_start":27,"highlight_end":31}],"label":null,"suggested_replacement":"(/* &[u8] */, 15)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:62:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m62\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parse_fixed_length(15),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:39:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m62\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        parse_fixed_length\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 15)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1569,"byte_end":1570,"line_start":63,"line_end":63,"column_start":28,"column_end":29,"is_primary":false,"text":[{"text":"        parse_fixed_length(5),","highlight_start":28,"highlight_end":29}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1550,"byte_end":1568,"line_start":63,"line_end":63,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"        parse_fixed_length(5),","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":710,"byte_end":722,"line_start":39,"line_end":39,"column_start":23,"column_end":35,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":23,"highlight_end":35}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":724,"byte_end":737,"line_start":39,"line_end":39,"column_start":37,"column_end":50,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":37,"highlight_end":50}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":691,"byte_end":709,"line_start":39,"line_end":39,"column_start":4,"column_end":22,"is_primary":true,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1568,"byte_end":1571,"line_start":63,"line_end":63,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"        parse_fixed_length(5),","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"(/* &[u8] */, 5)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:63:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m63\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parse_fixed_length(5),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:39:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m63\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        parse_fixed_length\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 5)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1600,"byte_end":1601,"line_start":64,"line_end":64,"column_start":28,"column_end":29,"is_primary":false,"text":[{"text":"        parse_fixed_length(5),","highlight_start":28,"highlight_end":29}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1581,"byte_end":1599,"line_start":64,"line_end":64,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"        parse_fixed_length(5),","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":710,"byte_end":722,"line_start":39,"line_end":39,"column_start":23,"column_end":35,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":23,"highlight_end":35}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":724,"byte_end":737,"line_start":39,"line_end":39,"column_start":37,"column_end":50,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":37,"highlight_end":50}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":691,"byte_end":709,"line_start":39,"line_end":39,"column_start":4,"column_end":22,"is_primary":true,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1599,"byte_end":1602,"line_start":64,"line_end":64,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"        parse_fixed_length(5),","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"(/* &[u8] */, 5)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:64:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parse_fixed_length(5),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:39:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        parse_fixed_length\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 5)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1631,"byte_end":1632,"line_start":65,"line_end":65,"column_start":28,"column_end":29,"is_primary":false,"text":[{"text":"        parse_fixed_length(1),","highlight_start":28,"highlight_end":29}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1612,"byte_end":1630,"line_start":65,"line_end":65,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"        parse_fixed_length(1),","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":710,"byte_end":722,"line_start":39,"line_end":39,"column_start":23,"column_end":35,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":23,"highlight_end":35}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":724,"byte_end":737,"line_start":39,"line_end":39,"column_start":37,"column_end":50,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":37,"highlight_end":50}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":691,"byte_end":709,"line_start":39,"line_end":39,"column_start":4,"column_end":22,"is_primary":true,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1630,"byte_end":1633,"line_start":65,"line_end":65,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"        parse_fixed_length(1),","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"(/* &[u8] */, 1)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:65:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parse_fixed_length(1),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:39:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        parse_fixed_length\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 1)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1662,"byte_end":1663,"line_start":66,"line_end":66,"column_start":28,"column_end":29,"is_primary":false,"text":[{"text":"        parse_fixed_length(3),","highlight_start":28,"highlight_end":29}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1643,"byte_end":1661,"line_start":66,"line_end":66,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"        parse_fixed_length(3),","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":710,"byte_end":722,"line_start":39,"line_end":39,"column_start":23,"column_end":35,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":23,"highlight_end":35}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":724,"byte_end":737,"line_start":39,"line_end":39,"column_start":37,"column_end":50,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":37,"highlight_end":50}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":691,"byte_end":709,"line_start":39,"line_end":39,"column_start":4,"column_end":22,"is_primary":true,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1661,"byte_end":1664,"line_start":66,"line_end":66,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"        parse_fixed_length(3),","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"(/* &[u8] */, 3)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parse_fixed_length(3),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:39:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        parse_fixed_length\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 3)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1693,"byte_end":1695,"line_start":67,"line_end":67,"column_start":28,"column_end":30,"is_primary":false,"text":[{"text":"        parse_fixed_length(24),","highlight_start":28,"highlight_end":30}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1674,"byte_end":1692,"line_start":67,"line_end":67,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"        parse_fixed_length(24),","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":710,"byte_end":722,"line_start":39,"line_end":39,"column_start":23,"column_end":35,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":23,"highlight_end":35}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":724,"byte_end":737,"line_start":39,"line_end":39,"column_start":37,"column_end":50,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":37,"highlight_end":50}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":691,"byte_end":709,"line_start":39,"line_end":39,"column_start":4,"column_end":22,"is_primary":true,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1692,"byte_end":1696,"line_start":67,"line_end":67,"column_start":27,"column_end":31,"is_primary":true,"text":[{"text":"        parse_fixed_length(24),","highlight_start":27,"highlight_end":31}],"label":null,"suggested_replacement":"(/* &[u8] */, 24)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:67:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parse_fixed_length(24),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:39:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        parse_fixed_length\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 24)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1725,"byte_end":1727,"line_start":68,"line_end":68,"column_start":28,"column_end":30,"is_primary":false,"text":[{"text":"        parse_fixed_length(18),","highlight_start":28,"highlight_end":30}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1706,"byte_end":1724,"line_start":68,"line_end":68,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"        parse_fixed_length(18),","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":710,"byte_end":722,"line_start":39,"line_end":39,"column_start":23,"column_end":35,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":23,"highlight_end":35}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":724,"byte_end":737,"line_start":39,"line_end":39,"column_start":37,"column_end":50,"is_primary":false,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":37,"highlight_end":50}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":691,"byte_end":709,"line_start":39,"line_end":39,"column_start":4,"column_end":22,"is_primary":true,"text":[{"text":"fn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1724,"byte_end":1728,"line_start":68,"line_end":68,"column_start":27,"column_end":31,"is_primary":true,"text":[{"text":"        parse_fixed_length(18),","highlight_start":27,"highlight_end":31}],"label":null,"suggested_replacement":"(/* &[u8] */, 18)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:68:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parse_fixed_length(18),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:39:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_fixed_length(input: &[u8], length: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        parse_fixed_length\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 18)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `(Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>): nom::sequence::Tuple<_, _, _>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":975,"byte_end":1735,"line_start":44,"line_end":69,"column_start":24,"column_end":6,"is_primary":true,"text":[{"text":"    let parser = tuple((","highlight_start":24,"highlight_end":25},{"text":"        parse_fixed_length(9),","highlight_start":1,"highlight_end":31},{"text":"        parse_fixed_length(2),","highlight_start":1,"highlight_end":31},{"text":"        parse_fixed_length(2),","highlight_start":1,"highlight_end":31},{"text":"        parse_fixed_length(4),","highlight_start":1,"highlight_end":31},{"text":"        parse_fixed_length(10),","highlight_start":1,"highlight_end":32},{"text":"        parse_fixed_length(14),","highlight_start":1,"highlight_end":32},{"text":"        parse_fixed_length(80),","highlight_start":1,"highlight_end":32},{"text":"        parse_fixed_length(1),","highlight_start":1,"highlight_end":31},{"text":"        parse_fixed_length(2),","highlight_start":1,"highlight_end":31},{"text":"        parse_fixed_length(11),","highlight_start":1,"highlight_end":32},{"text":"        parse_fixed_length(2),","highlight_start":1,"highlight_end":31},{"text":"        parse_fixed_length(20),","highlight_start":1,"highlight_end":32},{"text":"        parse_fixed_length(2),","highlight_start":1,"highlight_end":31},{"text":"        parse_fixed_length(8),","highlight_start":1,"highlight_end":31},{"text":"        parse_fixed_length(4),","highlight_start":1,"highlight_end":31},{"text":"        parse_fixed_length(1),","highlight_start":1,"highlight_end":31},{"text":"        parse_fixed_length(40),","highlight_start":1,"highlight_end":32},{"text":"        parse_fixed_length(15),","highlight_start":1,"highlight_end":32},{"text":"        parse_fixed_length(5),","highlight_start":1,"highlight_end":31},{"text":"        parse_fixed_length(5),","highlight_start":1,"highlight_end":31},{"text":"        parse_fixed_length(1),","highlight_start":1,"highlight_end":31},{"text":"        parse_fixed_length(3),","highlight_start":1,"highlight_end":31},{"text":"        parse_fixed_length(24),","highlight_start":1,"highlight_end":32},{"text":"        parse_fixed_length(18),","highlight_start":1,"highlight_end":32},{"text":"    ));","highlight_start":1,"highlight_end":6}],"label":"unsatisfied trait bound","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":969,"byte_end":974,"line_start":44,"line_end":44,"column_start":18,"column_end":23,"is_primary":false,"text":[{"text":"    let parser = tuple((","highlight_start":18,"highlight_end":23}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `nom::sequence::Tuple<_, _, _>` is not implemented for `(Result<..., ...>, ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ...)`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following other types implement trait `nom::sequence::Tuple<I, O, E>`:\n  `()` implements `nom::sequence::Tuple<I, (), E>`\n  `(F,)` implements `nom::sequence::Tuple<Input, (Output,), Error>`\n  `(FnA, FnB)` implements `nom::sequence::Tuple<Input, (A, B), Error>`\n  `(FnA, FnB, FnC)` implements `nom::sequence::Tuple<Input, (A, B, C), Error>`\n  `(FnA, FnB, FnC, FnD)` implements `nom::sequence::Tuple<Input, (A, B, C, D), Error>`\n  `(FnA, FnB, FnC, FnD, FnE)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E), Error>`\n  `(FnA, FnB, FnC, FnD, FnE, FnF)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E, F), Error>`\n  `(FnA, FnB, FnC, FnD, FnE, FnF, FnG)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E, F, G), Error>`\nand 14 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `tuple`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nom-7.1.3/src/sequence/mod.rs","byte_start":8673,"byte_end":8687,"line_start":275,"line_end":275,"column_start":44,"column_end":58,"is_primary":true,"text":[{"text":"pub fn tuple<I, O, E: ParseError<I>, List: Tuple<I, O, E>>(","highlight_start":44,"highlight_end":58}],"label":"required by this bound in `tuple`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `(Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>): nom::sequence::Tuple<_, _, _>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:44:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    let parser = tuple((\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m __________________\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parse_fixed_length(9),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parse_fixed_length(2),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parse_fixed_length(2),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parse_fixed_length(18),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munsatisfied trait bound\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `nom::sequence::Tuple<_, _, _>` is not implemented for `(Result<..., ...>, ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ...)`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `nom::sequence::Tuple<I, O, E>`:\u001b[0m\n\u001b[0m              `()` implements `nom::sequence::Tuple<I, (), E>`\u001b[0m\n\u001b[0m              `(F,)` implements `nom::sequence::Tuple<Input, (Output,), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB)` implements `nom::sequence::Tuple<Input, (A, B), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC)` implements `nom::sequence::Tuple<Input, (A, B, C), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC, FnD)` implements `nom::sequence::Tuple<Input, (A, B, C, D), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC, FnD, FnE)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC, FnD, FnE, FnF)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E, F), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC, FnD, FnE, FnF, FnG)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E, F, G), Error>`\u001b[0m\n\u001b[0m            and 14 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `tuple`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nom-7.1.3/src/sequence/mod.rs:275:44\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m275\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn tuple<I, O, E: ParseError<I>, List: Tuple<I, O, E>>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `tuple`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `(Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>): nom::sequence::Tuple<_, _, _>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":969,"byte_end":1736,"line_start":44,"line_end":69,"column_start":18,"column_end":7,"is_primary":true,"text":[{"text":"    let parser = tuple((","highlight_start":18,"highlight_end":25},{"text":"        parse_fixed_length(9),","highlight_start":1,"highlight_end":31},{"text":"        parse_fixed_length(2),","highlight_start":1,"highlight_end":31},{"text":"        parse_fixed_length(2),","highlight_start":1,"highlight_end":31},{"text":"        parse_fixed_length(4),","highlight_start":1,"highlight_end":31},{"text":"        parse_fixed_length(10),","highlight_start":1,"highlight_end":32},{"text":"        parse_fixed_length(14),","highlight_start":1,"highlight_end":32},{"text":"        parse_fixed_length(80),","highlight_start":1,"highlight_end":32},{"text":"        parse_fixed_length(1),","highlight_start":1,"highlight_end":31},{"text":"        parse_fixed_length(2),","highlight_start":1,"highlight_end":31},{"text":"        parse_fixed_length(11),","highlight_start":1,"highlight_end":32},{"text":"        parse_fixed_length(2),","highlight_start":1,"highlight_end":31},{"text":"        parse_fixed_length(20),","highlight_start":1,"highlight_end":32},{"text":"        parse_fixed_length(2),","highlight_start":1,"highlight_end":31},{"text":"        parse_fixed_length(8),","highlight_start":1,"highlight_end":31},{"text":"        parse_fixed_length(4),","highlight_start":1,"highlight_end":31},{"text":"        parse_fixed_length(1),","highlight_start":1,"highlight_end":31},{"text":"        parse_fixed_length(40),","highlight_start":1,"highlight_end":32},{"text":"        parse_fixed_length(15),","highlight_start":1,"highlight_end":32},{"text":"        parse_fixed_length(5),","highlight_start":1,"highlight_end":31},{"text":"        parse_fixed_length(5),","highlight_start":1,"highlight_end":31},{"text":"        parse_fixed_length(1),","highlight_start":1,"highlight_end":31},{"text":"        parse_fixed_length(3),","highlight_start":1,"highlight_end":31},{"text":"        parse_fixed_length(24),","highlight_start":1,"highlight_end":32},{"text":"        parse_fixed_length(18),","highlight_start":1,"highlight_end":32},{"text":"    ));","highlight_start":1,"highlight_end":7}],"label":"unsatisfied trait bound","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `nom::sequence::Tuple<_, _, _>` is not implemented for `(Result<..., ...>, ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ...)`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following other types implement trait `nom::sequence::Tuple<I, O, E>`:\n  `()` implements `nom::sequence::Tuple<I, (), E>`\n  `(F,)` implements `nom::sequence::Tuple<Input, (Output,), Error>`\n  `(FnA, FnB)` implements `nom::sequence::Tuple<Input, (A, B), Error>`\n  `(FnA, FnB, FnC)` implements `nom::sequence::Tuple<Input, (A, B, C), Error>`\n  `(FnA, FnB, FnC, FnD)` implements `nom::sequence::Tuple<Input, (A, B, C, D), Error>`\n  `(FnA, FnB, FnC, FnD, FnE)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E), Error>`\n  `(FnA, FnB, FnC, FnD, FnE, FnF)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E, F), Error>`\n  `(FnA, FnB, FnC, FnD, FnE, FnF, FnG)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E, F, G), Error>`\nand 14 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `tuple`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nom-7.1.3/src/sequence/mod.rs","byte_start":8673,"byte_end":8687,"line_start":275,"line_end":275,"column_start":44,"column_end":58,"is_primary":true,"text":[{"text":"pub fn tuple<I, O, E: ParseError<I>, List: Tuple<I, O, E>>(","highlight_start":44,"highlight_end":58}],"label":"required by this bound in `tuple`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `(Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>): nom::sequence::Tuple<_, _, _>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:44:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    let parser = tuple((\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m __________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parse_fixed_length(9),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parse_fixed_length(2),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parse_fixed_length(2),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parse_fixed_length(18),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|______^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munsatisfied trait bound\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `nom::sequence::Tuple<_, _, _>` is not implemented for `(Result<..., ...>, ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ...)`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `nom::sequence::Tuple<I, O, E>`:\u001b[0m\n\u001b[0m              `()` implements `nom::sequence::Tuple<I, (), E>`\u001b[0m\n\u001b[0m              `(F,)` implements `nom::sequence::Tuple<Input, (Output,), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB)` implements `nom::sequence::Tuple<Input, (A, B), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC)` implements `nom::sequence::Tuple<Input, (A, B, C), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC, FnD)` implements `nom::sequence::Tuple<Input, (A, B, C, D), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC, FnD, FnE)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC, FnD, FnE, FnF)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E, F), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC, FnD, FnE, FnF, FnG)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E, F, G), Error>`\u001b[0m\n\u001b[0m            and 14 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `tuple`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nom-7.1.3/src/sequence/mod.rs:275:44\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m275\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn tuple<I, O, E: ParseError<I>, List: Tuple<I, O, E>>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `tuple`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `(Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>): nom::sequence::Tuple<_, _, _>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1940,"byte_end":1953,"line_start":70,"line_end":70,"column_start":203,"column_end":216,"is_primary":true,"text":[{"text":"    let (input, (fhdr, fver, clevel, stype, osta_id, fdt, ftitle, fsclas, fsclsy, fscode, fsctlh, fsrel, fsdctp, fsdcdt, fsdcxm, fsdgor, fscaut, fsctln, fscop, fscpys, encrypt, fbkgc, oname, ophone)) = all_consuming(parser)(input)?;","highlight_start":203,"highlight_end":216}],"label":"unsatisfied trait bound","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `nom::sequence::Tuple<_, _, _>` is not implemented for `(Result<..., ...>, ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ...)`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following other types implement trait `nom::sequence::Tuple<I, O, E>`:\n  `()` implements `nom::sequence::Tuple<I, (), E>`\n  `(F,)` implements `nom::sequence::Tuple<Input, (Output,), Error>`\n  `(FnA, FnB)` implements `nom::sequence::Tuple<Input, (A, B), Error>`\n  `(FnA, FnB, FnC)` implements `nom::sequence::Tuple<Input, (A, B, C), Error>`\n  `(FnA, FnB, FnC, FnD)` implements `nom::sequence::Tuple<Input, (A, B, C, D), Error>`\n  `(FnA, FnB, FnC, FnD, FnE)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E), Error>`\n  `(FnA, FnB, FnC, FnD, FnE, FnF)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E, F), Error>`\n  `(FnA, FnB, FnC, FnD, FnE, FnF, FnG)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E, F, G), Error>`\nand 14 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `tuple`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nom-7.1.3/src/sequence/mod.rs","byte_start":8673,"byte_end":8687,"line_start":275,"line_end":275,"column_start":44,"column_end":58,"is_primary":true,"text":[{"text":"pub fn tuple<I, O, E: ParseError<I>, List: Tuple<I, O, E>>(","highlight_start":44,"highlight_end":58}],"label":"required by this bound in `tuple`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `(Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>): nom::sequence::Tuple<_, _, _>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:70:203\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mscop, fscpys, encrypt, fbkgc, oname, ophone)) = all_consuming(parser)(input)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munsatisfied trait bound\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `nom::sequence::Tuple<_, _, _>` is not implemented for `(Result<..., ...>, ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ...)`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `nom::sequence::Tuple<I, O, E>`:\u001b[0m\n\u001b[0m              `()` implements `nom::sequence::Tuple<I, (), E>`\u001b[0m\n\u001b[0m              `(F,)` implements `nom::sequence::Tuple<Input, (Output,), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB)` implements `nom::sequence::Tuple<Input, (A, B), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC)` implements `nom::sequence::Tuple<Input, (A, B, C), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC, FnD)` implements `nom::sequence::Tuple<Input, (A, B, C, D), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC, FnD, FnE)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC, FnD, FnE, FnF)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E, F), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC, FnD, FnE, FnF, FnG)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E, F, G), Error>`\u001b[0m\n\u001b[0m            and 14 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `tuple`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nom-7.1.3/src/sequence/mod.rs:275:44\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m275\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn tuple<I, O, E: ParseError<I>, List: Tuple<I, O, E>>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `tuple`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `(Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>): nom::sequence::Tuple<_, _, _>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1940,"byte_end":1961,"line_start":70,"line_end":70,"column_start":203,"column_end":224,"is_primary":true,"text":[{"text":"    let (input, (fhdr, fver, clevel, stype, osta_id, fdt, ftitle, fsclas, fsclsy, fscode, fsctlh, fsrel, fsdctp, fsdcdt, fsdcxm, fsdgor, fscaut, fsctln, fscop, fscpys, encrypt, fbkgc, oname, ophone)) = all_consuming(parser)(input)?;","highlight_start":203,"highlight_end":224}],"label":"unsatisfied trait bound","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `nom::sequence::Tuple<_, _, _>` is not implemented for `(Result<..., ...>, ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ...)`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following other types implement trait `nom::sequence::Tuple<I, O, E>`:\n  `()` implements `nom::sequence::Tuple<I, (), E>`\n  `(F,)` implements `nom::sequence::Tuple<Input, (Output,), Error>`\n  `(FnA, FnB)` implements `nom::sequence::Tuple<Input, (A, B), Error>`\n  `(FnA, FnB, FnC)` implements `nom::sequence::Tuple<Input, (A, B, C), Error>`\n  `(FnA, FnB, FnC, FnD)` implements `nom::sequence::Tuple<Input, (A, B, C, D), Error>`\n  `(FnA, FnB, FnC, FnD, FnE)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E), Error>`\n  `(FnA, FnB, FnC, FnD, FnE, FnF)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E, F), Error>`\n  `(FnA, FnB, FnC, FnD, FnE, FnF, FnG)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E, F, G), Error>`\nand 14 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `tuple`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nom-7.1.3/src/sequence/mod.rs","byte_start":8673,"byte_end":8687,"line_start":275,"line_end":275,"column_start":44,"column_end":58,"is_primary":true,"text":[{"text":"pub fn tuple<I, O, E: ParseError<I>, List: Tuple<I, O, E>>(","highlight_start":44,"highlight_end":58}],"label":"required by this bound in `tuple`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `(Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>): nom::sequence::Tuple<_, _, _>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:70:203\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m, fscpys, encrypt, fbkgc, oname, ophone)) = all_consuming(parser)(input)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munsatisfied trait bound\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `nom::sequence::Tuple<_, _, _>` is not implemented for `(Result<..., ...>, ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ...)`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `nom::sequence::Tuple<I, O, E>`:\u001b[0m\n\u001b[0m              `()` implements `nom::sequence::Tuple<I, (), E>`\u001b[0m\n\u001b[0m              `(F,)` implements `nom::sequence::Tuple<Input, (Output,), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB)` implements `nom::sequence::Tuple<Input, (A, B), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC)` implements `nom::sequence::Tuple<Input, (A, B, C), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC, FnD)` implements `nom::sequence::Tuple<Input, (A, B, C, D), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC, FnD, FnE)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC, FnD, FnE, FnF)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E, F), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC, FnD, FnE, FnF, FnG)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E, F, G), Error>`\u001b[0m\n\u001b[0m            and 14 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `tuple`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nom-7.1.3/src/sequence/mod.rs:275:44\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m275\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn tuple<I, O, E: ParseError<I>, List: Tuple<I, O, E>>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `tuple`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `(Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>): nom::sequence::Tuple<_, _, _>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1940,"byte_end":1968,"line_start":70,"line_end":70,"column_start":203,"column_end":231,"is_primary":true,"text":[{"text":"    let (input, (fhdr, fver, clevel, stype, osta_id, fdt, ftitle, fsclas, fsclsy, fscode, fsctlh, fsrel, fsdctp, fsdcdt, fsdcxm, fsdgor, fscaut, fsctln, fscop, fscpys, encrypt, fbkgc, oname, ophone)) = all_consuming(parser)(input)?;","highlight_start":203,"highlight_end":231}],"label":"unsatisfied trait bound","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `nom::sequence::Tuple<_, _, _>` is not implemented for `(Result<..., ...>, ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ...)`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following other types implement trait `nom::sequence::Tuple<I, O, E>`:\n  `()` implements `nom::sequence::Tuple<I, (), E>`\n  `(F,)` implements `nom::sequence::Tuple<Input, (Output,), Error>`\n  `(FnA, FnB)` implements `nom::sequence::Tuple<Input, (A, B), Error>`\n  `(FnA, FnB, FnC)` implements `nom::sequence::Tuple<Input, (A, B, C), Error>`\n  `(FnA, FnB, FnC, FnD)` implements `nom::sequence::Tuple<Input, (A, B, C, D), Error>`\n  `(FnA, FnB, FnC, FnD, FnE)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E), Error>`\n  `(FnA, FnB, FnC, FnD, FnE, FnF)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E, F), Error>`\n  `(FnA, FnB, FnC, FnD, FnE, FnF, FnG)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E, F, G), Error>`\nand 14 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `tuple`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nom-7.1.3/src/sequence/mod.rs","byte_start":8673,"byte_end":8687,"line_start":275,"line_end":275,"column_start":44,"column_end":58,"is_primary":true,"text":[{"text":"pub fn tuple<I, O, E: ParseError<I>, List: Tuple<I, O, E>>(","highlight_start":44,"highlight_end":58}],"label":"required by this bound in `tuple`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `(Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>): nom::sequence::Tuple<_, _, _>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:70:203\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mscpys, encrypt, fbkgc, oname, ophone)) = all_consuming(parser)(input)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munsatisfied trait bound\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `nom::sequence::Tuple<_, _, _>` is not implemented for `(Result<..., ...>, ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ...)`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `nom::sequence::Tuple<I, O, E>`:\u001b[0m\n\u001b[0m              `()` implements `nom::sequence::Tuple<I, (), E>`\u001b[0m\n\u001b[0m              `(F,)` implements `nom::sequence::Tuple<Input, (Output,), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB)` implements `nom::sequence::Tuple<Input, (A, B), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC)` implements `nom::sequence::Tuple<Input, (A, B, C), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC, FnD)` implements `nom::sequence::Tuple<Input, (A, B, C, D), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC, FnD, FnE)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC, FnD, FnE, FnF)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E, F), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC, FnD, FnE, FnF, FnG)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E, F, G), Error>`\u001b[0m\n\u001b[0m            and 14 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `tuple`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nom-7.1.3/src/sequence/mod.rs:275:44\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m275\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn tuple<I, O, E: ParseError<I>, List: Tuple<I, O, E>>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `tuple`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 29 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 29 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0061, E0277.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0061, E0277.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0061`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0061`.\u001b[0m\n"}
