module JPEG;

public type JPEG_File = unit {
    soi: SOI;
    segments: Segment[] &until($input[0] == 0xFF && $input[1] == 0xDA);
    sos: SOS;
    scan_data: bytes &eod;
};

type SOI = unit {
    marker: bytes &size=2 &requires($$ == b"\xFF\xD8");
};

type Segment = unit {
    marker: bytes &size=2;
    segment: case $input[1] of {
        0xC0 -> sof0: SOF0;
        0xC1 -> sof1: SOF1;
        0xC2 -> sof2: SOF2;
        0xC3 -> sof3: SOF3;
        0xC4 -> dht: DHT;
        0xDB -> dqt: DQT;
        0xDD -> dri: DRI;
        0xE0 -> app0: APP0;
        0xE1 -> app1: APP1;
        0xFE -> com: COM;
        default -> unknown: UnknownSegment;
    };
};

type SOF0 = unit {
    length: uint16;
    precision: uint8;
    height: uint16;
    width: uint16;
    num_components: uint8;
    components: Component[num_components];
};

type SOF1 = SOF0;
type SOF2 = SOF0;
type SOF3 = SOF0;

type Component = unit {
    id: uint8;
    sampling_factors: uint8;
    quantization_table: uint8;
};

type DHT = unit {
    length: uint16;
    tables: HuffmanTable[];
};

type HuffmanTable = unit {
    table_class: uint8 &mask=0xF0;
    table_id: uint8 &mask=0x0F;
    code_lengths: uint8[16];
    code_values: uint8[sum(code_lengths)];
};

type DQT = unit {
    length: uint16;
    tables: QuantizationTable[];
};

type QuantizationTable = unit {
    precision: uint8 &mask=0xF0;
    table_id: uint8 &mask=0x0F;
    table_values: case precision of {
        0x00 -> values_8bit: uint8[64];
        0x10 -> values_16bit: uint16[64];
    };
};

type DRI = unit {
    length: uint16;
    restart_interval: uint16;
};

type APP0 = unit {
    length: uint16;
    identifier: bytes &size=5 &requires($$ == b"JFIF\0");
    version: uint16;
    units: uint8;
    x_density: uint16;
    y_density: uint16;
    thumbnail_width: uint8;
    thumbnail_height: uint8;
    thumbnail_data: bytes &size=thumbnail_width * thumbnail_height * 3;
};

type APP1 = unit {
    length: uint16;
    identifier: bytes &size=6 &requires($$ == b"Exif\0\0");
    exif_data: bytes &size=length-8;
};

type COM = unit {
    length: uint16;
    comment: bytes &size=length-2;
};

type UnknownSegment = unit {
    length: uint16;
    data: bytes &size=length-2;
};

type SOS = unit {
    length: uint16;
    num_components: uint8;
    components: SOSComponent[num_components];
    spectral_selection_start: uint8;
    spectral_selection_end: uint8;
    successive_approximation: uint8;
};

type SOSComponent = unit {
    component_id: uint8;
    dc_table: uint8 &mask=0xF0;
    ac_table: uint8 &mask=0x0F;
};