module JPEG;

type Marker = uint16;
const Marker = 0xFFxx;

type JPEG = struct {
  soi: SOI;
  app0: optional App0;
  app1: optional App1;
  dqt: array of DQT;
  dht: array of DHT;
  sos: SOS;
  eoi: EOI;
};

type SOI = struct {
  marker: uint16 = 0xFFD8;
  length: uint16 = 0x0002;
};

type App0 = struct {
  marker: uint16 = 0xFFE0;
  length: uint16;
  identifier: string;
  version: uint16;
  units: uint8;
  x_density: uint16;
  y_density: uint16;
  thumbnail_width: uint8;
  thumbnail_height: uint8;
};

type App1 = struct {
  marker: uint16 = 0xFFE1;
  length: uint16;
  identifier: string;
  version: uint16;
  units: uint8;
  x_density: uint16;
  y_density: uint16;
  thumbnail_width: uint8;
  thumbnail_height: uint8;
};

type DQT = struct {
  marker: uint16 = 0xFFDB;
  length: uint16;
  quantization_table_number: uint8;
  precision: uint8;
  quantization_table_data: array of uint8;
};

type DHT = struct {
  marker: uint16 = 0xFFC4;
  length: uint16;
  huffman_table_class: uint8;
  huffman_table_destination_identifier: uint8;
  number_of_codes: array of uint8;
  code_lengths: array of uint8;
  huffman_code_values: array of uint8;
};

type SOS = struct {
  marker: uint16 = 0xFFDA;
  length: uint16;
  number_of_components: uint8;
  component_identifiers: array of uint8;
  dc_huffman_table_destination_identifier: array of uint8;
  ac_huffman_table_destination_identifier: array of uint8;
  scan_data: array of uint8;
};

type EOI = struct {
  marker: uint16 = 0xFFD9;
  length: uint16 = 0x0000;
};

let jpeg: JPEG = {
  soi = SOI();
  app0 = App0();
  app1 = optional(App1());
  dqt = array([DQT()]);
  dht = array([DHT()]);
  sos = SOS();
  eoi = EOI();
};