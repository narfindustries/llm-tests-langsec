module JPEG;

import spicy;

public type JPEG = unit {
    byteorder: spicy::ByteOrder::Big;

    start_marker: StartMarker;
    app_markers: AppMarkers;
    quantization_tables: DQT[];
    huffman_tables: DHT[];
    frame_header: SOF;
    scan_headers: SOS[];
    image_data: bytes;
    end_marker: EndMarker;

    type StartMarker = unit {
        marker: bytes(2) where $$ == b"\xFF\xD8";
    };

    type AppMarkers = unit {
        markers: AppMarker[];
    };

    type AppMarker = unit {
        marker: bytes(2) where $$.to_uint() >= 0xFFE0 && $$.to_uint() <= 0xFFEF;
        length: uint16;
        data: bytes(length - 2);
    };

    type DQT = unit {
        marker: bytes(2) where $$ == b"\xFF\xDB";
        length: uint16;
        precision: uint8 where $$ == 8 || $$ == 16;
        table_id: uint8 where $$ <= 3;
        quantization_values: bytes(precision == 8 ? 64 : 128);
    };

    type DHT = unit {
        marker: bytes(2) where $$ == b"\xFF\xC4";
        length: uint16;
        table_class: uint8 where $$ <= 1;
        table_destination: uint8 where $$ <= 3;
        code_lengths: bytes(16);
        huffman_values: bytes;
    };

    type SOF = unit {
        marker: bytes(2) where $$.to_uint() >= 0xFFC0 && $$.to_uint() <= 0xFFC3;
        length: uint16;
        precision: uint8 where $$ >= 8 && $$ <= 12;
        height: uint16;
        width: uint16;
        num_components: uint8 where $$ >= 1 && $$ <= 4;
        components: Component[num_components];

        type Component = unit {
            id: uint8;
            sampling_factors: uint8;
            quantization_table: uint8;
        };
    };

    type SOS = unit {
        marker: bytes(2) where $$ == b"\xFF\xDA";
        length: uint16;
        num_components: uint8 where $$ >= 1 && $$ <= 4;
        components: ScanComponent[num_components];
        spectral_start: uint8;
        spectral_end: uint8;
        approx_high: uint4;
        approx_low: uint4;

        type ScanComponent = unit {
            selector: uint8;
            dc_huffman_table: uint4;
            ac_huffman_table: uint4;
        };
    };

    type EndMarker = unit {
        marker: bytes(2) where $$ == b"\xFF\xD9";
    };
};