module DNS;

type DNS {
    id: uint16;
    qr: bool;
    opcode: enum { QUERY, IQUERY, STATUS, NOTIFY, UPDATE, 0x0C, 0x0D, 0x0E, 0x0F };
    aa: bool;
    tc: bool;
    rd: bool;
    ra: bool;
    z: uint3;
    rcode: enum { NOERROR, FORMERR, SERVFAIL, NXDOMAIN, NOTIMP, REFUSED, YXDOMAIN, YXRRSET, NXRRSET, NOTAUTH, NOTZONE };
    qdcount: uint16;
    ancount: uint16;
    nscount: uint16;
    arcount: uint16;

    questions: [qdcount] {
        qname: domain;
        qtype: uint16;
        qclass: uint16;
    };

    answers: [ancount] {
        name: domain;
        type: uint16;
        class: uint16;
        ttl: uint32;
        rdlength: uint16;
        rdata: bytes:rdlength;
    };

    authorities: [nscount] {
        name: domain;
        type: uint16;
        class: uint16;
        ttl: uint32;
        rdlength: uint16;
        rdata: bytes:rdlength;
    };

    additionals: [arcount] {
        name: domain;
        type: uint16;
        class: uint16;
        ttl: uint32;
        rdlength: uint16;
        rdata: bytes:rdlength;
    };
}

type domain: seq {
    labels: [1..255] string;
    terminator: uint8 == 0;
}
