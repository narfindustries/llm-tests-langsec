module BitcoinTransaction;

type CompactSize = unit {
    varint: uint8;
    len16: uint16 &if (varint == 253);
    len32: uint32 &if (varint == 254);
    len64: uint64 &if (varint == 255);
} &let length = (varint < 253) ? varint : (varint == 253) ? len16 : (varint == 254) ? len32 : len64;

type Script = unit {
    length: CompactSize;
    script: bytes &size=length.length;
};

type Input = unit {
    prev_tx_hash: bytes &size=32;
    output_index: uint32;
    script_sig: Script;
    sequence: uint32;
};

type Output = unit {
    value: uint64;
    script_pub_key: Script;
};

type Transaction = unit {
    version: uint32;
    input_count: CompactSize;
    inputs: array of Input &length=input_count.length;
    output_count: CompactSize;
    outputs: array of Output &length=output_count.length;
    lock_time: uint32;
};