module sqlite3;

type PageType = enum { PT_INTERNAL = 1, PT_LEAF = 2 };

record Header {
    uint16 magic;
    uint16 pageSize;
    uint16 writeVersion;
    uint16 readOnly;
    uint16 reservedSpace;
    uint16 maxPageCount;
    uint16 changeCount;
    uint16 format;
    uint16 textEncoding;
    uint16 userVersion;
    uint16 incrementalVacuum;
    uint64 applicationId;
    uint16 versionValidFor;
    uint16 sqliteVersion;
};

record PageHeader {
    PageType pageType;
    uint32 pageNumber;
    uint32 freelistTrunkPage;
    // Cell data is variable and schema-dependent; cannot be directly represented here.
};

record CellHeader {
    uint32 payloadSize;
    uint64 rowId; // Optional
    uint32 offset;
};

// Cell data is highly variable and requires schema-specific handling.  Cannot be fully defined here.
record CellData {
    bytes data;
};

record SQLite3DB {
    Header header;
    PageHeader[] pages;
};
