module SQLITE3DB;

type Magic = byte[16];

type PageType = uint8;

type Varint = struct {
  len: uint8,
  value: uint64
};

type CellPointer = uint16;

type Cell = struct {
  length: Varint,
  payload: byte,
  rowid: Varint
};

type PageHeader = struct {
  page_type: PageType,
  first_freeblock: uint16,
  cell_content_area: uint16,
  fragmented_free_bytes: uint8,
  cell_area: uint8,
  page_number: uint32,
  right_child_page: uint32,
  left_child_page: uint32
};

type BTreePage = struct {
  page_header: PageHeader,
  cell_pointers: CellPointer,
  cell_content_area: byte,
  cells: Cell
};

type DatabaseHeader = struct {
  magic: Magic,
  page_size: uint16,
  file_format_write_version: uint8,
  file_format_read_version: uint8,
  reserved: uint8,
  max_embedded_payload_fraction: uint8,
  min_embedded_payload_fraction: uint8,
  leaf_pointer_map: uint8,
  file_change_counter: uint32,
  database_size: uint32,
  reserved2: byte,
  version_valid_for_number: uint32,
  sqlite_version_number: uint32,
  version_valid_for: uint32
};

type SQLITE3DB = struct {
  database_header: DatabaseHeader,
  pages: BTreePage
};

let sqlite3_db = SQLITE3DB;