module SQLITE3_DB;

import spicy;

type SQLite3Header = unit {
    magic: bytes &size=16;
    page_size: uint16;
    file_format_write_version: uint8;
    file_format_read_version: uint8;
    reserved_space_end: uint8;
    max_embedded_payload_fraction: uint8;
    min_embedded_payload_fraction: uint8;
    leaf_payload_fraction: uint8;
    file_change_counter: uint32;
    database_size_in_pages: uint32;
    first_freelist_trunk_page: uint32;
    total_freelist_pages: uint32;
    schema_cookie: uint32;
    schema_format_number: uint32;
    default_page_cache_size: uint32;
    largest_root_btree_page: uint32;
    text_encoding: uint32;
    user_version: uint32;
    incremental_vacuum_mode: uint32;
    application_id: uint32;
    version_valid_for: uint32;
    sqlite_version_number: uint32;
};

type SQLite3PageHeader = unit {
    page_type: uint8;
    first_free_block: uint16;
    cell_count: uint16;
    cell_content_start: uint16;
    fragmented_free_bytes: uint8;
    right_most_pointer: uint32;
};

type SQLite3Cell = unit {
    payload_size: uint32;
    row_id: uint64;
    payload: bytes &size=payload_size;
};

type SQLite3Page = unit {
    header: SQLite3PageHeader;
    cells: SQLite3Cell[] &until($input.size() == 0);
};

type SQLite3DB = unit {
    header: SQLite3Header;
    pages: SQLite3Page[] &until($input.size() == 0);
};

export SQLite3DB;