module Modbus;

public type ModbusMessage = unit {
    transaction_id: uint16;
    protocol_id: uint16;
    length: uint16;
    unit_id: uint8;
    function_code: uint8;
    data: bytes &length = length - 2;
} &byte_order = bigendian;

public type ModbusAnalyzer = unit {
    message: ModbusMessage;
} &byte_order = bigendian;

public global modbus: connection &redef;

event spicy_analyzer_modbus_message(c: connection, msg: ModbusMessage) {
    print fmt("Modbus Message: Transaction ID: %d, Protocol ID: %d, Length: %d, Unit ID: %d, Function Code: %d, Data: %s",
              msg.transaction_id, msg.protocol_id, msg.length, msg.unit_id, msg.function_code, msg.data);
}

public function configure_modbus() {
    modbus = new connection;
    modbus$add_analyzer(Analyzer::ANALYZER_MODBUS, true);
}

event zeek_init() {
    configure_modbus();
}