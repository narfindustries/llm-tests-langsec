# MQTT Protocol Specification in Zeek Spicy

%header {
    import Frameworks
}

%config {
    # Framework configuration
    env = Fidir::Even
    framework = "mqtt"
}

%def transitions {
    # Initial state
    start: inbound -> connected

    # Connecting to the broker
    connected: connack -> connected
    connected: publish -> connected
    connected: puback -> connected
    connected: pubrec -> connected
    connected: pubrel -> connected
    connected: pubcomp -> connected
    connected: subscribe -> connected
    connected: suback -> connected
    connected: unsubscribe -> connected
    connected: unsuback -> connected
    connected: pingreq -> connected
    connected: pingresp -> connected
    connected: disconnect -> disconnected

    # Connection acknowledgment
    connack: connack_ack -> connected

    # Publishing messages
    publish: publish_dup -> connected
    publish: publish_qos0 -> connected
    publish: publish_qos1 -> connected
    publish: publish_qos2 -> connected

    # Publishing with QoS 1
    puback: puback_ack -> connected

    # Publishing with QoS 2
    pubrec: pubrec_ack -> connected
    pubrel: pubrel_ack -> connected
    pubcomp: pubcomp_ack -> connected

    # Subscribing to topics
    subscribe: suback_ack -> connected

    # Unsubscribing from topics
    unsubscribe: unsuback_ack -> connected

    # Ping request
    pingreq: pingresp_ack -> connected

    # Disconnecting from the broker
    disconnect: disconnect_ack -> disconnected
}

%type mqtt_message {
    # Common header for all MQTT messages
    1 uint8  # Message type
    1 uint8  # Flags
    2 uint16 # Remaining length
    condition message_type == 1 -> connect
    condition message_type == 2 -> connack
    condition message_type == 3 -> publish
    condition message_type == 4 -> puback
    condition message_type == 5 -> pubrec
    condition message_type == 6 -> pubrel
    condition message_type == 7 -> pubcomp
    condition message_type == 8 -> subscribe
    condition message_type == 9 -> suback
    condition message_type == 10 -> unsubscribe
    condition message_type == 11 -> unsuback
    condition message_type == 12 -> pingreq
    condition message_type == 13 -> pingresp
    condition message_type == 14 -> disconnect

    # Connect message
    1 uint8  # Protocol name length (4 for MQTT)
    4 string # Protocol name (MQTT)
    1 uint8  # Protocol level (4 for MQTT 3.1.1)
    1 uint8  # Connect flags
    2 uint16 # Keep alive

    # Connack message
    1 uint8  # Session present
    1 uint8  # Return code

    # Publish message
    1 uint8  # Topic length (high byte)
    1 uint8  # Topic length (low byte)
    2 string # Topic name
    2 uint16 # Packet identifier (for QoS 1 and 2)
    condition flags & 0x01 == 1 -> dup
    condition flags & 0x02 == 2 -> qos
    condition flags & 0x04 == 4 -> retain
    condition qos == 0 -> payload
    condition qos == 1 -> payload
    condition qos == 2 -> payload

    # Puback message
    2 uint16 # Packet identifier

    # Pubrec message
    2 uint16 # Packet identifier

    # Pubrel message
    2 uint16 # Packet identifier

    # Pubcomp message
    2 uint16 # Packet identifier

    # Subscribe message
    2 uint16 # Packet identifier
    1 uint8  # Topic length (high byte)
    1 uint8  # Topic length (low byte)
    2 string # Topic name
    1 uint8  # QoS

    # Suback message
    2 uint16 # Packet identifier
    1 uint8  # Return code

    # Unsubscribe message
    2 uint16 # Packet identifier
    1 uint8  # Topic length (high byte)
    1 uint8  # Topic length (low byte)
    2 string # Topic name

    # Unsuback message
    2 uint16 # Packet identifier

    # Pingreq message

    # Pingresp message

    # Disconnect message
    1 uint8  # Disconnect reason code
}