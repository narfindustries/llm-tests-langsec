module NTP;

type LI_VN_Mode = unit {
    li: uint2;   // Leap Indicator
    vn: uint2;   // Version Number
    mode: uint3; // Mode
};

type Header = unit {
    flags: LI_VN_Mode;      // LI, VN, and Mode flags
    stratum: uint8;         // Stratum
    poll: int8;             // Poll interval (log2 seconds)
    precision: int8;        // Precision (log2 seconds)

    rootDelay: bits(32);      // Root delay
    rootDispersion: bits(32); // Root dispersion
    refID: bytes &size=4;   // Reference identifier

    refTimestamp: bits(64);   // Reference timestamp
    originTimestamp: bits(64); // Origin timestamp
    receiveTimestamp: bits(64); // Receive timestamp
    transmitTimestamp: bits(64); // Transmit timestamp
};

type Extension = unit {
    extentLength: uint16;            // Length of the Extension data
    extentData: bytes &size=this.extentLength; // Extension Data
};

type Authenticator = unit {
    keyID: uint32;          // Key identifier
    messageDigest: bytes &size=16; // Message digest (typically MD5)
};

public type NTPPacket = unit {
    header: Header;         // The fixed header fields
    extensions: Extension[] &eod; // Array of extensions, read until the end-of-data
    authenticator: Authenticator &optional; // Optional part with authentication information (when present)
    on %done { print self; }
};