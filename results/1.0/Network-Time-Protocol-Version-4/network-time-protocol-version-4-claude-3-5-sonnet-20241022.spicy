module Network-Time-Protocol-Version-4;

public type Header = unit {
    li_vn_mode: uint8 &convert=LI_VN_MODE($$);
    stratum: uint8;
    poll: int8;
    precision: int8;
    root_delay: uint32;
    root_dispersion: uint32;
    reference_id: bytes &size=4;
    reference_timestamp: uint64;
    originate_timestamp: uint64;
    receive_timestamp: uint64;
    transmit_timestamp: uint64;
};

type LI_VN_MODE = enum {
    NO_WARNING = 0,
    LAST_MINUTE_61 = 1,
    LAST_MINUTE_59 = 2,
    ALARM_CONDITION = 3
};

public function get_mode(h: Header): uint8 {
    return h.li_vn_mode & 0x07;
}

public function get_version(h: Header): uint8 {
    return (h.li_vn_mode >> 3) & 0x07;
}

public function get_leap_indicator(h: Header): uint8 {
    return (h.li_vn_mode >> 6) & 0x03;
}

on Header -> event NTP::message(
    $is_orig: bool,
    $mode: uint8,
    $version: uint8,
    $leap_indicator: uint8,
    $stratum: uint8,
    $poll: int8,
    $precision: int8,
    $root_delay: uint32,
    $root_dispersion: uint32,
    $reference_id: bytes,
    $reference_timestamp: uint64,
    $originate_timestamp: uint64,
    $receive_timestamp: uint64,
    $transmit_timestamp: uint64
) {
    self.mode = get_mode(self);
    self.version = get_version(self);
    self.leap_indicator = get_leap_indicator(self);
}