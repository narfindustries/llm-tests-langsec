module ARP;

public type ARPRequest = unit {
    htype: uint16;
    ptype: uint16;
    hlen: uint8;
    plen: uint8;
    oper: uint16;
    sha: bytes &size=6;
    spa: bytes &size=4;
    tha: bytes &size=6;
    tpa: bytes &size=4;
};

public type ARPReply = unit {
    htype: uint16;
    ptype: uint16;
    hlen: uint8;
    plen: uint8;
    oper: uint16;
    sha: bytes &size=6;
    spa: bytes &size=4;
    tha: bytes &size=6;
    tpa: bytes &size=4;
};

public type ARPMessage = unit {
    message: ARPRequest | ARPReply {
        switch(self.oper) {
            case 1: self = ARPRequest;
            case 2: self = ARPReply;
        }
    }
    %{
        // Custom parsing logic can be added here
    %}
};