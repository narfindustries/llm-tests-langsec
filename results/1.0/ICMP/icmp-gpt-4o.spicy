module ICMP;

public type ICMP = unit {
    icmp_type: uint8;
    code: uint8;
    checksum: uint16;
    body: case (icmp_type) of {
        0, 8 => Echo;
        3 => DestinationUnreachable;
        5 => Redirect;
        11 => TimeExceeded;
        12 => ParameterProblem;
        13, 14 => Timestamp;
        17, 18 => AddressMask;
        else => bytes &restofdata;
    };
};

type Echo = unit {
    identifier: uint16;
    sequence_number: uint16;
    data: bytes &restofdata;
};

type DestinationUnreachable = unit {
    unused: uint32;
    data: bytes &restofdata;
};

type Redirect = unit {
    gateway_internet_address: uint32;
    data: bytes &restofdata;
};

type TimeExceeded = unit {
    unused: uint32;
    data: bytes &restofdata;
};

type ParameterProblem = unit {
    pointer: uint8;
    unused: uint24;
    data: bytes &restofdata;
};

type Timestamp = unit {
    identifier: uint16;
    sequence_number: uint16;
    originate_timestamp: uint32;
    receive_timestamp: uint32;
    transmit_timestamp: uint32;
};

type AddressMask = unit {
    identifier: uint16;
    sequence_number: uint16;
    address_mask: uint32;
};