module HL7v2;

import spicy;

public type MessageHeader = unit {
    delimiter: bytes;
    encoding_characters: bytes;
    sending_application: bytes;
    sending_facility: bytes;
    receiving_application: bytes;
    receiving_facility: bytes;
    timestamp: bytes;
    security: optional<bytes>;
    message_type: bytes;
    message_control_id: bytes;
    processing_id: bytes;
    version: bytes;
};

public type PatientIdentification = unit {
    set_id: uint8;
    patient_id: bytes;
    patient_name: optional<bytes>;
    mother_maiden_name: optional<bytes>;
    birth_date: optional<bytes>;
    gender: bytes;
    patient_alias: optional<bytes>;
    race: optional<bytes>;
    patient_address: optional<bytes>;
    county_code: optional<bytes>;
    phone_number: optional<bytes>;
    language: optional<bytes>;
};

public type PatientVisit = unit {
    patient_class: bytes;
    assigned_location: bytes;
    admission_type: optional<bytes>;
    preadmit_number: optional<bytes>;
    prior_location: optional<bytes>;
    attending_physician: optional<bytes>;
    referring_physician: optional<bytes>;
    consulting_physician: optional<bytes>;
    hospital_service: optional<bytes>;
    temporary_location: optional<bytes>;
};

public type ObservationRequest = unit {
    set_id: uint8;
    placer_order_number: bytes;
    filler_order_number: bytes;
    universal_service_id: bytes;
    priority: optional<bytes>;
    requested_datetime: optional<bytes>;
    observation_datetime: optional<bytes>;
    observation_end_datetime: optional<bytes>;
    collection_volume: optional<bytes>;
    collector_identifier: optional<bytes>;
};

public type ObservationResult = unit {
    set_id: uint8;
    value_type: bytes;
    observation_identifier: bytes;
    observation_value: bytes;
    units: optional<bytes>;
    reference_range: optional<bytes>;
    abnormal_flags: optional<bytes>;
    probability: optional<bytes>;
    nature_of_abnormal_test: optional<bytes>;
};

public type HL7v2Message = unit {
    message_header: MessageHeader;
    patient_identification: PatientIdentification;
    patient_visit: PatientVisit;
    observation_request: ObservationRequest;
    observation_result: ObservationResult;
};