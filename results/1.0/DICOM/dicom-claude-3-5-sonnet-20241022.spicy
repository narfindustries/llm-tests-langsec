module DICOM;

public type DicomMessage = unit {
    : PreambleAndPrefix;
    : DataSet;
};

type PreambleAndPrefix = unit {
    preamble: bytes &size=128;
    prefix: bytes &size=4;
};

type DataSet = unit {
    elements: DataElement[];
};

type DataElement = unit {
    group_id: uint16;
    element_id: uint16;
    var vr_type: bytes;
    var length: uint64;

    on group_id {
        if (self.group_id != 0xFFFE) {
            self.vr_type = self.next_bytes(2);
            if (self.vr_type == b"OB" || self.vr_type == b"OW" || 
                self.vr_type == b"OF" || self.vr_type == b"SQ" || 
                self.vr_type == b"UT" || self.vr_type == b"UN") {
                self.next_bytes(2);
                self.length = self.next_uint32();
            } else {
                self.length = self.next_uint16();
            }
        } else {
            self.length = self.next_uint32();
        }
    }

    value: bytes &size=self.length;
};

type SequenceItem = unit {
    sequence_tag: bytes &size=4;
    sequence_length: uint32;
    sequence_data: bytes &size=self.sequence_length &requires(self.sequence_length != 0xFFFFFFFF);
};

type PixelDataFragment = unit {
    fragment_tag: bytes &size=4;
    fragment_length: uint32;
    fragment_data: bytes &size=self.fragment_length;
};

type PixelData = unit {
    pixel_tag: bytes &size=4;
    pixel_vr: bytes &size=2;
    pixel_reserved: bytes &size=2;
    pixel_length: uint32;
    pixel_data: bytes &size=self.pixel_length &requires(self.pixel_length != 0xFFFFFFFF);
};