module TLS;

public type ProtocolVersion = unit {
    major: uint8;
    minor: uint8;
};

public type Random = unit {
    gmt_unix_time: uint32;
    random_bytes: bytes &size=28;
};

public type SessionID = unit {
    length: uint8;
    session_id: bytes &size=this.length;
};

public type CipherSuites = unit {
    length: uint16;
    suites: uint16[] &size=this.length / 2;
};

public type CompressionMethods = unit {
    length: uint8;
    methods: uint8[] &size=this.length;
};

public type Extension = unit {
    type: uint16;
    length: uint16;
    data: bytes &size=this.length;
};

public type Extensions = unit {
    length: uint16;
    extensions: vector<Extension> &size=(this.length / 4); // fixing size computation
};

public type ClientHello = unit {
    legacy_version: ProtocolVersion;
    random: Random;
    session_id: SessionID;
    cipher_suites: CipherSuites;
    compression_methods: CompressionMethods;
    extensions: Extensions;
};