module HTTP_1_1;

import spicy;

public type Version = enum {
    HTTP_1_0 = b"HTTP/1.0",
    HTTP_1_1 = b"HTTP/1.1"
};

public type Method = enum {
    GET     = b"GET",
    POST    = b"POST",
    PUT     = b"PUT",
    DELETE  = b"DELETE",
    HEAD    = b"HEAD",
    OPTIONS = b"OPTIONS",
    CONNECT = b"CONNECT",
    TRACE   = b"TRACE",
    PATCH   = b"PATCH"
};

public type Request = unit {
    method: Method;
    uri:    bytes &until=b" ";
    version: Version &until=b"\r\n";
    headers: Header[] &until=b"\r\n\r\n";
    body:   bytes &size=body_length;
};

public type Header = unit {
    name:  bytes &until=b":";
    value: bytes &until=b"\r\n";
};

public type Response = unit {
    version: Version &until=b" ";
    code:    uint16 &until=b" ";
    message: bytes &until=b"\r\n";
    headers: Header[] &until=b"\r\n\r\n";
    body:    bytes &size=body_length;
};

public type HTTP_Message = unit {
    is_request: bool;
    request:    Request &if=is_request;
    response:   Response &if=!is_request;
};

function body_length(rest: bytes): uint64 {
    for (hdr in headers) {
        if (hdr.name == b"Content-Length") {
            return to_int(hdr.value);
        }
    }
    return 0;
}

on HTTP_Message::%done {
    if (is_request) {
        print "Request: %s %s %s", request.method, request.uri, request.version;
    } else {
        print "Response: %s %d %s", response.version, response.code, response.message;
    }
}