module PKZIP;

public type LocalFileHeader = unit {
    signature: bytes = b"\x50\x4b\x03\x04";
    version_needed: uint16;
    general_flags: uint16;
    compression_method: uint16;
    last_mod_time: uint16;
    last_mod_date: uint16;
    crc32: uint32;
    compressed_size: uint32;
    uncompressed_size: uint32;
    filename_length: uint16;
    extra_field_length: uint16;
    filename: bytes[filename_length];
    extra_field: bytes[extra_field_length] &optional;
};

public type CentralDirectoryFileHeader = unit {
    signature: bytes = b"\x50\x4b\x01\x02";
    version_made_by: uint16;
    version_needed: uint16;
    general_flags: uint16;
    compression_method: uint16;
    last_mod_time: uint16;
    last_mod_date: uint16;
    crc32: uint32;
    compressed_size: uint32;
    uncompressed_size: uint32;
    filename_length: uint16;
    extra_field_length: uint16;
    file_comment_length: uint16;
    disk_number_start: uint16;
    internal_file_attributes: uint16;
    external_file_attributes: uint32;
    local_header_offset: uint32;
    filename: bytes[filename_length];
    extra_field: bytes[extra_field_length] &optional;
    file_comment: bytes[file_comment_length] &optional;
};

public type EndOfCentralDirectoryRecord = unit {
    signature: bytes = b"\x50\x4b\x05\x06";
    disk_number: uint16;
    central_directory_start_disk: uint16;
    total_entries_this_disk: uint16;
    total_entries: uint16;
    central_directory_size: uint32;
    central_directory_offset: uint32;
    zip_comment_length: uint16;
    zip_comment: bytes[zip_comment_length] &optional;
};

public type Zip64EndOfCentralDirectoryRecord = unit {
    signature: bytes = b"\x50\x4b\x06\x06";
    record_size: uint64;
    version_made_by: uint16;
    version_needed: uint16;
    disk_number: uint32;
    central_directory_start_disk: uint32;
    total_entries_this_disk: uint64;
    total_entries: uint64;
    central_directory_size: uint64;
    central_directory_offset: uint64;
};

public type ZipFile = unit {
    local_file_headers: LocalFileHeader[] &until($input.at_eof());
    central_directory_headers: CentralDirectoryFileHeader[] &until($input.at_eof());
    end_of_central_directory: EndOfCentralDirectoryRecord;
    zip64_eocdr: Zip64EndOfCentralDirectoryRecord &optional;
};

public type Parser = unit {
    file: ZipFile;
};