module ZIP;

type ZipLocalFileHeader: record {
  local_header_signature: uint16 = 0x04034b50;
  version_needed_to_extract: uint16;
  general_purpose_bit_flag: uint16;
  compression_method: uint16;
  last_mod_time: uint16;
  last_mod_date: uint16;
  crc32: uint32;
  compressed_size: uint32;
  uncompressed_size: uint32;
  filename_length: uint16;
  extra_field_length: uint16;
};

type ZipExtraField: record {
  header_id: uint16;
  data_size: uint16;
  data: bytestring &length = data_size;
};

type ZipFileData: record {
  data: bytestring;
};

type ZipDataDescriptor: record {
  data_descriptor_signature: uint32 = 0x08074b50;
  crc32: uint32;
  compressed_size: uint64;
  uncompressed_size: uint64;
};

type ZipCentralDirectory: record {
  central_header_signature: uint32 = 0x02014b50;
  version_made_by: uint16;
  version_needed_to_extract: uint16;
  general_purpose_bit_flag: uint16;
  compression_method: uint16;
  last_mod_time: uint16;
  last_mod_date: uint16;
  crc32: uint32;
  compressed_size: uint32;
  uncompressed_size: uint32;
  filename_length: uint16;
  extra_field_length: uint16;
  file_comment_length: uint16;
  disk_number_start: uint16;
  internal_attributes: uint16;
  external_attributes: uint32;
  local_header_offset: uint32;
};

type ZipEndOfCentralDirectory: record {
  end_of_central_dir_signature: uint32 = 0x06054b50;
  number_of_disk: uint16;
  disk_number: uint16;
  number_of_entries: uint16;
  total_number_of_entries: uint16;
  size_of_central_directory: uint32;
  offset_of_central_directory: uint32;
  comment_length: uint16;
};

type ZipFile: record {
  local_file_header: ZipLocalFileHeader;
  extra_fields: vector of ZipExtraField &length = local_file_header.extra_field_length;
  filename: bytestring &length = local_file_header.filename_length;
  file_data: ZipFileData;
  data_descriptor: optional ZipDataDescriptor;
};

type ZipArchive: record {
  files: vector of ZipFile;
  central_directories: vector of ZipCentralDirectory;
  end_of_central_directory: ZipEndOfCentralDirectory;
};

let zip_parser = bytes -> ZipArchive;