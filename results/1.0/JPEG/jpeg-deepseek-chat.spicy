module JPEG;

import spicy;

type JPEGHeader = unit {
    magic: bytes &size=2 &convert="JPEG";
    version: bytes &size=2;
    width: uint16;
    height: uint16;
    components: uint8;
};

type JPEGComponent = unit {
    id: uint8;
    sampling: uint8;
    quantization_table: uint8;
};

type JPEGFrame = unit {
    header: JPEGHeader;
    components: JPEGComponent[] &until($$.length == $.header.components);
};

type JPEGScan = unit {
    start_of_scan: bytes &size=2 &convert="SOS";
    components_in_scan: uint8;
    spectral_selection_start: uint8;
    spectral_selection_end: uint8;
    successive_approximation: uint8;
};

type JPEGFile = unit {
    frames: JPEGFrame[];
    scans: JPEGScan[];
};

on JPEGFile::%done {
    print "JPEG file parsed successfully";
}