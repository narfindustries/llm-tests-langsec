module JPEG;

import zeek from "zeek";

public type JPEG_File = unit {
    soi: SOI
    &requires=soi.marker == 0xffd8
    &parse-from= (MarkerHeader),
    segments: Segment[]
    &until(eoi),
    eoi: EOI
    &requires=eoi.marker == 0xffd9
};

type MarkerHeader = unit {
    marker: uint16
};

type SOI = MarkerHeader;
type EOI = MarkerHeader;

type Segment = unit {
    marker: uint16,
    body: switch(marker) {
        case 0xffe0 ... 0xffef => APPn,
        case 0xfffe => COM,
        case 0xffdb => DQT,
        case 0xffc0 => SOF0,
        case 0xffc2 => SOF2,
        case 0xffc4 => DHT,
        case 0xffda => SOS,
        default => UnknownSegment
    }
};

type APPn = unit {
    length: uint16,
    data: bytes &length=length-2
};

type COM = unit {
    length: uint16,
    comment: string &length=length-2
};

type DQT = unit {
    length: uint16,
    tables: DQT_Table[] &length=length-2
};

type DQT_Table = unit {
    info: uint8,
    values: if (info >> 4 == 0) { uint8[64] } else { uint16[64] }
};

type SOF0 = unit {
    length: uint16,
    precision: uint8,
    height: uint16,
    width: uint16,
    num_components: uint8,
    components: ComponentInfo[] &length=num_components
};

type SOF2 = SOF0;

type ComponentInfo = unit {
    id: uint8,
    sampling_factors: uint8,
    quantization_table_id: uint8
};

type DHT = unit {
    length: uint16,
    tables: DHT_Table[] &length=length-2
};

type DHT_Table = unit {
    info: uint8,
    num_codes: uint8[16],
    values: uint8[] &length=compute_dht_length(num_codes)
};

function compute_dht_length(codes: uint8[16]) : uint32 {
    local length: uint32 = 0;
    for (local i = 0; i < 16; i += 1)
        length += codes[i];
    return length;
}

type SOS = unit {
    length: uint16,
    num_components: uint8,
    components: SOS_ComponentInfo[] &length=num_components,
    start_spectral: uint8,
    end_spectral: uint8,
    approx: uint8
};

type SOS_ComponentInfo = unit {
    id: uint8,
    huffman_table_ids: uint8
};

type UnknownSegment = unit {
    length: uint16,
    data: bytes &length=length-2
};