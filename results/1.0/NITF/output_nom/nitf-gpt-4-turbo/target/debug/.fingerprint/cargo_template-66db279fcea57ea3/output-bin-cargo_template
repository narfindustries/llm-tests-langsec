{"$message_type":"diagnostic","message":"unused imports: `character::complete::char`, `multi::count`, and `opt`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":42,"byte_end":67,"line_start":3,"line_end":3,"column_start":5,"column_end":30,"is_primary":true,"text":[{"text":"    character::complete::char,","highlight_start":5,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":95,"byte_end":98,"line_start":4,"line_end":4,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    combinator::{map_res, opt},","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":105,"byte_end":117,"line_start":5,"line_end":5,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    multi::count,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":36,"byte_end":67,"line_start":2,"line_end":3,"column_start":26,"column_end":30,"is_primary":true,"text":[{"text":"    bytes::complete::take,","highlight_start":26,"highlight_end":27},{"text":"    character::complete::char,","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/main.rs","byte_start":93,"byte_end":98,"line_start":4,"line_end":4,"column_start":25,"column_end":30,"is_primary":true,"text":[{"text":"    combinator::{map_res, opt},","highlight_start":25,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/main.rs","byte_start":85,"byte_end":86,"line_start":4,"line_end":4,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"    combinator::{map_res, opt},","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/main.rs","byte_start":98,"byte_end":99,"line_start":4,"line_end":4,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"    combinator::{map_res, opt},","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/main.rs","byte_start":99,"byte_end":117,"line_start":4,"line_end":5,"column_start":31,"column_end":17,"is_primary":true,"text":[{"text":"    combinator::{map_res, opt},","highlight_start":31,"highlight_end":32},{"text":"    multi::count,","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `character::complete::char`, `multi::count`, and `opt`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    character::complete::char,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    combinator::{map_res, opt},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    multi::count,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1990,"byte_end":1991,"line_start":80,"line_end":80,"column_start":26,"column_end":27,"is_primary":false,"text":[{"text":"            parse_string(2),","highlight_start":26,"highlight_end":27}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1977,"byte_end":1989,"line_start":80,"line_end":80,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(2),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1989,"byte_end":1992,"line_start":80,"line_end":80,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"            parse_string(2),","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"(/* &[u8] */, 2)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:80:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m80\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(2),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m80\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 2)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2019,"byte_end":2020,"line_start":81,"line_end":81,"column_start":26,"column_end":27,"is_primary":false,"text":[{"text":"            parse_string(5),","highlight_start":26,"highlight_end":27}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2006,"byte_end":2018,"line_start":81,"line_end":81,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(5),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2018,"byte_end":2021,"line_start":81,"line_end":81,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"            parse_string(5),","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"(/* &[u8] */, 5)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:81:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m81\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(5),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m81\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 5)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2048,"byte_end":2049,"line_start":82,"line_end":82,"column_start":26,"column_end":27,"is_primary":false,"text":[{"text":"            parse_string(3),","highlight_start":26,"highlight_end":27}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2035,"byte_end":2047,"line_start":82,"line_end":82,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(3),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2047,"byte_end":2050,"line_start":82,"line_end":82,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"            parse_string(3),","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"(/* &[u8] */, 3)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:82:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(3),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 3)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2077,"byte_end":2078,"line_start":83,"line_end":83,"column_start":26,"column_end":27,"is_primary":false,"text":[{"text":"            parse_string(4),","highlight_start":26,"highlight_end":27}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2064,"byte_end":2076,"line_start":83,"line_end":83,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(4),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2076,"byte_end":2079,"line_start":83,"line_end":83,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"            parse_string(4),","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"(/* &[u8] */, 4)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:83:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(4),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 4)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2106,"byte_end":2108,"line_start":84,"line_end":84,"column_start":26,"column_end":28,"is_primary":false,"text":[{"text":"            parse_string(10),","highlight_start":26,"highlight_end":28}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2093,"byte_end":2105,"line_start":84,"line_end":84,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(10),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2105,"byte_end":2109,"line_start":84,"line_end":84,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"            parse_string(10),","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":"(/* &[u8] */, 10)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:84:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(10),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 10)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2136,"byte_end":2138,"line_start":85,"line_end":85,"column_start":26,"column_end":28,"is_primary":false,"text":[{"text":"            parse_string(14),","highlight_start":26,"highlight_end":28}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2123,"byte_end":2135,"line_start":85,"line_end":85,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(14),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2135,"byte_end":2139,"line_start":85,"line_end":85,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"            parse_string(14),","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":"(/* &[u8] */, 14)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:85:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m85\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(14),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m85\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 14)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2166,"byte_end":2168,"line_start":86,"line_end":86,"column_start":26,"column_end":28,"is_primary":false,"text":[{"text":"            parse_string(80),","highlight_start":26,"highlight_end":28}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2153,"byte_end":2165,"line_start":86,"line_end":86,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(80),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2165,"byte_end":2169,"line_start":86,"line_end":86,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"            parse_string(80),","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":"(/* &[u8] */, 80)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:86:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(80),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 80)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2196,"byte_end":2197,"line_start":87,"line_end":87,"column_start":26,"column_end":27,"is_primary":false,"text":[{"text":"            parse_string(1),","highlight_start":26,"highlight_end":27}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2183,"byte_end":2195,"line_start":87,"line_end":87,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(1),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2195,"byte_end":2198,"line_start":87,"line_end":87,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"            parse_string(1),","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"(/* &[u8] */, 1)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:87:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(1),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 1)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2225,"byte_end":2226,"line_start":88,"line_end":88,"column_start":26,"column_end":27,"is_primary":false,"text":[{"text":"            parse_string(2),","highlight_start":26,"highlight_end":27}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2212,"byte_end":2224,"line_start":88,"line_end":88,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(2),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2224,"byte_end":2227,"line_start":88,"line_end":88,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"            parse_string(2),","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"(/* &[u8] */, 2)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:88:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(2),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 2)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2254,"byte_end":2256,"line_start":89,"line_end":89,"column_start":26,"column_end":28,"is_primary":false,"text":[{"text":"            parse_string(11),","highlight_start":26,"highlight_end":28}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2241,"byte_end":2253,"line_start":89,"line_end":89,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(11),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2253,"byte_end":2257,"line_start":89,"line_end":89,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"            parse_string(11),","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":"(/* &[u8] */, 11)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:89:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(11),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 11)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2284,"byte_end":2285,"line_start":90,"line_end":90,"column_start":26,"column_end":27,"is_primary":false,"text":[{"text":"            parse_string(2),","highlight_start":26,"highlight_end":27}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2271,"byte_end":2283,"line_start":90,"line_end":90,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(2),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2283,"byte_end":2286,"line_start":90,"line_end":90,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"            parse_string(2),","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"(/* &[u8] */, 2)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:90:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m90\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(2),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m90\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 2)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2313,"byte_end":2315,"line_start":91,"line_end":91,"column_start":26,"column_end":28,"is_primary":false,"text":[{"text":"            parse_string(20),","highlight_start":26,"highlight_end":28}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2300,"byte_end":2312,"line_start":91,"line_end":91,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(20),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2312,"byte_end":2316,"line_start":91,"line_end":91,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"            parse_string(20),","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":"(/* &[u8] */, 20)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:91:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(20),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 20)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2343,"byte_end":2345,"line_start":92,"line_end":92,"column_start":26,"column_end":28,"is_primary":false,"text":[{"text":"            parse_string(20),","highlight_start":26,"highlight_end":28}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2330,"byte_end":2342,"line_start":92,"line_end":92,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(20),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2342,"byte_end":2346,"line_start":92,"line_end":92,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"            parse_string(20),","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":"(/* &[u8] */, 20)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:92:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(20),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 20)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2373,"byte_end":2374,"line_start":93,"line_end":93,"column_start":26,"column_end":27,"is_primary":false,"text":[{"text":"            parse_string(6),","highlight_start":26,"highlight_end":27}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2360,"byte_end":2372,"line_start":93,"line_end":93,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(6),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2372,"byte_end":2375,"line_start":93,"line_end":93,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"            parse_string(6),","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"(/* &[u8] */, 6)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:93:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m93\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(6),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m93\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 6)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2402,"byte_end":2403,"line_start":94,"line_end":94,"column_start":26,"column_end":27,"is_primary":false,"text":[{"text":"            parse_string(6),","highlight_start":26,"highlight_end":27}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2389,"byte_end":2401,"line_start":94,"line_end":94,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(6),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2401,"byte_end":2404,"line_start":94,"line_end":94,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"            parse_string(6),","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"(/* &[u8] */, 6)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:94:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(6),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 6)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2431,"byte_end":2433,"line_start":95,"line_end":95,"column_start":26,"column_end":28,"is_primary":false,"text":[{"text":"            parse_string(40),","highlight_start":26,"highlight_end":28}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2418,"byte_end":2430,"line_start":95,"line_end":95,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(40),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2430,"byte_end":2434,"line_start":95,"line_end":95,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"            parse_string(40),","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":"(/* &[u8] */, 40)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:95:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(40),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 40)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2461,"byte_end":2463,"line_start":96,"line_end":96,"column_start":26,"column_end":28,"is_primary":false,"text":[{"text":"            parse_string(27),","highlight_start":26,"highlight_end":28}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2448,"byte_end":2460,"line_start":96,"line_end":96,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(27),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2460,"byte_end":2464,"line_start":96,"line_end":96,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"            parse_string(27),","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":"(/* &[u8] */, 27)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:96:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(27),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 27)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2491,"byte_end":2492,"line_start":97,"line_end":97,"column_start":26,"column_end":27,"is_primary":false,"text":[{"text":"            parse_string(8),","highlight_start":26,"highlight_end":27}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2478,"byte_end":2490,"line_start":97,"line_end":97,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(8),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2490,"byte_end":2493,"line_start":97,"line_end":97,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"            parse_string(8),","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"(/* &[u8] */, 8)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:97:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(8),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 8)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2520,"byte_end":2521,"line_start":98,"line_end":98,"column_start":26,"column_end":27,"is_primary":false,"text":[{"text":"            parse_string(1),","highlight_start":26,"highlight_end":27}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2507,"byte_end":2519,"line_start":98,"line_end":98,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(1),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2519,"byte_end":2522,"line_start":98,"line_end":98,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"            parse_string(1),","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"(/* &[u8] */, 1)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:98:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(1),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 1)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2549,"byte_end":2551,"line_start":99,"line_end":99,"column_start":26,"column_end":28,"is_primary":false,"text":[{"text":"            parse_string(40),","highlight_start":26,"highlight_end":28}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2536,"byte_end":2548,"line_start":99,"line_end":99,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(40),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2548,"byte_end":2552,"line_start":99,"line_end":99,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"            parse_string(40),","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":"(/* &[u8] */, 40)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:99:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(40),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 40)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2579,"byte_end":2581,"line_start":100,"line_end":100,"column_start":26,"column_end":28,"is_primary":false,"text":[{"text":"            parse_string(40),","highlight_start":26,"highlight_end":28}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2566,"byte_end":2578,"line_start":100,"line_end":100,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(40),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2578,"byte_end":2582,"line_start":100,"line_end":100,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"            parse_string(40),","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":"(/* &[u8] */, 40)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:100:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(40),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 40)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2609,"byte_end":2610,"line_start":101,"line_end":101,"column_start":26,"column_end":27,"is_primary":false,"text":[{"text":"            parse_string(1),","highlight_start":26,"highlight_end":27}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2596,"byte_end":2608,"line_start":101,"line_end":101,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(1),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2608,"byte_end":2611,"line_start":101,"line_end":101,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"            parse_string(1),","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"(/* &[u8] */, 1)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:101:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(1),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 1)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2638,"byte_end":2639,"line_start":102,"line_end":102,"column_start":26,"column_end":27,"is_primary":false,"text":[{"text":"            parse_string(8),","highlight_start":26,"highlight_end":27}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2625,"byte_end":2637,"line_start":102,"line_end":102,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(8),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2637,"byte_end":2640,"line_start":102,"line_end":102,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"            parse_string(8),","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"(/* &[u8] */, 8)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:102:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(8),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 8)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2667,"byte_end":2669,"line_start":103,"line_end":103,"column_start":26,"column_end":28,"is_primary":false,"text":[{"text":"            parse_string(15),","highlight_start":26,"highlight_end":28}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2654,"byte_end":2666,"line_start":103,"line_end":103,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(15),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2666,"byte_end":2670,"line_start":103,"line_end":103,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"            parse_string(15),","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":"(/* &[u8] */, 15)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:103:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(15),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 15)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2697,"byte_end":2698,"line_start":104,"line_end":104,"column_start":26,"column_end":27,"is_primary":false,"text":[{"text":"            parse_string(5),","highlight_start":26,"highlight_end":27}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2684,"byte_end":2696,"line_start":104,"line_end":104,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(5),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2696,"byte_end":2699,"line_start":104,"line_end":104,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"            parse_string(5),","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"(/* &[u8] */, 5)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:104:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(5),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 5)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2726,"byte_end":2728,"line_start":105,"line_end":105,"column_start":26,"column_end":28,"is_primary":false,"text":[{"text":"            parse_string(40),","highlight_start":26,"highlight_end":28}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2713,"byte_end":2725,"line_start":105,"line_end":105,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(40),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2725,"byte_end":2729,"line_start":105,"line_end":105,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"            parse_string(40),","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":"(/* &[u8] */, 40)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:105:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(40),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 40)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2756,"byte_end":2757,"line_start":106,"line_end":106,"column_start":26,"column_end":27,"is_primary":false,"text":[{"text":"            parse_string(1),","highlight_start":26,"highlight_end":27}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2743,"byte_end":2755,"line_start":106,"line_end":106,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(1),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2755,"byte_end":2758,"line_start":106,"line_end":106,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"            parse_string(1),","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"(/* &[u8] */, 1)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:106:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(1),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 1)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2785,"byte_end":2786,"line_start":107,"line_end":107,"column_start":26,"column_end":27,"is_primary":false,"text":[{"text":"            parse_string(1),","highlight_start":26,"highlight_end":27}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2772,"byte_end":2784,"line_start":107,"line_end":107,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(1),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2784,"byte_end":2787,"line_start":107,"line_end":107,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"            parse_string(1),","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"(/* &[u8] */, 1)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:107:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m107\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(1),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m107\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 1)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2814,"byte_end":2815,"line_start":108,"line_end":108,"column_start":26,"column_end":27,"is_primary":false,"text":[{"text":"            parse_string(8),","highlight_start":26,"highlight_end":27}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2801,"byte_end":2813,"line_start":108,"line_end":108,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(8),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2813,"byte_end":2816,"line_start":108,"line_end":108,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"            parse_string(8),","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"(/* &[u8] */, 8)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:108:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(8),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 8)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2843,"byte_end":2844,"line_start":109,"line_end":109,"column_start":26,"column_end":27,"is_primary":false,"text":[{"text":"            parse_string(1),","highlight_start":26,"highlight_end":27}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2830,"byte_end":2842,"line_start":109,"line_end":109,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(1),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2842,"byte_end":2845,"line_start":109,"line_end":109,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"            parse_string(1),","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"(/* &[u8] */, 1)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:109:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(1),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 1)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2872,"byte_end":2874,"line_start":110,"line_end":110,"column_start":26,"column_end":28,"is_primary":false,"text":[{"text":"            parse_string(43),","highlight_start":26,"highlight_end":28}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2859,"byte_end":2871,"line_start":110,"line_end":110,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(43),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2871,"byte_end":2875,"line_start":110,"line_end":110,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"            parse_string(43),","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":"(/* &[u8] */, 43)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:110:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(43),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 43)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2902,"byte_end":2903,"line_start":111,"line_end":111,"column_start":26,"column_end":27,"is_primary":false,"text":[{"text":"            parse_string(1),","highlight_start":26,"highlight_end":27}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2889,"byte_end":2901,"line_start":111,"line_end":111,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(1),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2901,"byte_end":2904,"line_start":111,"line_end":111,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"            parse_string(1),","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"(/* &[u8] */, 1)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:111:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m111\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(1),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m111\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 1)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2931,"byte_end":2932,"line_start":112,"line_end":112,"column_start":26,"column_end":27,"is_primary":false,"text":[{"text":"            parse_string(8),","highlight_start":26,"highlight_end":27}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2918,"byte_end":2930,"line_start":112,"line_end":112,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(8),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2930,"byte_end":2933,"line_start":112,"line_end":112,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"            parse_string(8),","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"(/* &[u8] */, 8)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:112:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(8),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 8)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2960,"byte_end":2962,"line_start":113,"line_end":113,"column_start":26,"column_end":28,"is_primary":false,"text":[{"text":"            parse_string(15),","highlight_start":26,"highlight_end":28}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2947,"byte_end":2959,"line_start":113,"line_end":113,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(15),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2959,"byte_end":2963,"line_start":113,"line_end":113,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"            parse_string(15),","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":"(/* &[u8] */, 15)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:113:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(15),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 15)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2990,"byte_end":2991,"line_start":114,"line_end":114,"column_start":26,"column_end":27,"is_primary":false,"text":[{"text":"            parse_string(1),","highlight_start":26,"highlight_end":27}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2977,"byte_end":2989,"line_start":114,"line_end":114,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(1),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2989,"byte_end":2992,"line_start":114,"line_end":114,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"            parse_string(1),","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"(/* &[u8] */, 1)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:114:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(1),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 1)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":3019,"byte_end":3020,"line_start":115,"line_end":115,"column_start":26,"column_end":27,"is_primary":false,"text":[{"text":"            parse_string(3),","highlight_start":26,"highlight_end":27}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":3006,"byte_end":3018,"line_start":115,"line_end":115,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(3),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":3018,"byte_end":3021,"line_start":115,"line_end":115,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"            parse_string(3),","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"(/* &[u8] */, 3)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:115:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(3),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 3)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":3048,"byte_end":3050,"line_start":116,"line_end":116,"column_start":26,"column_end":28,"is_primary":false,"text":[{"text":"            parse_string(40),","highlight_start":26,"highlight_end":28}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":3035,"byte_end":3047,"line_start":116,"line_end":116,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(40),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":3047,"byte_end":3051,"line_start":116,"line_end":116,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"            parse_string(40),","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":"(/* &[u8] */, 40)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:116:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(40),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 40)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":3078,"byte_end":3080,"line_start":117,"line_end":117,"column_start":26,"column_end":28,"is_primary":false,"text":[{"text":"            parse_string(40),","highlight_start":26,"highlight_end":28}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":3065,"byte_end":3077,"line_start":117,"line_end":117,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(40),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":3077,"byte_end":3081,"line_start":117,"line_end":117,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"            parse_string(40),","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":"(/* &[u8] */, 40)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:117:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(40),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 40)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":3108,"byte_end":3111,"line_start":118,"line_end":118,"column_start":26,"column_end":29,"is_primary":false,"text":[{"text":"            parse_string(120),","highlight_start":26,"highlight_end":29}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":3095,"byte_end":3107,"line_start":118,"line_end":118,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(120),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":3107,"byte_end":3112,"line_start":118,"line_end":118,"column_start":25,"column_end":30,"is_primary":true,"text":[{"text":"            parse_string(120),","highlight_start":25,"highlight_end":30}],"label":null,"suggested_replacement":"(/* &[u8] */, 120)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:118:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(120),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 120)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":3139,"byte_end":3140,"line_start":119,"line_end":119,"column_start":26,"column_end":27,"is_primary":false,"text":[{"text":"            parse_string(6),","highlight_start":26,"highlight_end":27}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":3126,"byte_end":3138,"line_start":119,"line_end":119,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(6),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":3138,"byte_end":3141,"line_start":119,"line_end":119,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"            parse_string(6),","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"(/* &[u8] */, 6)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:119:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(6),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 6)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":3168,"byte_end":3169,"line_start":120,"line_end":120,"column_start":26,"column_end":27,"is_primary":false,"text":[{"text":"            parse_string(2),","highlight_start":26,"highlight_end":27}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":3155,"byte_end":3167,"line_start":120,"line_end":120,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(2),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":3167,"byte_end":3170,"line_start":120,"line_end":120,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"            parse_string(2),","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"(/* &[u8] */, 2)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:120:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(2),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 2)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":3197,"byte_end":3198,"line_start":121,"line_end":121,"column_start":26,"column_end":27,"is_primary":false,"text":[{"text":"            parse_string(1),","highlight_start":26,"highlight_end":27}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":3184,"byte_end":3196,"line_start":121,"line_end":121,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(1),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":3196,"byte_end":3199,"line_start":121,"line_end":121,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"            parse_string(1),","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"(/* &[u8] */, 1)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:121:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(1),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 1)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":3226,"byte_end":3228,"line_start":122,"line_end":122,"column_start":26,"column_end":28,"is_primary":false,"text":[{"text":"            parse_string(10),","highlight_start":26,"highlight_end":28}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":3213,"byte_end":3225,"line_start":122,"line_end":122,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(10),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":3225,"byte_end":3229,"line_start":122,"line_end":122,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"            parse_string(10),","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":"(/* &[u8] */, 10)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:122:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(10),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 10)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":3256,"byte_end":3258,"line_start":123,"line_end":123,"column_start":26,"column_end":28,"is_primary":false,"text":[{"text":"            parse_string(14),","highlight_start":26,"highlight_end":28}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":3243,"byte_end":3255,"line_start":123,"line_end":123,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(14),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":3255,"byte_end":3259,"line_start":123,"line_end":123,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"            parse_string(14),","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":"(/* &[u8] */, 14)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:123:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m123\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(14),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m123\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 14)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":3286,"byte_end":3288,"line_start":124,"line_end":124,"column_start":26,"column_end":28,"is_primary":false,"text":[{"text":"            parse_string(80),","highlight_start":26,"highlight_end":28}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":3273,"byte_end":3285,"line_start":124,"line_end":124,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(80),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":3285,"byte_end":3289,"line_start":124,"line_end":124,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"            parse_string(80),","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":"(/* &[u8] */, 80)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:124:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(80),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 80)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":3316,"byte_end":3317,"line_start":125,"line_end":125,"column_start":26,"column_end":27,"is_primary":false,"text":[{"text":"            parse_string(5),","highlight_start":26,"highlight_end":27}],"label":"argument #1 of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":3303,"byte_end":3315,"line_start":125,"line_end":125,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            parse_string(5),","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1245,"byte_end":1257,"line_start":66,"line_end":66,"column_start":17,"column_end":29,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":17,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1259,"byte_end":1269,"line_start":66,"line_end":66,"column_start":31,"column_end":41,"is_primary":false,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":31,"highlight_end":41}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1232,"byte_end":1244,"line_start":66,"line_end":66,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":3315,"byte_end":3318,"line_start":125,"line_end":125,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"            parse_string(5),","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"(/* &[u8] */, 5)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:125:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(5),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12margument #1 of type `&[u8]` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:66:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_string(input: &[u8], len: usize) -> IResult<&[u8], String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            parse_string\u001b[0m\u001b[0m\u001b[38;5;10m(/* &[u8] */, 5)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `(Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>): nom::sequence::Tuple<_, _, _>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1955,"byte_end":3342,"line_start":79,"line_end":127,"column_start":15,"column_end":10,"is_primary":true,"text":[{"text":"        tuple((        ","highlight_start":15,"highlight_end":24},{"text":"            parse_string(2),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(5),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(3),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(4),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(10),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(14),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(80),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(1),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(2),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(11),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(2),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(20),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(20),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(6),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(6),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(40),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(27),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(8),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(1),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(40),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(40),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(1),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(8),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(15),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(5),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(40),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(1),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(1),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(8),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(1),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(43),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(1),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(8),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(15),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(1),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(3),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(40),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(40),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(120),","highlight_start":1,"highlight_end":31},{"text":"            parse_string(6),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(2),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(1),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(10),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(14),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(80),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(5),","highlight_start":1,"highlight_end":29},{"text":"            ","highlight_start":1,"highlight_end":13},{"text":"        ))(input)?;","highlight_start":1,"highlight_end":10}],"label":"unsatisfied trait bound","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1949,"byte_end":1954,"line_start":79,"line_end":79,"column_start":9,"column_end":14,"is_primary":false,"text":[{"text":"        tuple((        ","highlight_start":9,"highlight_end":14}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `nom::sequence::Tuple<_, _, _>` is not implemented for `(Result<..., ...>, ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ...)`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following other types implement trait `nom::sequence::Tuple<I, O, E>`:\n  `()` implements `nom::sequence::Tuple<I, (), E>`\n  `(F,)` implements `nom::sequence::Tuple<Input, (Output,), Error>`\n  `(FnA, FnB)` implements `nom::sequence::Tuple<Input, (A, B), Error>`\n  `(FnA, FnB, FnC)` implements `nom::sequence::Tuple<Input, (A, B, C), Error>`\n  `(FnA, FnB, FnC, FnD)` implements `nom::sequence::Tuple<Input, (A, B, C, D), Error>`\n  `(FnA, FnB, FnC, FnD, FnE)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E), Error>`\n  `(FnA, FnB, FnC, FnD, FnE, FnF)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E, F), Error>`\n  `(FnA, FnB, FnC, FnD, FnE, FnF, FnG)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E, F, G), Error>`\nand 14 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `tuple`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nom-7.1.3/src/sequence/mod.rs","byte_start":8673,"byte_end":8687,"line_start":275,"line_end":275,"column_start":44,"column_end":58,"is_primary":true,"text":[{"text":"pub fn tuple<I, O, E: ParseError<I>, List: Tuple<I, O, E>>(","highlight_start":44,"highlight_end":58}],"label":"required by this bound in `tuple`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `(Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>): nom::sequence::Tuple<_, _, _>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:79:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m79\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        tuple((        \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m _________\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m80\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(2),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m81\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(5),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(3),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m127\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ))(input)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munsatisfied trait bound\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `nom::sequence::Tuple<_, _, _>` is not implemented for `(Result<..., ...>, ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ...)`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `nom::sequence::Tuple<I, O, E>`:\u001b[0m\n\u001b[0m              `()` implements `nom::sequence::Tuple<I, (), E>`\u001b[0m\n\u001b[0m              `(F,)` implements `nom::sequence::Tuple<Input, (Output,), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB)` implements `nom::sequence::Tuple<Input, (A, B), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC)` implements `nom::sequence::Tuple<Input, (A, B, C), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC, FnD)` implements `nom::sequence::Tuple<Input, (A, B, C, D), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC, FnD, FnE)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC, FnD, FnE, FnF)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E, F), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC, FnD, FnE, FnF, FnG)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E, F, G), Error>`\u001b[0m\n\u001b[0m            and 14 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `tuple`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nom-7.1.3/src/sequence/mod.rs:275:44\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m275\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn tuple<I, O, E: ParseError<I>, List: Tuple<I, O, E>>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `tuple`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `(Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>): nom::sequence::Tuple<_, _, _>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1949,"byte_end":3343,"line_start":79,"line_end":127,"column_start":9,"column_end":11,"is_primary":true,"text":[{"text":"        tuple((        ","highlight_start":9,"highlight_end":24},{"text":"            parse_string(2),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(5),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(3),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(4),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(10),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(14),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(80),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(1),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(2),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(11),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(2),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(20),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(20),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(6),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(6),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(40),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(27),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(8),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(1),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(40),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(40),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(1),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(8),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(15),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(5),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(40),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(1),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(1),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(8),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(1),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(43),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(1),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(8),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(15),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(1),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(3),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(40),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(40),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(120),","highlight_start":1,"highlight_end":31},{"text":"            parse_string(6),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(2),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(1),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(10),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(14),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(80),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(5),","highlight_start":1,"highlight_end":29},{"text":"            ","highlight_start":1,"highlight_end":13},{"text":"        ))(input)?;","highlight_start":1,"highlight_end":11}],"label":"unsatisfied trait bound","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `nom::sequence::Tuple<_, _, _>` is not implemented for `(Result<..., ...>, ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ...)`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following other types implement trait `nom::sequence::Tuple<I, O, E>`:\n  `()` implements `nom::sequence::Tuple<I, (), E>`\n  `(F,)` implements `nom::sequence::Tuple<Input, (Output,), Error>`\n  `(FnA, FnB)` implements `nom::sequence::Tuple<Input, (A, B), Error>`\n  `(FnA, FnB, FnC)` implements `nom::sequence::Tuple<Input, (A, B, C), Error>`\n  `(FnA, FnB, FnC, FnD)` implements `nom::sequence::Tuple<Input, (A, B, C, D), Error>`\n  `(FnA, FnB, FnC, FnD, FnE)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E), Error>`\n  `(FnA, FnB, FnC, FnD, FnE, FnF)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E, F), Error>`\n  `(FnA, FnB, FnC, FnD, FnE, FnF, FnG)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E, F, G), Error>`\nand 14 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `tuple`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nom-7.1.3/src/sequence/mod.rs","byte_start":8673,"byte_end":8687,"line_start":275,"line_end":275,"column_start":44,"column_end":58,"is_primary":true,"text":[{"text":"pub fn tuple<I, O, E: ParseError<I>, List: Tuple<I, O, E>>(","highlight_start":44,"highlight_end":58}],"label":"required by this bound in `tuple`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `(Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>): nom::sequence::Tuple<_, _, _>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:79:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m79\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        tuple((        \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m80\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(2),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m81\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(5),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(3),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m127\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ))(input)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|__________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munsatisfied trait bound\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `nom::sequence::Tuple<_, _, _>` is not implemented for `(Result<..., ...>, ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ...)`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `nom::sequence::Tuple<I, O, E>`:\u001b[0m\n\u001b[0m              `()` implements `nom::sequence::Tuple<I, (), E>`\u001b[0m\n\u001b[0m              `(F,)` implements `nom::sequence::Tuple<Input, (Output,), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB)` implements `nom::sequence::Tuple<Input, (A, B), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC)` implements `nom::sequence::Tuple<Input, (A, B, C), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC, FnD)` implements `nom::sequence::Tuple<Input, (A, B, C, D), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC, FnD, FnE)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC, FnD, FnE, FnF)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E, F), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC, FnD, FnE, FnF, FnG)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E, F, G), Error>`\u001b[0m\n\u001b[0m            and 14 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `tuple`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nom-7.1.3/src/sequence/mod.rs:275:44\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m275\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn tuple<I, O, E: ParseError<I>, List: Tuple<I, O, E>>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `tuple`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `(Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>): nom::sequence::Tuple<_, _, _>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1949,"byte_end":3350,"line_start":79,"line_end":127,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        tuple((        ","highlight_start":9,"highlight_end":24},{"text":"            parse_string(2),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(5),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(3),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(4),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(10),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(14),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(80),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(1),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(2),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(11),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(2),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(20),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(20),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(6),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(6),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(40),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(27),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(8),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(1),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(40),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(40),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(1),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(8),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(15),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(5),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(40),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(1),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(1),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(8),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(1),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(43),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(1),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(8),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(15),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(1),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(3),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(40),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(40),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(120),","highlight_start":1,"highlight_end":31},{"text":"            parse_string(6),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(2),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(1),","highlight_start":1,"highlight_end":29},{"text":"            parse_string(10),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(14),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(80),","highlight_start":1,"highlight_end":30},{"text":"            parse_string(5),","highlight_start":1,"highlight_end":29},{"text":"            ","highlight_start":1,"highlight_end":13},{"text":"        ))(input)?;","highlight_start":1,"highlight_end":18}],"label":"unsatisfied trait bound","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `nom::sequence::Tuple<_, _, _>` is not implemented for `(Result<..., ...>, ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ...)`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following other types implement trait `nom::sequence::Tuple<I, O, E>`:\n  `()` implements `nom::sequence::Tuple<I, (), E>`\n  `(F,)` implements `nom::sequence::Tuple<Input, (Output,), Error>`\n  `(FnA, FnB)` implements `nom::sequence::Tuple<Input, (A, B), Error>`\n  `(FnA, FnB, FnC)` implements `nom::sequence::Tuple<Input, (A, B, C), Error>`\n  `(FnA, FnB, FnC, FnD)` implements `nom::sequence::Tuple<Input, (A, B, C, D), Error>`\n  `(FnA, FnB, FnC, FnD, FnE)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E), Error>`\n  `(FnA, FnB, FnC, FnD, FnE, FnF)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E, F), Error>`\n  `(FnA, FnB, FnC, FnD, FnE, FnF, FnG)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E, F, G), Error>`\nand 14 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `tuple`","code":null,"level":"note","spans":[{"file_name":"/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nom-7.1.3/src/sequence/mod.rs","byte_start":8673,"byte_end":8687,"line_start":275,"line_end":275,"column_start":44,"column_end":58,"is_primary":true,"text":[{"text":"pub fn tuple<I, O, E: ParseError<I>, List: Tuple<I, O, E>>(","highlight_start":44,"highlight_end":58}],"label":"required by this bound in `tuple`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `(Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>, Result<(&[u8], String), nom::Err<nom::error::Error<&[u8]>>>): nom::sequence::Tuple<_, _, _>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:79:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m79\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        tuple((        \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m80\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(2),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m81\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(5),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            parse_string(3),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m127\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ))(input)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munsatisfied trait bound\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `nom::sequence::Tuple<_, _, _>` is not implemented for `(Result<..., ...>, ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ...)`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `nom::sequence::Tuple<I, O, E>`:\u001b[0m\n\u001b[0m              `()` implements `nom::sequence::Tuple<I, (), E>`\u001b[0m\n\u001b[0m              `(F,)` implements `nom::sequence::Tuple<Input, (Output,), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB)` implements `nom::sequence::Tuple<Input, (A, B), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC)` implements `nom::sequence::Tuple<Input, (A, B, C), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC, FnD)` implements `nom::sequence::Tuple<Input, (A, B, C, D), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC, FnD, FnE)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC, FnD, FnE, FnF)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E, F), Error>`\u001b[0m\n\u001b[0m              `(FnA, FnB, FnC, FnD, FnE, FnF, FnG)` implements `nom::sequence::Tuple<Input, (A, B, C, D, E, F, G), Error>`\u001b[0m\n\u001b[0m            and 14 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `tuple`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nom-7.1.3/src/sequence/mod.rs:275:44\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m275\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn tuple<I, O, E: ParseError<I>, List: Tuple<I, O, E>>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `tuple`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 49 previous errors; 1 warning emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 49 previous errors; 1 warning emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0061, E0277.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0061, E0277.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0061`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0061`.\u001b[0m\n"}
