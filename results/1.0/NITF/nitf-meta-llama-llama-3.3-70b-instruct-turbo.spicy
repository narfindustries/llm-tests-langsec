module NITF;

type nitf_file = record {
  file_header = bytestring;
  file_format = bytestring;
  file_version = bytestring;
  file_level = uint8;
  file_security_classification = uint8;
  file_control_number = bytestring;
  file_date = uint32;
  file_title = bytestring;
  file_security_classification_authority = bytestring;
  file_security_classification_authority_title = bytestring;
  file_security_classification_authority_country = bytestring;
  file_control_number_authority = bytestring;
  imageSegments = array[nitf_image];
  descriptor = array[nitf_descriptor];
  textRepresentationEntities = array[nitf_text_representation_entity];
  cStrings = array[nitf_cstring];
  spatialAndTemporalReferenceSystems = array[nitf_spatial_and_temporal_reference_system];
  residualData = array[nitf_residual_data];
}

type nitf_image = record {
  image_identifier = bytestring;
  image_security_classification = uint8;
  image_control_number = bytestring;
  image_date = uint32;
  image_title = bytestring;
  image_security_classification_authority = bytestring;
  image_security_classification_authority_title = bytestring;
  image_security_classification_authority_country = bytestring;
  image_interpretability_rating = uint8;
  image_quality_rating = uint8;
}

type nitf_descriptor = record {
  descriptor_identifier = bytestring;
  descriptor_version = bytestring;
  descriptor_date = uint32;
  descriptor_title = bytestring;
}

type nitf_text_representation_entity = record {
  tre_identifier = bytestring;
  tre_version = bytestring;
  tre_date = uint32;
  tre_title = bytestring;
}

type nitf_cstring = record {
  cs_identifier = bytestring;
  cs_version = bytestring;
  cs_date = uint32;
  cs_title = bytestring;
}

type nitf_spatial_and_temporal_reference_system = record {
  strs_identifier = bytestring;
  strs_version = bytestring;
  strs_date = uint32;
  strs_title = bytestring;
}

type nitf_residual_data = record {
  rd_identifier = bytestring;
  rd_version = bytestring;
  rd_date = uint32;
  rd_title = bytestring;
}