<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0/"
           targetNamespace="http://example.org/png"
           xmlns:tns="http://example.org/png"
           elementFormDefault="qualified">

    <xs:annotation>
        <xs:appinfo source="http://www.ogf.org/dfdl/">
            <dfdl:format ref="tns:pngFormat"/>
        </xs:appinfo>
    </xs:annotation>

    <dfdl:defineFormat name="pngFormat">
        <dfdl:byteOrder value="bigEndian"/>
        <dfdl:lengthKind value="explicit"/>
        <dfdl:lengthUnits value="bytes"/>
    </dfdl:defineFormat>

    <xs:element name="pngFile">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="signature" type="xs:hexBinary" dfdl:lengthKind="explicit" dfdl:length="8">
                    <xs:annotation>
                        <xs:appinfo source="http://www.ogf.org/dfdl/">
                            <dfdl:initiator value="%x89PNG%x0D%x0A%x1A%x0A"/>
                            <dfdl:assert test="{. eq xs:hexBinary('89504E470D0A1A0A')}"/>
                        </xs:appinfo>
                    </xs:annotation>
                </xs:element>
                <xs:element name="chunks" minOccurs="1" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="length" type="xs:unsignedInt" dfdl:lengthKind="explicit" dfdl:length="4"/>
                            <xs:element name="chunkType" type="xs:string" dfdl:lengthKind="explicit" dfdl:length="4" dfdl:encoding="US-ASCII"/>
                            <xs:element name="chunkData" type="xs:hexBinary" minOccurs="0">
                                <xs:annotation>
                                    <xs:appinfo source="http://www.ogf.org/dfdl/">
                                        <dfdl:lengthKind value="explicit"/>
                                        <dfdl:length ref="tns:length"/>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="crc" type="xs:unsignedInt" dfdl:lengthKind="explicit" dfdl:length="4"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- IHDR chunk definition -->
    <xs:element name="IHDR" type="tns:IHDRType"/>

    <xs:complexType name="IHDRType">
        <xs:sequence>
            <xs:element name="width" type="xs:unsignedInt" dfdl:lengthKind="explicit" dfdl:length="4"/>
            <xs:element name="height" type="xs:unsignedInt" dfdl:lengthKind="explicit" dfdl:length="4"/>
            <xs:element name="bitDepth" type="xs:unsignedByte" dfdl:lengthKind="explicit" dfdl:length="1"/>
            <xs:element name="colorType" type="xs:unsignedByte" dfdl:lengthKind="explicit" dfdl:length="1"/>
            <xs:element name="compressionMethod" type="xs:unsignedByte" dfdl:lengthKind="explicit" dfdl:length="1">
                <xs:annotation>
                    <xs:appinfo source="http://www.ogf.org/dfdl/">
                        <dfdl:assert test="{. eq 0}"/>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="filterMethod" type="xs:unsignedByte" dfdl:lengthKind="explicit" dfdl:length="1">
                <xs:annotation>
                    <xs:appinfo source="http://www.ogf.org/dfdl/">
                        <dfdl:assert test="{. eq 0}"/>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="interlaceMethod" type="xs:unsignedByte" dfdl:lengthKind="explicit" dfdl:length="1">
                <xs:annotation>
                    <xs:appinfo source="http://www.ogf.org/dfdl/">
                        <dfdl:assert test="{. eq 0 or . eq 1}"/>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!-- IDAT and IEND can be modeled similarly as elements -->
    <xs:element name="IDAT" type="tns:chunkType"/>

    <xs:complexType name="chunkType">
        <xs:sequence>
            <xs:element name="chunkData" type="xs:hexBinary"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="IEND" type="tns:chunkType"/>

    <!-- Ancillary chunks can follow similar pattern to IHDR and IDAT -->

</xs:schema>