module DNS;

import spicy;

public type Message = unit {
    header: Header;
    questions: Question[] &count(self.header.qdcount);
    answers: ResourceRecord[] &count(self.header.ancount);
    authorities: ResourceRecord[] &count(self.header.nscount);
    additional: ResourceRecord[] &count(self.header.arcount);
};

type Header = unit {
    id: uint16;
    flags: Flags;
    qdcount: uint16;
    ancount: uint16;
    nscount: uint16;
    arcount: uint16;
};

type Flags = unit {
    bits: bitfield(16) {
        qr     : 1;
        opcode : 4;
        aa     : 1;
        tc     : 1;
        rd     : 1;
        ra     : 1;
        z      : 1;
        ad     : 1;
        cd     : 1;
        rcode  : 4;
    };
};

type Question = unit {
    name: Name;
    qtype: uint16;
    qclass: uint16;
};

type ResourceRecord = unit {
    name: Name;
    type: uint16;
    class: uint16;
    ttl: uint32;
    rdlength: uint16;
    rdata: bytes &length=(self.rdlength);
};

type Name = unit {
    labels: Label[] &until($$.type == 0);
};

type Label = unit {
    type: uint8;
    switch (self.type) {
        0 -> { }
        0xc0 -> { 
            offset: uint8;
        }
        default -> {
            label: bytes &length=(self.type);
        }
    };
};