module DNS;

type Header = bitfield : uint16 {
    id: uint16;

    qr: bit<1>;       // Query/Response
    opcode: bit<4>;   // Operation code
    aa: bit<1>;       // Authoritative Answer
    tc: bit<1>;       // Truncation
    rd: bit<1>;       // Recursion Desired
    ra: bit<1>;       // Recursion Available
    z: bit<3>;        // Reserved
    rcode: bit<4>;    // Response Code

    qd_count: uint16; // Question Count
    an_count: uint16; // Answer Record Count
    ns_count: uint16; // Authority Record Count
    ar_count: uint16; // Additional Record Count
};

public type Question = unit {
    qname: vector of QuestionLabel &until(eod());
    qtype: uint16;
    qclass: uint16;
};

public type QuestionLabel = unit {
    length: uint8;
    label: bytes &length=length;
};

public type ResourceRecord = unit {
    name: vector of ResourceLabel &until(eod());
    type_: uint16;
    class_: uint16;
    ttl: uint32;
    rdlength: uint16;
    rdata: bytes &length=rdlength;
};

public type ResourceLabel = unit {
    length: uint8;
    label: bytes &length=length;
};

public type DNSMessage = unit {
    header: Header;

    questions: array of Question &size=header.qd_count;

    answers: array of ResourceRecord &size=header.an_count;

    authority: array of ResourceRecord &size=header.ns_count;

    additional: array of ResourceRecord &size=header.ar_count;
};