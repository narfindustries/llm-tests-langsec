module DNS;

import spicy;

type DNSHeader = unit {
    id: uint16;
    qr: bool : 1;
    opcode: uint4;
    aa: bool : 1;
    tc: bool : 1;
    rd: bool : 1;
    ra: bool : 1;
    z: uint3;
    rcode: uint4;
    qdcount: uint16;
    ancount: uint16;
    nscount: uint16;
    arcount: uint16;
};

type DomainLabel = unit {
    length: uint8;
    label: bytes &size=this.length;
};

type DomainName = unit {
    components: DomainLabel[] &eod;
};

type Question = unit {
    qname: DomainName;
    qtype: uint16;
    qclass: uint16;
};

type ResourceRecord = unit {
    name: DomainName;
    type_: uint16;
    class_: uint16;
    ttl: uint32;
    rdlength: uint16;
    rdata: bytes &size=this.rdlength;
};

type DNSMessage = unit {
    header: DNSHeader;
    questions: Question[] &size=this.header.qdcount;
    answers: ResourceRecord[] &size=this.header.ancount;
    authorities: ResourceRecord[] &size=this.header.nscount;
    additionals: ResourceRecord[] &size=this.header.arcount;
};

public type DNSSession = unit {
    request: DNSMessage;
    response: DNSMessage;
};