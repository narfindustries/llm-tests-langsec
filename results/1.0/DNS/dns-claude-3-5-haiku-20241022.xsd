<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0/"
           targetNamespace="urn:dns:dfdl:schema"
           xmlns:dns="urn:dns:dfdl:schema">

  <xs:annotation>
    <xs:appinfo source="http://www.ogf.org/dfdl/">
      <dfdl:format separator="" initiator="" terminator="" leadingSkip="0" trailingSkip="0"
                   textStringJustification="left" truncateSpecifiedLengthString="no"
                   escapeSchemeRef="" representation="text" encoding="UTF-8"
                   lengthKind="delimited" alignment="1" alignmentUnits="bytes"
                   fillByte="0"/>
    </xs:appinfo>
  </xs:annotation>

  <xs:element name="DNSMessage" dfdl:lengthKind="implicit">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Header" type="dns:HeaderType"/>
        <xs:element name="Questions" type="dns:QuestionsType"/>
        <xs:element name="Answers" type="dns:ResourceRecordsType" minOccurs="0"/>
        <xs:element name="Authority" type="dns:ResourceRecordsType" minOccurs="0"/>
        <xs:element name="Additional" type="dns:ResourceRecordsType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:complexType name="HeaderType">
    <xs:sequence>
      <xs:element name="TransactionID" type="xs:unsignedShort" dfdl:representation="binary"/>
      <xs:element name="Flags" type="xs:unsignedShort" dfdl:representation="binary"/>
      <xs:element name="QuestionCount" type="xs:unsignedShort" dfdl:representation="binary"/>
      <xs:element name="AnswerCount" type="xs:unsignedShort" dfdl:representation="binary"/>
      <xs:element name="AuthorityCount" type="xs:unsignedShort" dfdl:representation="binary"/>
      <xs:element name="AdditionalCount" type="xs:unsignedShort" dfdl:representation="binary"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="QuestionsType">
    <xs:sequence>
      <xs:element name="Question" maxOccurs="unbounded">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Name" type="dns:DomainNameType"/>
            <xs:element name="Type" type="xs:unsignedShort" dfdl:representation="binary"/>
            <xs:element name="Class" type="xs:unsignedShort" dfdl:representation="binary"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ResourceRecordsType">
    <xs:sequence>
      <xs:element name="ResourceRecord" maxOccurs="unbounded" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Name" type="dns:DomainNameType"/>
            <xs:element name="Type" type="xs:unsignedShort" dfdl:representation="binary"/>
            <xs:element name="Class" type="xs:unsignedShort" dfdl:representation="binary"/>
            <xs:element name="TTL" type="xs:unsignedInt" dfdl:representation="binary"/>
            <xs:element name="RDLength" type="xs:unsignedShort" dfdl:representation="binary"/>
            <xs:element name="RData" type="xs:hexBinary" dfdl:lengthKind="explicit" 
                        dfdl:length="{ ../RDLength }"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="DomainNameType">
    <xs:sequence dfdl:separator="" dfdl:terminator="0x00">
      <xs:element name="Labels" type="xs:string" dfdl:inputValueCalc="{
        let $current := .
        return string-join(
          for $label in fn:tokenize($current, '\.')[. ne '']
          return 
            concat(
              fn:string-length($label),
              $label
            ), 
          ''
        )
      }"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>