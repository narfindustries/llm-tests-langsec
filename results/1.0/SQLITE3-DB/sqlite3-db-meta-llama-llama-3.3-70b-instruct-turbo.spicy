# Zeek Spicy Specification for SQLite3 Database File

type SQLite3_Header = struct {
  magic: bytestring(16);
  page_size: uint16;
  write_version: uint8;
  read_version: uint8;
  reserved_space: uint8;
  max_embedded_payload_fraction: uint8;
  min_embedded_payload_fraction: uint8;
  leaf_payload_fraction: uint8;
  file_change_counter: uint32;
  database_size_in_pages: uint32;
  first_freelist_trunk_page: uint32;
  total_freelist_pages: uint32;
  schema_cookie: uint32;
  schema_format: uint32;
  default_page_cache_size: uint32;
  largest_file_size_in_pages: uint32;
  text_encoding: uint32;
  user_version: uint32;
  incremental_vacuum_mode: uint32;
  application_id: uint32;
  reserved_for_expansion: bytestring(20);
};

type SQLite3_Page = struct {
  page_type: uint8;
  first_freeblock: uint16;
  cell_count: uint16;
  cell_content_area: bytestring(this.page_size - 12);
  fragment_area: bytestring(this.page_size - this.cell_content_area.length - 12);
  page_header: SQLite3_Page_Header;
};

type SQLite3_Page_Header = struct {
  page_type: uint8;
  first_freeblock: uint16;
  cell_count: uint16;
};

type SQLite3_Cell = struct {
  payload_len: uint16;
  payload: bytestring(this.payload_len);
  rowid: uint32;
};

type SQLite3_File = struct {
  header: SQLite3_Header;
  pages: array[SQLite3_Page];
};
