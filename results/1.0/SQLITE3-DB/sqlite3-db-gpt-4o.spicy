# Zeek Spicy specification for parsing SQLite3 database files

module SQLite3;

type SQLite3Header = unit {
    magic: bytes &length=16 &check==$b"\x53\x51\x4c\x69\x74\x65\x20\x66\x6f\x72\x6d\x61\x74\x20\x33\x00";
    page_size: uint16;
    file_format_write_version: uint8;
    file_format_read_version: uint8;
    reserved_space_per_page: uint8;
    max_embedded_payload_fraction: uint8;
    min_embedded_payload_fraction: uint8;
    leaf_payload_fraction: uint8;
    file_change_counter: uint32;
    database_size_in_pages: uint32;
    first_freelist_trunk_page: uint32;
    total_freelist_pages: uint32;
    schema_cookie: uint32;
    schema_format_version: uint32;
    default_page_cache_size: uint32;
    largest_btree_root_page_number: uint32;
    text_encoding: uint32;
    user_version: uint32;
    incremental_vacuum_mode: uint32;
    application_id: uint32;
    reserved: bytes &length=20;
    version_valid_for_number: uint32;
    sqlite_version_number: uint32;
};

public type SQLite3DB = unit {
    header: SQLite3Header;
    # Further parsing of SQLite3 database structure can be done here
};

public module Parser = global {
    hook zeek_init() {
        Spicy::register_parser("application/x-sqlite3", SQLite3::SQLite3DB);
    }
}
