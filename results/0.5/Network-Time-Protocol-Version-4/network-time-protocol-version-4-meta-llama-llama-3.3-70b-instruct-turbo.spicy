module Network_Time_Protocol_Version_4;

type Leap_Indicator = uint8;
type Version_Number = uint8;
type Mode = uint8;

type NTP_Packet = struct {
  leap_indicator: uint8;
  version_number: uint8;
  mode: uint8;
  poll: uint8;
  precision: int8;
  root_delay: uint32;
  root_dispersion: uint32;
  ref_id: uint32;
  ref_ts: uint64;
  orig_ts: uint64;
  recv_ts: uint64;
  xmit_ts: uint64;
  extensions: Extension_Field[];
}

type Extension_Field_Type = enum {
  Unassigned = 0x0000,
  MAC = 0x0001,
  Auth = 0x0002,
  Reserved = 0x7fff
}

type Extension_Field = struct {
  field_type: uint16;
  length: uint16;
  value: bytes;
}

type MAC = struct {
  key_id: uint32;
  mac: bytes;
}

type Auth = struct {
  key_id: uint32;
  auth: bytes;
}

type Extension_Field_0x0001 = struct {
  mac: MAC;
}

type Extension_Field_0x0002 = struct {
  auth: Auth;
}

let ntp_packet = NTP_Packet; 

type Network_Time_Protocol_Version_4_Parser = parser {
  ntp_packet: NTP_Packet;
}