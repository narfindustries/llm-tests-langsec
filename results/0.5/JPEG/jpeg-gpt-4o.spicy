module JPEG;

public type JPEG = unit {
    soi: SOI,
    segments: list<Segment>,
    eoi: EOI
} &requires (soi.marker == 0xffd8 and eoi.marker == 0xffd9);

type SOI = unit {
    marker: uint16
};

type EOI = unit {
    marker: uint16
};

type Segment = unit {
    marker: uint16,
    body: switch(marker) {
        case 0xffe0: APP0,
        case 0xffe1: APP1,
        case 0xffdb: DQT,
        case 0xffc0: SOF,
        case 0xffc1: SOF,
        case 0xffc2: SOF,
        case 0xffc4: DHT,
        case 0xffda: SOS,
        case 0xffdd: DRI,
        case 0xfffe: COM,
        case 0xffd0: Restart,
        case 0xffd1: Restart,
        case 0xffd2: Restart,
        case 0xffd3: Restart,
        case 0xffd4: Restart,
        case 0xffd5: Restart,
        case 0xffd6: Restart,
        case 0xffd7: Restart,
        default: UnknownSegment
    }
};

type APP0 = unit {
    length: uint16,
    identifier: bytes &size = (length - 2)
};

type APP1 = unit {
    length: uint16,
    data: bytes &size = (length - 2)
};

type DQT = unit {
    length: uint16,
    tables: list<QuantizationTable> &until ($input.length - $offset == 0)
};

type QuantizationTable = unit {
    info: uint8,
    values: bytes &size = 64
};

type SOF = unit {
    length: uint16,
    precision: uint8,
    height: uint16,
    width: uint16,
    num_components: uint8,
    components: list<Component> &length = num_components
};

type Component = unit {
    id: uint8,
    sampling_factors: uint8,
    quantization_table_id: uint8
};

type DHT = unit {
    length: uint16,
    tables: list<HuffmanTable> &until ($input.length - $offset == 0)
};

type HuffmanTable = unit {
    info: uint8,
    lengths: bytes &size = 16,
    symbols: bytes &size = (sum(lengths))
};

type SOS = unit {
    length: uint16,
    num_components: uint8,
    components: list<SOSComponent> &length = num_components,
    spectral_selection_start: uint8,
    spectral_selection_end: uint8,
    successive_approximation: uint8,
    data: bytes &restof
};

type SOSComponent = unit {
    id: uint8,
    huffman_table_ids: uint8
};

type DRI = unit {
    length: uint16,
    restart_interval: uint16
};

type COM = unit {
    length: uint16,
    comment: bytes &size = (length - 2)
};

type Restart = unit {
    data: bytes &restof
};

type UnknownSegment = unit {
    length: uint16,
    data: bytes &size = (length - 2)
};