module GZIP;

import spicy;

type GZIP = unit {
    id1: uint8 &assert(id1 == 0x1F);
    id2: uint8 &assert(id2 == 0x8B);
    cm: uint8 &assert(cm == 0x08);
    flg: Flags;
    mtime: uint32;
    xfl: uint8;
    os: uint8;
    extra: ExtraField ? (flg.fextra);
    fname: bstring ? (flg.fname) &until($input == 0x00);
    fcomment: bstring ? (flg.fcomment) &until($input == 0x00);
    hcrc: uint16 ? (flg.fhcrc);
    compressed_data: bytes &rest_of_data;
    crc32: uint32;
    isize: uint32;

    on %done {
        # Validate CRC32 and ISIZE if necessary
    }
};

type Flags = bitfield8 {
    ftext: bool @0;
    fhcrc: bool @1;
    fextra: bool @2;
    fname: bool @3;
    fcomment: bool @4;
    reserved: bit<3> @5...7;
};

type ExtraField = unit {
    len: uint16;
    data: bytes &length=len;
};