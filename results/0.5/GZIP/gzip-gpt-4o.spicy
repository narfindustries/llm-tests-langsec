module GZIP;

import zeek;

type GZIPHeader = unit {
    magic: uint16 &check_eq=0x8b1f;
    compression_method: uint8 &check_eq=8;
    flags: uint8;
    mtime: uint32;
    extra_flags: uint8;
    os: uint8;
    extra: bytes &length=extra_length &if=(flags & 0x04 != 0);
    extra_length: uint16 &convert=|v| flags & 0x04 != 0 ? v : 0;
    fname: bytes &terminated_with=0 &if=(flags & 0x08 != 0);
    fcomment: bytes &terminated_with=0 &if=(flags & 0x10 != 0);
    crc16: uint16 &if=(flags & 0x02 != 0);
};

type GZIPFooter = unit {
    crc32: uint32;
    isize: uint32;
};

public type GZIPFile = unit {
    header: GZIPHeader;
    compressed_data: bytes &until=eof;
    footer: GZIPFooter;
};

public module Parser = {
    export {
        type ParsedGZIP = unit {
            gzip: GZIPFile;
        };
    }
}