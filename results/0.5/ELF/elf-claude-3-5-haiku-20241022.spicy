module ELF;

import spicy;

public type File = unit {
    header: Header;
    sections: Section[] &until($input.eof());

    var section_headers: vector<Section> = [];

    on sections foreach {
        section_headers.push_back(self);
    }
};

public type Header = unit {
    magic: bytes &size=4 
        where $$ == b"\x7FELF";
    
    class: uint8 
        where $$ == 1 || $$ == 2;  # 1 = 32-bit, 2 = 64-bit
    
    endian: uint8 
        where $$ == 1 || $$ == 2;  # 1 = little endian, 2 = big endian
    
    version: uint8;
    
    os_abi: uint8;
    abi_version: uint8;
    
    padding: bytes &size=7;
    
    type: uint16;
    machine: uint16;
    elf_version: uint32;
    
    entry_point: uint64;
    
    program_header_offset: uint64;
    section_header_offset: uint64;
    
    flags: uint32;
    header_size: uint16;
    program_header_entry_size: uint16;
    program_header_num_entries: uint16;
    section_header_entry_size: uint16;
    section_header_num_entries: uint16;
    section_names_index: uint16;
};

public type Section = unit {
    name_offset: uint32;
    type: uint32;
    flags: uint64;
    addr: uint64;
    offset: uint64;
    size: uint64;
    link: uint32;
    info: uint32;
    addr_align: uint64;
    entry_size: uint64;

    data: bytes &size=self.size;
};

public function is_elf_file(f: File) : bool {
    return |f.header.magic| == 4 && f.header.magic == b"\x7FELF";
}