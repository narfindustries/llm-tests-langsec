module DICOM;

public type DicomHeader = unit {
    # Patient Information
    patient_name: bytes;
    patient_id: bytes;
    patient_birth_date: bytes;
    patient_sex: bytes;
    patient_age: bytes;

    # Study Information
    study_instance_uid: bytes;
    study_date: bytes;
    study_time: bytes;
    accession_number: bytes;
    referring_physician_name: bytes;

    # Series Information
    series_instance_uid: bytes;
    series_number: uint32;
    modality: bytes;
    protocol_name: bytes;

    # Image Attributes
    sop_instance_uid: bytes;
    image_number: uint32;
    pixel_data: bytes;
    pixel_data_length: uint32;
    rows: uint16;
    columns: uint16;
    bits_allocated: uint8;
    bits_stored: uint8;
    photometric_interpretation: bytes;

    # Transfer Syntax
    transfer_syntax: enum {
        EXPLICIT_VR_LITTLE_ENDIAN,
        IMPLICIT_VR_LITTLE_ENDIAN,
        EXPLICIT_VR_BIG_ENDIAN,
        JPEG_COMPRESSION,
        RLE_COMPRESSION
    };

    # Optional Fields
    optional_fields: OptionalFieldsBlock;
};

type OptionalFieldsBlock = unit {
    manufacturer: bytes;
    model_name: bytes;
    software_version: bytes;
    patient_weight: double;
    patient_height: double;
    contrast_agent: bytes;
    scanning_sequence: bytes;
    sequence_variant: bytes;
    scan_options: bytes;
};