<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0/"
           targetNamespace="http://example.com/dicom"
           xmlns:tns="http://example.com/dicom"
           elementFormDefault="qualified"
           attributeFormDefault="unqualified">

  <xs:element name="DICOMFile">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Preamble" type="xs:hexBinary" dfdl:length="128" dfdl:lengthUnits="bytes" dfdl:lengthKind="explicit"/>
        <xs:element name="Prefix" type="xs:string" dfdl:length="4" dfdl:lengthUnits="bytes" dfdl:encoding="ascii" dfdl:lengthKind="explicit"/>
        <xs:element name="DataSet" type="tns:DataSetType"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:complexType name="DataSetType">
    <xs:sequence>
      <xs:element name="DataElement" type="tns:DataElementType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="DataElementType">
    <xs:sequence>
      <xs:element name="Tag" type="tns:TagType"/>
      <xs:element name="VR" type="xs:string" dfdl:length="2" dfdl:encoding="ascii" dfdl:lengthKind="explicit"/>
      <xs:element name="ValueLength" type="xs:unsignedInt" dfdl:length="4" dfdl:lengthUnits="bytes" dfdl:byteOrder="littleEndian" dfdl:lengthKind="explicit"/>
      <xs:element name="Value" type="xs:hexBinary" dfdl:length="{../ValueLength}" dfdl:lengthUnits="bytes" dfdl:lengthKind="explicit"/>
    </xs:sequence>
  </xs:complexType>

  <xs:simpleType name="TagType">
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9A-Fa-f]{4},[0-9A-Fa-f]{4}"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Example of some common DICOM Data Elements -->
  <xs:element name="PatientName" type="tns:PersonNameType"/>
  <xs:element name="PatientID" type="xs:string" dfdl:length="64" dfdl:encoding="ascii" dfdl:lengthKind="explicit"/>
  <xs:element name="Modality" type="xs:string" dfdl:length="2" dfdl:encoding="ascii" dfdl:lengthKind="explicit"/>

  <xs:complexType name="PersonNameType">
    <xs:sequence>
      <xs:element name="FamilyName" type="xs:string" minOccurs="0"/>
      <xs:element name="GivenName" type="xs:string" minOccurs="0"/>
      <xs:element name="MiddleName" type="xs:string" minOccurs="0"/>
      <xs:element name="Prefix" type="xs:string" minOccurs="0"/>
      <xs:element name="Suffix" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

</xs:schema>