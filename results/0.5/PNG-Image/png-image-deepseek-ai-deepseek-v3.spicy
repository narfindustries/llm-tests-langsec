module PNG;

import spicy;

type PNG_File = unit {
    signature: bytes &size=8 &requires=signature == b"\x89PNG\r\n\x1a\n";
    chunks: Chunk[] &until=$$.type == b"IEND";
};

type Chunk = unit {
    length: uint32;
    type: bytes &size=4;
    data: case (type) of {
        b"IHDR" => IHDR_Chunk,
        b"PLTE" => PLTE_Chunk,
        b"IDAT" => IDAT_Chunk,
        b"IEND" => IEND_Chunk,
        b"bKGD" => bKGD_Chunk,
        b"cHRM" => cHRM_Chunk,
        b"gAMA" => gAMA_Chunk,
        b"hIST" => hIST_Chunk,
        b"iCCP" => iCCP_Chunk,
        b"iTXt" => iTXt_Chunk,
        b"pHYs" => pHYs_Chunk,
        b"sBIT" => sBIT_Chunk,
        b"sPLT" => sPLT_Chunk,
        b"sRGB" => sRGB_Chunk,
        b"tEXt" => tEXt_Chunk,
        b"tIME" => tIME_Chunk,
        b"tRNS" => tRNS_Chunk,
        b"zTXt" => zTXt_Chunk,
        * => bytes &size=length,
    };
    crc: uint32;
};

type IHDR_Chunk = unit {
    width: uint32;
    height: uint32;
    bit_depth: uint8;
    color_type: uint8;
    compression_method: uint8;
    filter_method: uint8;
    interlace_method: uint8;
};

type PLTE_Chunk = unit {
    entries: bytes[] &size=3 &until=$$.length / 3;
};

type IDAT_Chunk = unit {
    compressed_data: bytes &size=$$.length;
};

type IEND_Chunk = unit {};

type bKGD_Chunk = unit {
    background_color: bytes &size=$$.length;
};

type cHRM_Chunk = unit {
    white_point_x: uint32;
    white_point_y: uint32;
    red_x: uint32;
    red_y: uint32;
    green_x: uint32;
    green_y: uint32;
    blue_x: uint32;
    blue_y: uint32;
};

type gAMA_Chunk = unit {
    gamma: uint32;
};

type hIST_Chunk = unit {
    histogram: uint16[] &until=$$.length / 2;
};

type iCCP_Chunk = unit {
    profile_name: bytes &until=b"\x00";
    compression_method: uint8;
    compressed_profile: bytes &size=$$.length - len($$.profile_name) - 1;
};

type iTXt_Chunk = unit {
    keyword: bytes &until=b"\x00";
    compression_flag: uint8;
    compression_method: uint8;
    language_tag: bytes &until=b"\x00";
    translated_keyword: bytes &until=b"\x00";
    text: bytes &size=$$.length - len($$.keyword) - len($$.language_tag) - len($$.translated_keyword) - 3;
};

type pHYs_Chunk = unit {
    pixels_per_unit_x: uint32;
    pixels_per_unit_y: uint32;
    unit_specifier: uint8;
};

type sBIT_Chunk = unit {
    significant_bits: bytes &size=$$.length;
};

type sPLT_Chunk = unit {
    palette_name: bytes &until=b"\x00";
    sample_depth: uint8;
    palette_entries: bytes[] &size=$$.length - len($$.palette_name) - 1;
};

type sRGB_Chunk = unit {
    rendering_intent: uint8;
};

type tEXt_Chunk = unit {
    keyword: bytes &until=b"\x00";
    text: bytes &size=$$.length - len($$.keyword) - 1;
};

type tIME_Chunk = unit {
    year: uint16;
    month: uint8;
    day: uint8;
    hour: uint8;
    minute: uint8;
    second: uint8;
};

type tRNS_Chunk = unit {
    transparency_data: bytes &size=$$.length;
};

type zTXt_Chunk = unit {
    keyword: bytes &until=b"\x00";
    compression_method: uint8;
    compressed_text: bytes &size=$$.length - len($$.keyword) - 1;
};