module NITF;

public type Header = unit {
    file_type: bytes &size=4;
    version: bytes &size=5;
    complexity: bytes &size=1;
    system: bytes &size=9;
    date_time: bytes &size=14;
    file_title: bytes &size=80;
    file_security: bytes &size=1;
    security_classification: bytes &size=2;
    security_control: bytes &size=11;
    file_size: uint64;
    header_size: uint64;
    num_image_segments: uint64;
};

public type ImageSegment = unit {
    image_id: bytes &size=10;
    image_date_time: bytes &size=14;
    image_security: bytes &size=1;
    security_classification: bytes &size=2;
    security_control: bytes &size=11;
    image_size: uint64;
};

public type NITFFile = unit {
    header: Header;
    image_segments: array of ImageSegment &length=header.num_image_segments;
};

public module NITFParser = module {
    public function parse(data: bytes): NITFFile {
        return parse_NITFFile(data);
    }
};