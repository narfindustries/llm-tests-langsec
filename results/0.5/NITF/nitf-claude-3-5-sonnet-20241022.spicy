module NITF;

public type Message = unit {
    file_header: FileHeader;
    image_segments: ImageSegment[];
};

type FileHeader = unit {
    file_profile_name: bytes &size=4;
    file_version: bytes &size=5;
    complexity_level: bytes &size=2;
    standard_type: bytes &size=4;
    originating_station_id: bytes &size=10;
    date_time: bytes &size=14;
    file_title: bytes &size=80;
    security_classification: bytes &size=1;
    copy_number: bytes &size=5;
    num_image_segments: uint16 &byte-order=little;
    
    on %done {
        self.num_image_segments = self.num_image_segments;
    }
};

type ImageSegment = unit {
    im: bytes &size=2;
    subheader_length: uint16 &byte-order=little;
    image_identifier: bytes &size=10;
    date_time: bytes &size=14;
    target_identifier: bytes &size=17;
    image_identifier2: bytes &size=80;
    image_security_class: bytes &size=1;
    source: bytes &size=42;
    num_rows: uint32 &byte-order=little;
    num_cols: uint32 &byte-order=little;
    pixel_value_type: bytes &size=3;
    image_representation: bytes &size=8;
    image_category: bytes &size=8;
    actual_bits_per_pixel: uint8;
    pixel_justification: bytes &size=1;
    image_coord_system: bytes &size=1;
    image_comment: bytes &size=80;
    compression: bytes &size=1;
    
    on %done {
        self.subheader_length = self.subheader_length;
        self.num_rows = self.num_rows;
        self.num_cols = self.num_cols;
        self.actual_bits_per_pixel = self.actual_bits_per_pixel;
    }
};