module HL7_v2;

type Byte = uint8;
type UInt16 = uint16;
type UInt32 = uint32;
type UInt64 = uint64;
type Int16 = int16;
type Int32 = int32;
type Int64 = int64;
type String = bytestring;

type MSH = record {
  field_separator: Byte,
  encoding_chars: String(4),
  sending_app: String(20),
  sending_fac: String(20),
  receiving_app: String(20),
  receiving_fac: String(20),
  date_time: String(14),
  security: String(40),
  msg_type: String(10),
  msg_ctrl_id: String(20),
  proc_id: String(3),
  version_id: String(10),
  seq_num: UInt16,
  cont_ptr: String(180),
  accept_ack_type: String(2),
  app_ack_type: String(2),
  country_code: String(3),
  char_set: String(30),
  princ_lang: String(30)
};

type PID = record {
  set_id: UInt16,
  patient_id: String(20),
  patient_id_type: String(20),
  alt_patient_id: String(20),
  patient_name: String(250),
  mother_maiden_name: String(50),
  date_of_birth: String(8),
  sex: String(1),
  patient_alias: String(250),
  race: String(30),
  patient_addr: String(250),
  county_code: String(30),
  phone_num_home: String(20),
  phone_num_business: String(20),
  primary_lang: String(30),
  marital_status: String(1),
  religion: String(30),
  patient_acct_num: String(20),
  ssn_num: String(20),
  dl_num: String(20),
  mother_id: String(20),
  ethnic_grp: String(30),
  birth_place: String(50),
  mult_birth_ind: String(1),
  birth_order: UInt16,
  citizenship: String(30),
  vet_mil_status: String(30),
  nationality: String(30),
  patient_death_date: String(8),
  death_ind: String(1)
};

type PV1 = record {
  set_id: UInt16,
  visit_num: String(20),
  patient_class: String(1),
  visit_num_unique: String(20),
  financial_class: String(30),
  pre_admit_num: String(20),
  prior_patient_loc: String(30),
  admitting_doc: String(50),
  referring_doc: String(50),
  consulting_doc: String(50),
  hospital_service: String(30),
  specialty: String(30),
  admitting_time: String(14),
  discharge_disposition: String(2),
  discharged_to_loc: String(30),
  diet_type: String(30),
  servicing_fac: String(30),
  bed_status: String(30),
  visit_priority_code: String(2),
  prev_service_date: String(8),
  expected_admit_date: String(8),
  expected_discharge_date: String(8),
  visit_num_other: String(20),
  visit_priority_code_other: String(2),
  prev_visit_num: String(20),
  visit_indicator: String(1),
  other_healthcare_prov: String(50),
  visit_account_num: String(20),
  admit_source: String(30),
  ambulatory_status: String(30),
  visit_type: String(30),
  visit_stop_date_time: String(14),
  visit_start_date_time: String(14),
  visit_end_date_time: String(14),
  discharge_date_time: String(14),
  discharge_disposition_code: String(2),
  discharged_to_loc_code: String(30),
  diet_type_code: String(30),
  servicing_fac_code: String(30),
  bed_status_code: String(30),
  visit_priority_code_other2: String(2),
  prev_service_date_other: String(8),
  expected_admit_date_other: String(8),
  expected_discharge_date_other: String(8),
  visit_num_other2: String(20),
  visit_indicator_other: String(1),
  other_healthcare_prov_other: String(50),
  visit_account_num_other: String(20),
  admit_source_other: String(30),
  ambulatory_status_other: String(30)
};

type HL7 = record {
  msh: MSH,
  pid: PID,
  pv1: PV1
};

@ek
state hl7: HL7;

event hl7_init()
  {
  hl7 = HL7($msh=MSH(), $pid=PID(), $pv1=PV1());
  }