module HTTP;

public type HTTP = unit {
    request_line: RequestLine;
    headers: Headers;
    message_body: bytes &optional;

    on %done { 
        print self; 
    }
};

type RequestLine = unit {
    method: Method;
    sp1: bytes &size=1 &requires=($$ == b" ");
    uri: URI;
    sp2: bytes &size=1 &requires=($$ == b" ");
    version: Version;
    crlf: bytes &size=2 &requires=($$ == b"\r\n");
};

type Method = enum {
    GET,
    POST, 
    HEAD,
    PUT,
    DELETE,
    TRACE,
    OPTIONS,
    CONNECT
};

type URI = bytes;

type Version = unit {
    http: bytes &size=4 &requires=($$ == b"HTTP");
    slash: bytes &size=1 &requires=($$ == b"/");
    major: uint8;
    dot: bytes &size=1 &requires=($$ == b".");
    minor: uint8;
};

type Headers = unit {
    headers: Header[];
    terminator: bytes &size=2 &requires=($$ == b"\r\n");
};

type Header = unit {
    name: HeaderName;
    colon: bytes &size=1 &requires=($$ == b":");
    sp: bytes &size=1 &requires=($$ == b" ");
    value: HeaderValue;
    crlf: bytes &size=2 &requires=($$ == b"\r\n");
};

type HeaderName = enum {
    ACCEPT,
    ACCEPT_CHARSET, 
    ACCEPT_ENCODING,
    ACCEPT_LANGUAGE,
    AUTHORIZATION,
    CACHE_CONTROL,
    CONNECTION, 
    CONTENT_LENGTH,
    CONTENT_TYPE,
    COOKIE,
    HOST,
    USER_AGENT
};

type HeaderValue = bytes;