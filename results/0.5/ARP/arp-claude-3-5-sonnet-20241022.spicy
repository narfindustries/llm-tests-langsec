module ARP;

public type ARPPacket = unit {
    hardware_type: uint16;
    protocol_type: uint16;
    hardware_addr_len: uint8;
    protocol_addr_len: uint8;
    operation: uint16;
    sender_hardware_addr: bytes &size=self.hardware_addr_len;
    sender_protocol_addr: bytes &size=self.protocol_addr_len;
    target_hardware_addr: bytes &size=self.hardware_addr_len;
    target_protocol_addr: bytes &size=self.protocol_addr_len;

    var hardware_type_name: string;
    var operation_name: string;
};

on ARPPacket::%done {
    self.hardware_type_name = hardware_type_string(self.hardware_type);
    self.operation_name = operation_string(self.operation);
}

function hardware_type_string(t: uint16) : string {
    switch ( t ) {
        case 1: return "Ethernet";
        case 6: return "IEEE 802 Networks";
        default: return "Unknown";
    }
}

function operation_string(o: uint16) : string {
    switch ( o ) {
        case 1: return "Request";
        case 2: return "Reply";
        default: return "Unknown";
    }
}