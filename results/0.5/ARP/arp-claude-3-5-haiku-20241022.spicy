module arp;

import spicy;

public type ARPPacket = unit {
    hardware_type: uint16 be;
    protocol_type: uint16 be;
    hardware_address_length: uint8;
    protocol_address_length: uint8;
    operation: uint16 be;
    sender_hardware_address: bytes &length=(hardware_address_length);
    sender_protocol_address: bytes &length=(protocol_address_length);
    target_hardware_address: bytes &length=(hardware_address_length);
    target_protocol_address: bytes &length=(protocol_address_length);

    on %init {
        if ( self.hardware_type != 1 )
            throw "Unsupported hardware type";
        
        if ( self.protocol_type != 0x0800 )
            throw "Unsupported protocol type";
        
        if ( self.operation !in [1, 2] )
            throw "Invalid ARP operation";
    }
};

public function parse(data: bytes) : ARPPacket {
    return new ARPPacket(data);
}