module ZIP;

type zip_local_file_header = record {
  local_file_header_signature = uint32;
  version_needed_to_extract = uint16;
  general_purpose_bit_flag = uint16;
  compression_method = uint16;
  last_mod_file_time = uint16;
  last_mod_file_date = uint16;
  crc_32 = uint32;
  compressed_size = uint32;
  uncompressed_size = uint32;
  file_name_length = uint16;
  extra_field_length = uint16;
}

type zip_file_name = record {
  file_name = bytestring;
}

type zip_extra_field = record {
  extra_field = bytestring;
}

type zip_data_descriptor = record {
  data_descriptor_signature = uint32;
  crc_32 = uint32;
  compressed_size = uint32;
  uncompressed_size = uint32;
}

type zip_central_directory_header = record {
  central_directory_header_signature = uint32;
  version_made_by = uint16;
  version_needed_to_extract = uint16;
  general_purpose_bit_flag = uint16;
  compression_method = uint16;
  last_mod_file_time = uint16;
  last_mod_file_date = uint16;
  crc_32 = uint32;
  compressed_size = uint32;
  uncompressed_size = uint32;
  file_name_length = uint16;
  extra_field_length = uint16;
  file_comment_length = uint16;
  disk_number_start = uint16;
  int_file_attr = uint16;
  ext_file_attr = uint32;
}

type zip_file_comment = record {
  file_comment = bytestring;
}

type zip_end_of_central_directory = record {
  end_of_central_dir_signature = uint32;
  num_of_this_disk = uint16;
  num_of_the_disk_with_the_start_of_the_central_directory = uint16;
  num_entries_in_the_central_directory_on_this_disk = uint16;
  num_entries_in_the_central_directory = uint16;
  size_of_the_central_directory = uint32;
  offset_of_start_of_central_directory_with_respect_to_the_starting_disk_number = uint32;
  zipfile_comment_length = uint16;
}

type zip_file = record {
  local_file_header = zip_local_file_header;
  file_name = zip_file_name;
  extra_field = zip_extra_field;
  data_descriptor = zip_data_descriptor;
  file_data = bytestring;
}

type zip_archive = record {
  files = array[zip_file];
  central_directory = array[zip_central_directory_header];
  end_of_central_directory = zip_end_of_central_directory;
  zipfile_comment = bytestring;
}

let zip_parser = parser( zip_archive ) {
  local_file_header: zip_local_file_header = {
    local_file_header_signature = 0x04034b50;
    version_needed_to_extract = 20;
    general_purpose_bit_flag = 0;
    compression_method = 0;
    last_mod_file_time = 0;
    last_mod_file_date = 0;
    crc_32 = 0;
    compressed_size = 0;
    uncompressed_size = 0;
    file_name_length = 0;
    extra_field_length = 0;
  };
  file_name: zip_file_name = {
    file_name = "example.txt";
  };
  extra_field: zip_extra_field = {
    extra_field = "";
  };
  data_descriptor: zip_data_descriptor = {
    data_descriptor_signature = 0x08074b50;
    crc_32 = 0;
    compressed_size = 0;
    uncompressed_size = 0;
  };
  file_data: bytestring = "Hello World!";
  central_directory: array[zip_central_directory_header] = [];
  end_of_central_directory: zip_end_of_central_directory = {
    end_of_central_dir_signature = 0x06054b50;
    num_of_this_disk = 0;
    num_of_the_disk_with_the_start_of_the_central_directory = 0;
    num_entries_in_the_central_directory_on_this_disk = 0;
    num_entries_in_the_central_directory = 0;
    size_of_the_central_directory = 0;
    offset_of_start_of_central_directory_with_respect_to_the_starting_disk_number = 0;
    zipfile_comment_length = 0;
  };
  zipfile_comment: bytestring = "";
};