module SQLiteDB;

import spicy;
import zeek;

public type SQLiteDB = unit {
    magic: bytes &length=16 &check=magic == "\x53\x51\x4C\x69\x74\x65\x20\x66\x6F\x72\x6D\x61\x74\x20\x33\x00";
    page_size: uint16;
    write_version: uint8;
    read_version: uint8;
    reserved_space: uint8;
    max_payload_fraction: uint8;
    min_payload_fraction: uint8;
    leaf_payload_fraction: uint8;
    file_change_counter: uint32;
    database_size: uint32;
    first_freelist_trunk_page: uint32;
    freelist_pages: uint32;
    schema_cookie: uint32;
    schema_format: uint32;
    default_page_cache_size: uint32;
    largest_btree_root_page: uint32;
    text_encoding: uint32;
    user_version: uint32;
    incremental_vacuum_mode: uint32;
    application_id: uint32;
    reserved: bytes &length=20;
    version_valid_for: uint32;
    sqlite_version: uint32;
};

public type SQLiteDBAnalyzer = unit {
    : SQLiteDB &on %done {
        print fmt("SQLiteDB parsed: Page Size=%d, Write Version=%d, Read Version=%d", $.page_size, $.write_version, $.read_version);
    };
};

public hook zeek_init() {
    Spicy::register_parser("SQLiteDB", SQLiteDBAnalyzer);
}