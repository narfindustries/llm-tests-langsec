module DNS;

type DNSHeader = unit {
    id: uint16;
    flags: uint16;
    qdcount: uint16;
    ancount: uint16;
    nscount: uint16;
    arcount: uint16;
};

type DomainName = unit {
    labels: bytes &until(input == 0);

    on %init {
        # Consume the null byte marking the end of the domain name.
        local _ = input;
    }
};

type DNSQuestion = unit {
    qname: DomainName;
    qtype: uint16;
    qclass: uint16;
};

type DNSResourceRecord = unit {
    name: DomainName;
    type: uint16;
    class: uint16;
    ttl: uint32;
    rdlength: uint16;
    rdata: bytes &length=rdlength;
};

type DNSMessage = unit {
    header: DNSHeader;
    questions: DNSQuestion[header.qdcount];
    answers: DNSResourceRecord[header.ancount];
    authorities: DNSResourceRecord[header.nscount];
    additionals: DNSResourceRecord[header.arcount];
};