module ICMP;

type ICMP_Type = enum {
  echo_reply = 0,
  reserved_1 = 1,
  reserved_2 = 2,
  destination_unreachable = 3,
  source_quench = 4,
  redirect = 5,
  reserved_6 = 6,
  reserved_7 = 7,
  echo_request = 8,
  reserved_9 = 9,
  reserved_10 = 10,
  time_exceeded = 11,
  parameter_problem = 12,
  reserved_13 = 13,
  reserved_14 = 14,
  reserved_15 = 15,
  gateway_unreachable = 16,
  host_unreachable = 17,
  protocol_unreachable = 18,
  port_unreachable = 19,
  fragmentation_needed = 20,
  source_route_failed = 21,
  reserved_22 = 22,
  reserved_23 = 23,
  reserved_24 = 24,
  reserved_25 = 25,
  reserved_26 = 26,
  reserved_27 = 27,
  reserved_28 = 28,
  reserved_29 = 29,
  traceroute = 30,
  datagram_conversion_error = 31,
  photuris = 40
};

type ICMP_Code = uint8;

type ICMP = struct {
  type: ICMP_Type,
  code: ICMP_Code,
  checksum: uint16,
  identifier: uint16,
  sequence_number: uint16,
  gateway_internet_address: uint32,
  mtu: uint16,
  unused: padding to 32 bits,
  data: bytes
} &byteorder=bigendian;

let icmp = ICMP;